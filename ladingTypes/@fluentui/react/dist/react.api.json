{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.7.1",
    "schemaVersion": 1003,
    "oldestForwardsCompatibleVersion": 1001
  },
  "kind": "Package",
  "canonicalReference": "@fluentui/react!",
  "docComment": "",
  "name": "@fluentui/react",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@fluentui/react!",
      "name": "",
      "members": [
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/react!Breadcrumb:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Breadcrumb: "
            },
            {
              "kind": "Reference",
              "text": "React.FunctionComponent",
              "canonicalReference": "@types/react!~React.FunctionComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IBreadcrumbProps",
              "canonicalReference": "@fluentui/react!IBreadcrumbProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "releaseTag": "Public",
          "name": "Breadcrumb",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluentui/react!BreadcrumbBase:class",
          "docComment": "/**\n * {@docCategory Breadcrumb}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class BreadcrumbBase extends "
            },
            {
              "kind": "Reference",
              "text": "React.Component",
              "canonicalReference": "@types/react!~React.Component:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IBreadcrumbProps",
              "canonicalReference": "@fluentui/react!IBreadcrumbProps:interface"
            },
            {
              "kind": "Content",
              "text": ", any> "
            }
          ],
          "releaseTag": "Public",
          "name": "BreadcrumbBase",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@fluentui/react!BreadcrumbBase:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `BreadcrumbBase` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(props: "
                },
                {
                  "kind": "Reference",
                  "text": "IBreadcrumbProps",
                  "canonicalReference": "@fluentui/react!IBreadcrumbProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluentui/react!BreadcrumbBase.defaultProps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static defaultProps: "
                },
                {
                  "kind": "Reference",
                  "text": "IBreadcrumbProps",
                  "canonicalReference": "@fluentui/react!IBreadcrumbProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "defaultProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!BreadcrumbBase#focus:member(1)",
              "docComment": "/**\n * Sets focus to the first breadcrumb link.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "focus(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "focus"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!BreadcrumbBase#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(): "
                },
                {
                  "kind": "Reference",
                  "text": "JSX.Element",
                  "canonicalReference": "@types/react!~__global.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "render"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/react!buildColumns:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function buildColumns(items: "
            },
            {
              "kind": "Content",
              "text": "any[]"
            },
            {
              "kind": "Content",
              "text": ", canResizeColumns?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ", onColumnClick?: "
            },
            {
              "kind": "Content",
              "text": "(ev: "
            },
            {
              "kind": "Reference",
              "text": "React.MouseEvent",
              "canonicalReference": "@types/react!~React.MouseEvent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": ">, column: "
            },
            {
              "kind": "Reference",
              "text": "IColumn",
              "canonicalReference": "@fluentui/react!IColumn:interface"
            },
            {
              "kind": "Content",
              "text": ") => void"
            },
            {
              "kind": "Content",
              "text": ", sortedColumnKey?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", isSortedDescending?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ", groupedColumnKey?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", isMultiline?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IColumn",
              "canonicalReference": "@fluentui/react!IColumn:interface"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 21,
            "endIndex": 23
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "items",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "canResizeColumns",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "onColumnClick",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 12
              }
            },
            {
              "parameterName": "sortedColumnKey",
              "parameterTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 14
              }
            },
            {
              "parameterName": "isSortedDescending",
              "parameterTypeTokenRange": {
                "startIndex": 15,
                "endIndex": 16
              }
            },
            {
              "parameterName": "groupedColumnKey",
              "parameterTypeTokenRange": {
                "startIndex": 17,
                "endIndex": 18
              }
            },
            {
              "parameterName": "isMultiline",
              "parameterTypeTokenRange": {
                "startIndex": 19,
                "endIndex": 20
              }
            }
          ],
          "name": "buildColumns"
        },
        {
          "kind": "Enum",
          "canonicalReference": "@fluentui/react!CheckboxVisibility:enum",
          "docComment": "/**\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum CheckboxVisibility "
            }
          ],
          "releaseTag": "Public",
          "name": "CheckboxVisibility",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluentui/react!CheckboxVisibility.always:member",
              "docComment": "/**\n * Visible always.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "always = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "releaseTag": "Public",
              "name": "always",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluentui/react!CheckboxVisibility.hidden:member",
              "docComment": "/**\n * Hide checkboxes.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hidden = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "releaseTag": "Public",
              "name": "hidden",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluentui/react!CheckboxVisibility.onHover:member",
              "docComment": "/**\n * Visible on hover.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onHover = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "releaseTag": "Public",
              "name": "onHover",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Enum",
          "canonicalReference": "@fluentui/react!CollapseAllVisibility:enum",
          "docComment": "/**\n * {@docCategory GroupedList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum CollapseAllVisibility "
            }
          ],
          "releaseTag": "Public",
          "name": "CollapseAllVisibility",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluentui/react!CollapseAllVisibility.hidden:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hidden = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "releaseTag": "Public",
              "name": "hidden",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluentui/react!CollapseAllVisibility.visible:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "visible = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "releaseTag": "Public",
              "name": "visible",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Enum",
          "canonicalReference": "@fluentui/react!ColumnActionsMode:enum",
          "docComment": "/**\n * Enum to describe how a particular column header behaves. This is used to to specify the property `IColumn.columnActionsMode`. If `IColumn.columnActionsMode` is undefined, it's equivalent to `ColumnActionsMode.clickable`. {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum ColumnActionsMode "
            }
          ],
          "releaseTag": "Public",
          "name": "ColumnActionsMode",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluentui/react!ColumnActionsMode.clickable:member",
              "docComment": "/**\n * Renders the column header as clickable. Default value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clickable = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "releaseTag": "Public",
              "name": "clickable",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluentui/react!ColumnActionsMode.disabled:member",
              "docComment": "/**\n * Renders the column header as disabled.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "disabled = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "releaseTag": "Public",
              "name": "disabled",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluentui/react!ColumnActionsMode.hasDropdown:member",
              "docComment": "/**\n * Renders the column header as clickable and displays the dropdown chevron.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasDropdown = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "releaseTag": "Public",
              "name": "hasDropdown",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Enum",
          "canonicalReference": "@fluentui/react!ColumnDragEndLocation:enum",
          "docComment": "/**\n * Enum to describe where the column has been dropped, after starting the drag {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum ColumnDragEndLocation "
            }
          ],
          "releaseTag": "Public",
          "name": "ColumnDragEndLocation",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluentui/react!ColumnDragEndLocation.header:member",
              "docComment": "/**\n * Drag ended on header\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "header = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "releaseTag": "Public",
              "name": "header",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluentui/react!ColumnDragEndLocation.outside:member",
              "docComment": "/**\n * Drag ended outside of current list\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "outside = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "releaseTag": "Public",
              "name": "outside",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluentui/react!ColumnDragEndLocation.surface:member",
              "docComment": "/**\n * Drag ended within current list\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "surface = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "releaseTag": "Public",
              "name": "surface",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/react!ComboBox:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "ComboBox: "
            },
            {
              "kind": "Reference",
              "text": "React.FunctionComponent",
              "canonicalReference": "@types/react!~React.FunctionComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IComboBoxProps",
              "canonicalReference": "@fluentui/react!IComboBoxProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "releaseTag": "Public",
          "name": "ComboBox",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Enum",
          "canonicalReference": "@fluentui/react!ConstrainMode:enum",
          "docComment": "/**\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum ConstrainMode "
            }
          ],
          "releaseTag": "Public",
          "name": "ConstrainMode",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluentui/react!ConstrainMode.horizontalConstrained:member",
              "docComment": "/**\n * Constrains the list to the given layout space.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "horizontalConstrained = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "releaseTag": "Public",
              "name": "horizontalConstrained",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluentui/react!ConstrainMode.unconstrained:member",
              "docComment": "/**\n * Lets the content grow which allows the page to manage scrolling.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "unconstrained = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "releaseTag": "Public",
              "name": "unconstrained",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/react!DEFAULT_CELL_STYLE_PROPS:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DEFAULT_CELL_STYLE_PROPS: "
            },
            {
              "kind": "Reference",
              "text": "ICellStyleProps",
              "canonicalReference": "@fluentui/react!ICellStyleProps:interface"
            }
          ],
          "releaseTag": "Public",
          "name": "DEFAULT_CELL_STYLE_PROPS",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/react!DEFAULT_ROW_HEIGHTS:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DEFAULT_ROW_HEIGHTS: "
            },
            {
              "kind": "Content",
              "text": "{\n    rowHeight: number;\n    compactRowHeight: number;\n}"
            }
          ],
          "releaseTag": "Public",
          "name": "DEFAULT_ROW_HEIGHTS",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluentui/react!DetailsColumnBase:class",
          "docComment": "/**\n * Component for rendering columns in a `DetailsList`.\n *\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DetailsColumnBase extends "
            },
            {
              "kind": "Reference",
              "text": "React.Component",
              "canonicalReference": "@types/react!~React.Component:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDetailsColumnProps",
              "canonicalReference": "@fluentui/react!IDetailsColumnProps:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "DetailsColumnBase",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@fluentui/react!DetailsColumnBase:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `DetailsColumnBase` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(props: "
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsColumnProps",
                  "canonicalReference": "@fluentui/react!IDetailsColumnProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!DetailsColumnBase#componentDidMount:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentDidMount(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "componentDidMount"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!DetailsColumnBase#componentDidUpdate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentDidUpdate(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "componentDidUpdate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!DetailsColumnBase#componentWillUnmount:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentWillUnmount(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "componentWillUnmount"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!DetailsColumnBase#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(): "
                },
                {
                  "kind": "Reference",
                  "text": "JSX.Element",
                  "canonicalReference": "@types/react!~__global.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "render"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/react!DetailsHeader:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DetailsHeader: "
            },
            {
              "kind": "Reference",
              "text": "React.FunctionComponent",
              "canonicalReference": "@types/react!~React.FunctionComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDetailsHeaderBaseProps",
              "canonicalReference": "@fluentui/react!IDetailsHeaderBaseProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "releaseTag": "Public",
          "name": "DetailsHeader",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluentui/react!DetailsHeaderBase:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DetailsHeaderBase extends "
            },
            {
              "kind": "Reference",
              "text": "React.Component",
              "canonicalReference": "@types/react!~React.Component:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDetailsHeaderBaseProps",
              "canonicalReference": "@fluentui/react!IDetailsHeaderBaseProps:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "IDetailsHeaderState",
              "canonicalReference": "@fluentui/react!IDetailsHeaderState:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            },
            {
              "kind": "Content",
              "text": "implements "
            },
            {
              "kind": "Reference",
              "text": "IDetailsHeader",
              "canonicalReference": "@fluentui/react!IDetailsHeader:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "DetailsHeaderBase",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@fluentui/react!DetailsHeaderBase:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `DetailsHeaderBase` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(props: "
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsHeaderBaseProps",
                  "canonicalReference": "@fluentui/react!IDetailsHeaderBaseProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!DetailsHeaderBase#componentDidMount:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentDidMount(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "componentDidMount"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!DetailsHeaderBase#componentDidUpdate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentDidUpdate(prevProps: "
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsHeaderBaseProps",
                  "canonicalReference": "@fluentui/react!IDetailsHeaderBaseProps:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "prevProps",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "componentDidUpdate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!DetailsHeaderBase#componentWillUnmount:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentWillUnmount(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "componentWillUnmount"
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluentui/react!DetailsHeaderBase.defaultProps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static defaultProps: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        selectAllVisibility: "
                },
                {
                  "kind": "Reference",
                  "text": "SelectAllVisibility",
                  "canonicalReference": "@fluentui/react!SelectAllVisibility:enum"
                },
                {
                  "kind": "Content",
                  "text": ";\n        collapseAllVisibility: "
                },
                {
                  "kind": "Reference",
                  "text": "CollapseAllVisibility",
                  "canonicalReference": "@fluentui/react!CollapseAllVisibility:enum"
                },
                {
                  "kind": "Content",
                  "text": ";\n        useFastIcons: boolean;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "defaultProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "isStatic": true
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!DetailsHeaderBase#focus:member(1)",
              "docComment": "/**\n * Set focus to the active thing in the focus area.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "focus(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "focus"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!DetailsHeaderBase#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(): "
                },
                {
                  "kind": "Reference",
                  "text": "JSX.Element",
                  "canonicalReference": "@types/react!~__global.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "render"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          },
          "implementsTokenRanges": [
            {
              "startIndex": 8,
              "endIndex": 10
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/react!DetailsList:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DetailsList: "
            },
            {
              "kind": "Reference",
              "text": "React.FunctionComponent",
              "canonicalReference": "@types/react!~React.FunctionComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDetailsListProps",
              "canonicalReference": "@fluentui/react!IDetailsListProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "releaseTag": "Public",
          "name": "DetailsList",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluentui/react!DetailsListBase:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DetailsListBase extends "
            },
            {
              "kind": "Reference",
              "text": "React.Component",
              "canonicalReference": "@types/react!~React.Component:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDetailsListProps",
              "canonicalReference": "@fluentui/react!IDetailsListProps:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "IDetailsListState",
              "canonicalReference": "@fluentui/react!IDetailsListState:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            },
            {
              "kind": "Content",
              "text": "implements "
            },
            {
              "kind": "Reference",
              "text": "IDetailsList",
              "canonicalReference": "@fluentui/react!IDetailsList:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "DetailsListBase",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@fluentui/react!DetailsListBase#_onRenderRow:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected _onRenderRow: "
                },
                {
                  "kind": "Content",
                  "text": "(props: "
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsRowProps",
                  "canonicalReference": "@fluentui/react!IDetailsRowProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ", defaultRender?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRenderFunction",
                  "canonicalReference": "@fluentui/utilities!IRenderFunction:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsRowProps",
                  "canonicalReference": "@fluentui/react!IDetailsRowProps:interface"
                },
                {
                  "kind": "Content",
                  "text": "> | undefined) => "
                },
                {
                  "kind": "Reference",
                  "text": "JSX.Element",
                  "canonicalReference": "@types/react!~__global.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "_onRenderRow",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              },
              "isStatic": false
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@fluentui/react!DetailsListBase:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `DetailsListBase` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(props: "
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsListProps",
                  "canonicalReference": "@fluentui/react!IDetailsListProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!DetailsListBase#componentDidUpdate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentDidUpdate(prevProps: "
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsListProps",
                  "canonicalReference": "@fluentui/react!IDetailsListProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ", prevState: "
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsListState",
                  "canonicalReference": "@fluentui/react!IDetailsListState:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "prevProps",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "prevState",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "componentDidUpdate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!DetailsListBase#componentWillUnmount:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentWillUnmount(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "componentWillUnmount"
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluentui/react!DetailsListBase.defaultProps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static defaultProps: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        layoutMode: "
                },
                {
                  "kind": "Reference",
                  "text": "DetailsListLayoutMode",
                  "canonicalReference": "@fluentui/react!DetailsListLayoutMode:enum"
                },
                {
                  "kind": "Content",
                  "text": ";\n        selectionMode: "
                },
                {
                  "kind": "Reference",
                  "text": "SelectionMode",
                  "canonicalReference": "@fluentui/utilities!SelectionMode:enum"
                },
                {
                  "kind": "Content",
                  "text": ";\n        constrainMode: "
                },
                {
                  "kind": "Reference",
                  "text": "ConstrainMode",
                  "canonicalReference": "@fluentui/react!ConstrainMode:enum"
                },
                {
                  "kind": "Content",
                  "text": ";\n        checkboxVisibility: "
                },
                {
                  "kind": "Reference",
                  "text": "CheckboxVisibility",
                  "canonicalReference": "@fluentui/react!CheckboxVisibility:enum"
                },
                {
                  "kind": "Content",
                  "text": ";\n        isHeaderVisible: boolean;\n        compact: boolean;\n        useFastIcons: boolean;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "defaultProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 10
              },
              "isStatic": true
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!DetailsListBase#focusIndex:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "focusIndex(index: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", forceIntoFirstElement?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", measureItem?: "
                },
                {
                  "kind": "Content",
                  "text": "(itemIndex: number) => number"
                },
                {
                  "kind": "Content",
                  "text": ", scrollToMode?: "
                },
                {
                  "kind": "Reference",
                  "text": "ScrollToMode",
                  "canonicalReference": "@fluentui/react-internal!ScrollToMode:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "index",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "forceIntoFirstElement",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "measureItem",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "scrollToMode",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                }
              ],
              "name": "focusIndex"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!DetailsListBase#forceUpdate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forceUpdate(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "forceUpdate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!DetailsListBase.getDerivedStateFromProps:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static getDerivedStateFromProps(nextProps: "
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsListProps",
                  "canonicalReference": "@fluentui/react!IDetailsListProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ", previousState: "
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsListState",
                  "canonicalReference": "@fluentui/react!IDetailsListState:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsListState",
                  "canonicalReference": "@fluentui/react!IDetailsListState:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "nextProps",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "previousState",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getDerivedStateFromProps"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!DetailsListBase#getStartItemIndexInView:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getStartItemIndexInView(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getStartItemIndexInView"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!DetailsListBase#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(): "
                },
                {
                  "kind": "Reference",
                  "text": "JSX.Element",
                  "canonicalReference": "@types/react!~__global.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "render"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!DetailsListBase#scrollToIndex:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scrollToIndex(index: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", measureItem?: "
                },
                {
                  "kind": "Content",
                  "text": "(itemIndex: number) => number"
                },
                {
                  "kind": "Content",
                  "text": ", scrollToMode?: "
                },
                {
                  "kind": "Reference",
                  "text": "ScrollToMode",
                  "canonicalReference": "@fluentui/react-internal!ScrollToMode:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "index",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "measureItem",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "scrollToMode",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "scrollToIndex"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          },
          "implementsTokenRanges": [
            {
              "startIndex": 8,
              "endIndex": 10
            }
          ]
        },
        {
          "kind": "Enum",
          "canonicalReference": "@fluentui/react!DetailsListLayoutMode:enum",
          "docComment": "/**\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum DetailsListLayoutMode "
            }
          ],
          "releaseTag": "Public",
          "name": "DetailsListLayoutMode",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluentui/react!DetailsListLayoutMode.fixedColumns:member",
              "docComment": "/**\n * Lets the user resize columns and makes not attempt to fit them.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fixedColumns = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "releaseTag": "Public",
              "name": "fixedColumns",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluentui/react!DetailsListLayoutMode.justified:member",
              "docComment": "/**\n * Manages which columns are visible, tries to size them according to their min/max rules and drops off columns that can't fit and have isCollapsible set.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "justified = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "releaseTag": "Public",
              "name": "justified",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/react!DetailsRow:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DetailsRow: "
            },
            {
              "kind": "Reference",
              "text": "React.FunctionComponent",
              "canonicalReference": "@types/react!~React.FunctionComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDetailsRowBaseProps",
              "canonicalReference": "@fluentui/react!IDetailsRowBaseProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "releaseTag": "Public",
          "name": "DetailsRow",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluentui/react!DetailsRowBase:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DetailsRowBase extends "
            },
            {
              "kind": "Reference",
              "text": "React.Component",
              "canonicalReference": "@types/react!~React.Component:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDetailsRowBaseProps",
              "canonicalReference": "@fluentui/react!IDetailsRowBaseProps:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "IDetailsRowState",
              "canonicalReference": "@fluentui/react!IDetailsRowState:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "DetailsRowBase",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!DetailsRowBase#_onRenderCheck:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected _onRenderCheck(props: "
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsRowCheckProps",
                  "canonicalReference": "@fluentui/react!IDetailsRowCheckProps:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "JSX.Element",
                  "canonicalReference": "@types/react!~__global.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "_onRenderCheck"
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@fluentui/react!DetailsRowBase:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `DetailsRowBase` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(props: "
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsRowBaseProps",
                  "canonicalReference": "@fluentui/react!IDetailsRowBaseProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!DetailsRowBase#componentDidMount:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentDidMount(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "componentDidMount"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!DetailsRowBase#componentDidUpdate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentDidUpdate(previousProps: "
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsRowBaseProps",
                  "canonicalReference": "@fluentui/react!IDetailsRowBaseProps:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "previousProps",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "componentDidUpdate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!DetailsRowBase#componentWillUnmount:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentWillUnmount(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "componentWillUnmount"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!DetailsRowBase#focus:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "focus(forceIntoFirstElement?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "forceIntoFirstElement",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "focus"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!DetailsRowBase.getDerivedStateFromProps:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static getDerivedStateFromProps(nextProps: "
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsRowBaseProps",
                  "canonicalReference": "@fluentui/react!IDetailsRowBaseProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ", previousState: "
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsRowState",
                  "canonicalReference": "@fluentui/react!IDetailsRowState:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsRowState",
                  "canonicalReference": "@fluentui/react!IDetailsRowState:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "nextProps",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "previousState",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getDerivedStateFromProps"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!DetailsRowBase#measureCell:member(1)",
              "docComment": "/**\n * measure cell at index. and call the call back with the measured cell width when finish measure\n *\n * @param index - The cell index\n *\n * @param onMeasureDone - The call back function when finish measure\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "measureCell(index: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", onMeasureDone: "
                },
                {
                  "kind": "Content",
                  "text": "(width: number) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "index",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "onMeasureDone",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "measureCell"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!DetailsRowBase#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(): "
                },
                {
                  "kind": "Reference",
                  "text": "JSX.Element",
                  "canonicalReference": "@types/react!~__global.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "render"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!DetailsRowBase#shouldComponentUpdate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "shouldComponentUpdate(nextProps: "
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsRowBaseProps",
                  "canonicalReference": "@fluentui/react!IDetailsRowBaseProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ", nextState: "
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsRowState",
                  "canonicalReference": "@fluentui/react!IDetailsRowState:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "nextProps",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "nextState",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "shouldComponentUpdate"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/react!DetailsRowCheck:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DetailsRowCheck: "
            },
            {
              "kind": "Reference",
              "text": "React.FunctionComponent",
              "canonicalReference": "@types/react!~React.FunctionComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDetailsRowCheckProps",
              "canonicalReference": "@fluentui/react!IDetailsRowCheckProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "releaseTag": "Public",
          "name": "DetailsRowCheck",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/react!DetailsRowFields:var",
          "docComment": "/**\n * Component for rendering a row's cells in a `DetailsList`.\n *\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DetailsRowFields: "
            },
            {
              "kind": "Reference",
              "text": "React.FunctionComponent",
              "canonicalReference": "@types/react!~React.FunctionComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDetailsRowFieldsProps",
              "canonicalReference": "@fluentui/react!IDetailsRowFieldsProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "releaseTag": "Public",
          "name": "DetailsRowFields",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/react!DetailsRowGlobalClassNames:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DetailsRowGlobalClassNames: "
            },
            {
              "kind": "Content",
              "text": "{\n    root: string;\n    compact: string;\n    cell: string;\n    cellAnimation: string;\n    cellCheck: string;\n    check: string;\n    cellMeasurer: string;\n    listCellFirstChild: string;\n    isContentUnselectable: string;\n    isSelected: string;\n    isCheckVisible: string;\n    isRowHeader: string;\n    fields: string;\n}"
            }
          ],
          "releaseTag": "Public",
          "name": "DetailsRowGlobalClassNames",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/react!DocumentCard:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DocumentCard: "
            },
            {
              "kind": "Reference",
              "text": "React.FunctionComponent",
              "canonicalReference": "@types/react!~React.FunctionComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDocumentCardProps",
              "canonicalReference": "@fluentui/react!IDocumentCardProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "releaseTag": "Public",
          "name": "DocumentCard",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/react!DocumentCardActions:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DocumentCardActions: "
            },
            {
              "kind": "Reference",
              "text": "React.FunctionComponent",
              "canonicalReference": "@types/react!~React.FunctionComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDocumentCardActionsProps",
              "canonicalReference": "@fluentui/react!IDocumentCardActionsProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "releaseTag": "Public",
          "name": "DocumentCardActions",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/react!DocumentCardActivity:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DocumentCardActivity: "
            },
            {
              "kind": "Reference",
              "text": "React.FunctionComponent",
              "canonicalReference": "@types/react!~React.FunctionComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDocumentCardActivityProps",
              "canonicalReference": "@fluentui/react!IDocumentCardActivityProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "releaseTag": "Public",
          "name": "DocumentCardActivity",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/react!DocumentCardDetails:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DocumentCardDetails: "
            },
            {
              "kind": "Reference",
              "text": "React.FunctionComponent",
              "canonicalReference": "@types/react!~React.FunctionComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDocumentCardDetailsProps",
              "canonicalReference": "@fluentui/react!IDocumentCardDetailsProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "releaseTag": "Public",
          "name": "DocumentCardDetails",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/react!DocumentCardImage:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DocumentCardImage: "
            },
            {
              "kind": "Reference",
              "text": "React.FunctionComponent",
              "canonicalReference": "@types/react!~React.FunctionComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDocumentCardImageProps",
              "canonicalReference": "@fluentui/react!IDocumentCardImageProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "releaseTag": "Public",
          "name": "DocumentCardImage",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/react!DocumentCardLocation:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DocumentCardLocation: "
            },
            {
              "kind": "Reference",
              "text": "React.FunctionComponent",
              "canonicalReference": "@types/react!~React.FunctionComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDocumentCardLocationProps",
              "canonicalReference": "@fluentui/react!IDocumentCardLocationProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "releaseTag": "Public",
          "name": "DocumentCardLocation",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/react!DocumentCardLogo:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DocumentCardLogo: "
            },
            {
              "kind": "Reference",
              "text": "React.FunctionComponent",
              "canonicalReference": "@types/react!~React.FunctionComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDocumentCardLogoProps",
              "canonicalReference": "@fluentui/react!IDocumentCardLogoProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "releaseTag": "Public",
          "name": "DocumentCardLogo",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/react!DocumentCardPreview:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DocumentCardPreview: "
            },
            {
              "kind": "Reference",
              "text": "React.FunctionComponent",
              "canonicalReference": "@types/react!~React.FunctionComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDocumentCardPreviewProps",
              "canonicalReference": "@fluentui/react!IDocumentCardPreviewProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "releaseTag": "Public",
          "name": "DocumentCardPreview",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/react!DocumentCardStatus:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DocumentCardStatus: "
            },
            {
              "kind": "Reference",
              "text": "React.FunctionComponent",
              "canonicalReference": "@types/react!~React.FunctionComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDocumentCardStatusProps",
              "canonicalReference": "@fluentui/react!IDocumentCardStatusProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "releaseTag": "Public",
          "name": "DocumentCardStatus",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/react!DocumentCardTitle:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DocumentCardTitle: "
            },
            {
              "kind": "Reference",
              "text": "React.FunctionComponent",
              "canonicalReference": "@types/react!~React.FunctionComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDocumentCardTitleProps",
              "canonicalReference": "@fluentui/react!IDocumentCardTitleProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "releaseTag": "Public",
          "name": "DocumentCardTitle",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Enum",
          "canonicalReference": "@fluentui/react!DocumentCardType:enum",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum DocumentCardType "
            }
          ],
          "releaseTag": "Public",
          "name": "DocumentCardType",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluentui/react!DocumentCardType.compact:member",
              "docComment": "/**\n * Compact layout. Displays the preview beside the details, rather than above.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compact = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "releaseTag": "Public",
              "name": "compact",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluentui/react!DocumentCardType.normal:member",
              "docComment": "/**\n * Standard DocumentCard.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "normal = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "releaseTag": "Public",
              "name": "normal",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/react!Dropdown:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Dropdown: "
            },
            {
              "kind": "Reference",
              "text": "React.FunctionComponent",
              "canonicalReference": "@types/react!~React.FunctionComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDropdownProps",
              "canonicalReference": "@fluentui/react!IDropdownProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "releaseTag": "Public",
          "name": "Dropdown",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/react!DropdownBase:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DropdownBase: "
            },
            {
              "kind": "Reference",
              "text": "React.FunctionComponent",
              "canonicalReference": "@types/react!~React.FunctionComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDropdownProps",
              "canonicalReference": "@fluentui/react!IDropdownProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "releaseTag": "Public",
          "name": "DropdownBase",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/react!getDetailsRowStyles:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "getDetailsRowStyles: "
            },
            {
              "kind": "Content",
              "text": "(props: "
            },
            {
              "kind": "Reference",
              "text": "IDetailsRowStyleProps",
              "canonicalReference": "@fluentui/react!IDetailsRowStyleProps:type"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "IDetailsRowStyles",
              "canonicalReference": "@fluentui/react!IDetailsRowStyles:interface"
            }
          ],
          "releaseTag": "Public",
          "name": "getDetailsRowStyles",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/react!GroupedList:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "GroupedList: "
            },
            {
              "kind": "Reference",
              "text": "React.FunctionComponent",
              "canonicalReference": "@types/react!~React.FunctionComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IGroupedListProps",
              "canonicalReference": "@fluentui/react!IGroupedListProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "releaseTag": "Public",
          "name": "GroupedList",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluentui/react!GroupedListBase:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class GroupedListBase extends "
            },
            {
              "kind": "Reference",
              "text": "React.Component",
              "canonicalReference": "@types/react!~React.Component:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IGroupedListProps",
              "canonicalReference": "@fluentui/react!IGroupedListProps:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "IGroupedListState",
              "canonicalReference": "@fluentui/react!IGroupedListState:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            },
            {
              "kind": "Content",
              "text": "implements "
            },
            {
              "kind": "Reference",
              "text": "IGroupedList",
              "canonicalReference": "@fluentui/react!IGroupedList:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "GroupedListBase",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@fluentui/react!GroupedListBase:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `GroupedListBase` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(props: "
                },
                {
                  "kind": "Reference",
                  "text": "IGroupedListProps",
                  "canonicalReference": "@fluentui/react!IGroupedListProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!GroupedListBase#componentDidMount:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentDidMount(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "componentDidMount"
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluentui/react!GroupedListBase.defaultProps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static defaultProps: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        selectionMode: "
                },
                {
                  "kind": "Reference",
                  "text": "SelectionMode",
                  "canonicalReference": "@fluentui/utilities!SelectionMode:enum"
                },
                {
                  "kind": "Content",
                  "text": ";\n        isHeaderVisible: boolean;\n        groupProps: {};\n        compact: boolean;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "defaultProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": true
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!GroupedListBase#forceUpdate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forceUpdate(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "forceUpdate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!GroupedListBase.getDerivedStateFromProps:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static getDerivedStateFromProps(nextProps: "
                },
                {
                  "kind": "Reference",
                  "text": "IGroupedListProps",
                  "canonicalReference": "@fluentui/react!IGroupedListProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ", previousState: "
                },
                {
                  "kind": "Reference",
                  "text": "IGroupedListState",
                  "canonicalReference": "@fluentui/react!IGroupedListState:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IGroupedListState",
                  "canonicalReference": "@fluentui/react!IGroupedListState:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "nextProps",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "previousState",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getDerivedStateFromProps"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!GroupedListBase#getStartItemIndexInView:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getStartItemIndexInView(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getStartItemIndexInView"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!GroupedListBase#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(): "
                },
                {
                  "kind": "Reference",
                  "text": "JSX.Element",
                  "canonicalReference": "@types/react!~__global.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "render"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!GroupedListBase#scrollToIndex:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scrollToIndex(index: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", measureItem?: "
                },
                {
                  "kind": "Content",
                  "text": "(itemIndex: number) => number"
                },
                {
                  "kind": "Content",
                  "text": ", scrollToMode?: "
                },
                {
                  "kind": "Reference",
                  "text": "ScrollToMode",
                  "canonicalReference": "@fluentui/react-internal!ScrollToMode:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "index",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "measureItem",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "scrollToMode",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "scrollToIndex"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!GroupedListBase#toggleCollapseAll:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toggleCollapseAll(allCollapsed: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "allCollapsed",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "toggleCollapseAll"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          },
          "implementsTokenRanges": [
            {
              "startIndex": 8,
              "endIndex": 10
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluentui/react!GroupedListSection:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class GroupedListSection extends "
            },
            {
              "kind": "Reference",
              "text": "React.Component",
              "canonicalReference": "@types/react!~React.Component:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IGroupedListSectionProps",
              "canonicalReference": "@fluentui/react!IGroupedListSectionProps:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "IGroupedListSectionState",
              "canonicalReference": "@fluentui/react!IGroupedListSectionState:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "GroupedListSection",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@fluentui/react!GroupedListSection:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `GroupedListSection` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(props: "
                },
                {
                  "kind": "Reference",
                  "text": "IGroupedListSectionProps",
                  "canonicalReference": "@fluentui/react!IGroupedListSectionProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!GroupedListSection#componentDidMount:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentDidMount(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "componentDidMount"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!GroupedListSection#componentDidUpdate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentDidUpdate(previousProps: "
                },
                {
                  "kind": "Reference",
                  "text": "IGroupedListSectionProps",
                  "canonicalReference": "@fluentui/react!IGroupedListSectionProps:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "previousProps",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "componentDidUpdate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!GroupedListSection#componentWillUnmount:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentWillUnmount(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "componentWillUnmount"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!GroupedListSection#forceListUpdate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forceListUpdate(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "forceListUpdate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!GroupedListSection#forceUpdate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forceUpdate(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "forceUpdate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!GroupedListSection#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(): "
                },
                {
                  "kind": "Reference",
                  "text": "JSX.Element",
                  "canonicalReference": "@types/react!~__global.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "render"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/react!GroupFooter:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "GroupFooter: "
            },
            {
              "kind": "Reference",
              "text": "React.FunctionComponent",
              "canonicalReference": "@types/react!~React.FunctionComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IGroupFooterProps",
              "canonicalReference": "@fluentui/react!IGroupFooterProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "releaseTag": "Public",
          "name": "GroupFooter",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/react!GroupHeader:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "GroupHeader: "
            },
            {
              "kind": "Reference",
              "text": "React.FunctionComponent",
              "canonicalReference": "@types/react!~React.FunctionComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IGroupHeaderProps",
              "canonicalReference": "@fluentui/react!IGroupHeaderProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "releaseTag": "Public",
          "name": "GroupHeader",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/react!GroupShowAll:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "GroupShowAll: "
            },
            {
              "kind": "Reference",
              "text": "React.FunctionComponent",
              "canonicalReference": "@types/react!~React.FunctionComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IGroupShowAllProps",
              "canonicalReference": "@fluentui/react!IGroupShowAllProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "releaseTag": "Public",
          "name": "GroupShowAll",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/react!GroupSpacer:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "GroupSpacer: "
            },
            {
              "kind": "Reference",
              "text": "React.FunctionComponent",
              "canonicalReference": "@types/react!~React.FunctionComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IGroupSpacerProps",
              "canonicalReference": "@fluentui/react!IGroupSpacerProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "releaseTag": "Public",
          "name": "GroupSpacer",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IBreadcrumb:interface",
          "docComment": "/**\n * {@docCategory Breadcrumb}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IBreadcrumb "
            }
          ],
          "releaseTag": "Public",
          "name": "IBreadcrumb",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluentui/react!IBreadcrumb#focus:member(1)",
              "docComment": "/**\n * Sets focus to the first breadcrumb link.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "focus(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "focus"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IBreadcrumbData:interface",
          "docComment": "/**\n * {@docCategory Breadcrumb}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IBreadcrumbData "
            }
          ],
          "releaseTag": "Public",
          "name": "IBreadcrumbData",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IBreadcrumbData#props:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "props: "
                },
                {
                  "kind": "Reference",
                  "text": "IBreadcrumbProps",
                  "canonicalReference": "@fluentui/react!IBreadcrumbProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "props",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IBreadcrumbData#renderedItems:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "renderedItems: "
                },
                {
                  "kind": "Reference",
                  "text": "IBreadcrumbItem",
                  "canonicalReference": "@fluentui/react!IBreadcrumbItem:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "renderedItems",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IBreadcrumbData#renderedOverflowItems:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "renderedOverflowItems: "
                },
                {
                  "kind": "Reference",
                  "text": "IBreadcrumbItem",
                  "canonicalReference": "@fluentui/react!IBreadcrumbItem:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "renderedOverflowItems",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluentui/react!IBreadCrumbData:type",
          "docComment": "/**\n * @deprecated\n *\n * Use IBreadcrumbData\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type IBreadCrumbData = "
            },
            {
              "kind": "Reference",
              "text": "IBreadcrumbData",
              "canonicalReference": "@fluentui/react!IBreadcrumbData:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "IBreadCrumbData",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IBreadcrumbItem:interface",
          "docComment": "/**\n * {@docCategory Breadcrumb}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IBreadcrumbItem "
            }
          ],
          "releaseTag": "Public",
          "name": "IBreadcrumbItem",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IBreadcrumbItem#as:member",
              "docComment": "/**\n * Optional prop to render the item as a heading of your choice.\n *\n * You can also use this to force items to render as links instead of buttons (by default, any item with a `href` renders as a link, and any item without a `href` renders as a button). This is not generally recommended because it may prevent activating the link using the keyboard.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "as?: "
                },
                {
                  "kind": "Content",
                  "text": "'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'a'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "as",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IBreadcrumbItem#href:member",
              "docComment": "/**\n * Url to navigate to when this breadcrumb item is clicked.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "href?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "href",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IBreadcrumbItem#isCurrentItem:member",
              "docComment": "/**\n * Whether this is the breadcrumb item the user is currently navigated to. If true, `aria-current=\"page\"` will be applied to this breadcrumb item.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isCurrentItem?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isCurrentItem",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IBreadcrumbItem#key:member",
              "docComment": "/**\n * Arbitrary unique string associated with the breadcrumb item.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "key",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IBreadcrumbItem#onClick:member",
              "docComment": "/**\n * Callback issued when the breadcrumb item is selected.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onClick?: "
                },
                {
                  "kind": "Content",
                  "text": "(ev?: "
                },
                {
                  "kind": "Reference",
                  "text": "React.MouseEvent",
                  "canonicalReference": "@types/react!~React.MouseEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">, item?: "
                },
                {
                  "kind": "Reference",
                  "text": "IBreadcrumbItem",
                  "canonicalReference": "@fluentui/react!IBreadcrumbItem:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onClick",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IBreadcrumbItem#role:member",
              "docComment": "/**\n * Optional role for the breadcrumb item (which renders as a button by default)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "role?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "role",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IBreadcrumbItem#text:member",
              "docComment": "/**\n * Text to display to the user for the breadcrumb item.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "text: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "text",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IBreadcrumbProps:interface",
          "docComment": "/**\n * {@docCategory Breadcrumb}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IBreadcrumbProps extends "
            },
            {
              "kind": "Reference",
              "text": "React.HTMLAttributes",
              "canonicalReference": "@types/react!~React.HTMLAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "IBreadcrumbProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IBreadcrumbProps#ariaLabel:member",
              "docComment": "/**\n * Aria label for the root element of the breadcrumb (which is a navigation landmark).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ariaLabel?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "ariaLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IBreadcrumbProps#className:member",
              "docComment": "/**\n * Optional class for the root breadcrumb element.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "className?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "className",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IBreadcrumbProps#componentRef:member",
              "docComment": "/**\n * Optional callback to access the IBreadcrumb interface. Use this instead of ref for accessing the public methods and properties of the component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentRef?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRefObject",
                  "canonicalReference": "@fluentui/utilities!IRefObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IBreadcrumb",
                  "canonicalReference": "@fluentui/react!IBreadcrumb:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "componentRef",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IBreadcrumbProps#dividerAs:member",
              "docComment": "/**\n * Render a custom divider in place of the default chevron `>`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dividerAs?: "
                },
                {
                  "kind": "Reference",
                  "text": "IComponentAs",
                  "canonicalReference": "@fluentui/utilities!IComponentAs:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDividerAsProps",
                  "canonicalReference": "@fluentui/react!IDividerAsProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dividerAs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IBreadcrumbProps#focusZoneProps:member",
              "docComment": "/**\n * Extra props for the root FocusZone.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "focusZoneProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "IFocusZoneProps",
                  "canonicalReference": "@fluentui/react-focus!IFocusZoneProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "focusZoneProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IBreadcrumbProps#items:member",
              "docComment": "/**\n * Collection of breadcrumbs to render\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "items: "
                },
                {
                  "kind": "Reference",
                  "text": "IBreadcrumbItem",
                  "canonicalReference": "@fluentui/react!IBreadcrumbItem:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "items",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IBreadcrumbProps#maxDisplayedItems:member",
              "docComment": "/**\n * The maximum number of breadcrumbs to display before coalescing. If not specified, all breadcrumbs will be rendered.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxDisplayedItems?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "maxDisplayedItems",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IBreadcrumbProps#onGrowData:member",
              "docComment": "/**\n * Method that determines how to group the length of the breadcrumb. Return undefined to never increase breadcrumb length.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onGrowData?: "
                },
                {
                  "kind": "Content",
                  "text": "(data: "
                },
                {
                  "kind": "Reference",
                  "text": "IBreadcrumbData",
                  "canonicalReference": "@fluentui/react!IBreadcrumbData:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "IBreadcrumbData",
                  "canonicalReference": "@fluentui/react!IBreadcrumbData:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onGrowData",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IBreadcrumbProps#onReduceData:member",
              "docComment": "/**\n * Method that determines how to reduce the length of the breadcrumb. Return undefined to never reduce breadcrumb length.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onReduceData?: "
                },
                {
                  "kind": "Content",
                  "text": "(data: "
                },
                {
                  "kind": "Reference",
                  "text": "IBreadcrumbData",
                  "canonicalReference": "@fluentui/react!IBreadcrumbData:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "IBreadcrumbData",
                  "canonicalReference": "@fluentui/react!IBreadcrumbData:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onReduceData",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IBreadcrumbProps#onRenderItem:member",
              "docComment": "/**\n * Custom render function for each breadcrumb item.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRenderItem?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRenderFunction",
                  "canonicalReference": "@fluentui/utilities!IRenderFunction:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IBreadcrumbItem",
                  "canonicalReference": "@fluentui/react!IBreadcrumbItem:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onRenderItem",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IBreadcrumbProps#onRenderOverflowIcon:member",
              "docComment": "/**\n * Render a custom overflow icon in place of the default icon `...`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRenderOverflowIcon?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRenderFunction",
                  "canonicalReference": "@fluentui/utilities!IRenderFunction:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IButtonProps",
                  "canonicalReference": "@fluentui/react-internal!IButtonProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onRenderOverflowIcon",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IBreadcrumbProps#overflowAriaLabel:member",
              "docComment": "/**\n * Aria label for the overflow button.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "overflowAriaLabel?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "overflowAriaLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IBreadcrumbProps#overflowButtonAs:member",
              "docComment": "/**\n * Custom component for the overflow button.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "overflowButtonAs?: "
                },
                {
                  "kind": "Reference",
                  "text": "IComponentAs",
                  "canonicalReference": "@fluentui/utilities!IComponentAs:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IButtonProps",
                  "canonicalReference": "@fluentui/react-internal!IButtonProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "overflowButtonAs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IBreadcrumbProps#overflowIndex:member",
              "docComment": "/**\n * Optional index where overflow items will be collapsed. Defaults to 0.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "overflowIndex?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "overflowIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IBreadcrumbProps#styles:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "styles?: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyleFunctionOrObject",
                  "canonicalReference": "@fluentui/merge-styles!IStyleFunctionOrObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IBreadcrumbStyleProps",
                  "canonicalReference": "@fluentui/react!IBreadcrumbStyleProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "IBreadcrumbStyles",
                  "canonicalReference": "@fluentui/react!IBreadcrumbStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "styles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IBreadcrumbProps#theme:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "theme?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITheme",
                  "canonicalReference": "@fluentui/theme!ITheme:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "theme",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IBreadcrumbProps#tooltipHostProps:member",
              "docComment": "/**\n * Extra props for the TooltipHost which wraps each breadcrumb item.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tooltipHostProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITooltipHostProps",
                  "canonicalReference": "@fluentui/react-internal!ITooltipHostProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "tooltipHostProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IBreadcrumbStyleProps:interface",
          "docComment": "/**\n * {@docCategory Breadcrumb}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IBreadcrumbStyleProps "
            }
          ],
          "releaseTag": "Public",
          "name": "IBreadcrumbStyleProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IBreadcrumbStyleProps#className:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "className?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "className",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IBreadcrumbStyleProps#theme:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "theme: "
                },
                {
                  "kind": "Reference",
                  "text": "ITheme",
                  "canonicalReference": "@fluentui/theme!ITheme:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "theme",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IBreadcrumbStyles:interface",
          "docComment": "/**\n * {@docCategory Breadcrumb}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IBreadcrumbStyles "
            }
          ],
          "releaseTag": "Public",
          "name": "IBreadcrumbStyles",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IBreadcrumbStyles#chevron:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "chevron: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "chevron",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IBreadcrumbStyles#item:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "item: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "item",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IBreadcrumbStyles#itemLink:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "itemLink: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "itemLink",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IBreadcrumbStyles#list:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "list: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "list",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IBreadcrumbStyles#listItem:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listItem: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "listItem",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IBreadcrumbStyles#overflow:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "overflow: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "overflow",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IBreadcrumbStyles#overflowButton:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "overflowButton: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "overflowButton",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IBreadcrumbStyles#root:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "root: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "root",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!ICellStyleProps:interface",
          "docComment": "/**\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ICellStyleProps "
            }
          ],
          "releaseTag": "Public",
          "name": "ICellStyleProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!ICellStyleProps#cellExtraRightPadding:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cellExtraRightPadding: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "cellExtraRightPadding",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!ICellStyleProps#cellLeftPadding:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cellLeftPadding: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "cellLeftPadding",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!ICellStyleProps#cellRightPadding:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cellRightPadding: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "cellRightPadding",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IColumn:interface",
          "docComment": "/**\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IColumn "
            }
          ],
          "releaseTag": "Public",
          "name": "IColumn",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumn#ariaLabel:member",
              "docComment": "/**\n * Accessible label for the column. The column name will still be used as the primary label, but this text (if specified) will be read after the column name.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ariaLabel?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "ariaLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumn#calculatedWidth:member",
              "docComment": "/**\n * Internal only value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "calculatedWidth?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "calculatedWidth",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumn#className:member",
              "docComment": "/**\n * Class name to apply to the column cell within each row.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "className?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "className",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumn#columnActionsMode:member",
              "docComment": "/**\n * Defines how the column's header should render.\n *\n * @defaultvalue\n *\n * ColumnActionsMode.clickable\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "columnActionsMode?: "
                },
                {
                  "kind": "Reference",
                  "text": "ColumnActionsMode",
                  "canonicalReference": "@fluentui/react!ColumnActionsMode:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "columnActionsMode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumn#currentWidth:member",
              "docComment": "/**\n * Internal only value. Remembers the actual width of the column in any case. `calculatedWidth` is only saved when it's defined by user, not for justified calculations.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "currentWidth?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "currentWidth",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumn#data:member",
              "docComment": "/**\n * Arbitrary data passthrough which can be used by the caller.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "data?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumn#fieldName:member",
              "docComment": "/**\n * The field to pull the text value from for the column. Can be unset if a custom `onRender` method is provided.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fieldName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "fieldName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumn#filterAriaLabel:member",
              "docComment": "/**\n * Accessible label for the status of this column when filtered.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "filterAriaLabel?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "filterAriaLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumn#getValueKey:member",
              "docComment": "/**\n * Custom override for the parent list's `getCellValueKey`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getValueKey?: "
                },
                {
                  "kind": "Content",
                  "text": "(item?: any, index?: number, column?: "
                },
                {
                  "kind": "Reference",
                  "text": "IColumn",
                  "canonicalReference": "@fluentui/react!IColumn:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "getValueKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumn#groupAriaLabel:member",
              "docComment": "/**\n * Accessible label for the status of this column when grouped.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "groupAriaLabel?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "groupAriaLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumn#headerClassName:member",
              "docComment": "/**\n * Class name to apply to the column header cell.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "headerClassName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "headerClassName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumn#iconClassName:member",
              "docComment": "/**\n * Class name for the icon within the header.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "iconClassName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "iconClassName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumn#iconName:member",
              "docComment": "/**\n * Custom icon to use in the column header.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "iconName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "iconName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumn#isCollapsable:member",
              "docComment": "/**\n * If true, allow the column to be collapsed when rendered in justified layout.\n *\n * @deprecated\n *\n * Use `isCollapsible`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isCollapsable?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isCollapsable",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumn#isCollapsible:member",
              "docComment": "/**\n * If true, allow the column to be collapsed when rendered in justified layout.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isCollapsible?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isCollapsible",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumn#isFiltered:member",
              "docComment": "/**\n * Whether the list is filtered by this column. If true, shows a filter icon next to this column's name.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isFiltered?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isFiltered",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumn#isGrouped:member",
              "docComment": "/**\n * Whether the list is grouped by this column. If true, shows a grouped icon next to this column's name.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isGrouped?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isGrouped",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumn#isIconOnly:member",
              "docComment": "/**\n * Whether only the icon should be displayed in the column header. If true, the column name and dropdown chevron will not be displayed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isIconOnly?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isIconOnly",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumn#isMenuOpen:member",
              "docComment": "/**\n * Whether a dropdown menu is open so that the appropriate ARIA attributes are rendered.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isMenuOpen?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isMenuOpen",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumn#isMultiline:member",
              "docComment": "/**\n * Determines if the column can render multi-line text.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isMultiline?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isMultiline",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumn#isPadded:member",
              "docComment": "/**\n * If true, add additional LTR padding-right to column and cells.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isPadded?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isPadded",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumn#isResizable:member",
              "docComment": "/**\n * Determines if the column can be resized.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isResizable?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isResizable",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumn#isRowHeader:member",
              "docComment": "/**\n * Whether the column is a header for the given row. There should be only one column with this set to true.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isRowHeader?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isRowHeader",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumn#isSorted:member",
              "docComment": "/**\n * Determines if the column is currently sorted. Renders a sort arrow in the column header.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isSorted?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isSorted",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumn#isSortedDescending:member",
              "docComment": "/**\n * Determines if the sort arrow is pointed down (descending) or up.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isSortedDescending?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isSortedDescending",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumn#key:member",
              "docComment": "/**\n * A unique key for identifying the column.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "key",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumn#maxWidth:member",
              "docComment": "/**\n * Maximum width for the column, if stretching is allowed in justified scenarios.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxWidth?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "maxWidth",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumn#minWidth:member",
              "docComment": "/**\n * Minimum width for the column.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "minWidth: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "minWidth",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumn#name:member",
              "docComment": "/**\n * Name to render on the column header.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumn#onColumnClick:member",
              "docComment": "/**\n * Callback for when the user clicks on the column header.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onColumnClick?: "
                },
                {
                  "kind": "Content",
                  "text": "(ev: "
                },
                {
                  "kind": "Reference",
                  "text": "React.MouseEvent",
                  "canonicalReference": "@types/react!~React.MouseEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">, column: "
                },
                {
                  "kind": "Reference",
                  "text": "IColumn",
                  "canonicalReference": "@fluentui/react!IColumn:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onColumnClick",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumn#onColumnContextMenu:member",
              "docComment": "/**\n * Callback for when the user opens the column header context menu.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onColumnContextMenu?: "
                },
                {
                  "kind": "Content",
                  "text": "(column?: "
                },
                {
                  "kind": "Reference",
                  "text": "IColumn",
                  "canonicalReference": "@fluentui/react!IColumn:interface"
                },
                {
                  "kind": "Content",
                  "text": ", ev?: "
                },
                {
                  "kind": "Reference",
                  "text": "React.MouseEvent",
                  "canonicalReference": "@types/react!~React.MouseEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onColumnContextMenu",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumn#onColumnResize:member",
              "docComment": "/**\n * Callback for when the column is resized (`width` is the current width).\n *\n * Prefer this over `DetailsList`'s `onColumnResize` if you require the `IColumn` to report its width after every resize event. Consider debouncing the callback if resize events occur frequently.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onColumnResize?: "
                },
                {
                  "kind": "Content",
                  "text": "(width?: number) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onColumnResize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumn#onRender:member",
              "docComment": "/**\n * Custom renderer for cell content, instead of the default text rendering.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRender?: "
                },
                {
                  "kind": "Content",
                  "text": "(item?: any, index?: number, column?: "
                },
                {
                  "kind": "Reference",
                  "text": "IColumn",
                  "canonicalReference": "@fluentui/react!IColumn:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onRender",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumn#onRenderDivider:member",
              "docComment": "/**\n * Custom renderer for column header divider.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRenderDivider?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRenderFunction",
                  "canonicalReference": "@fluentui/utilities!IRenderFunction:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsColumnProps",
                  "canonicalReference": "@fluentui/react!IDetailsColumnProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onRenderDivider",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumn#sortAscendingAriaLabel:member",
              "docComment": "/**\n * Accessible label for indicating that the list is sorted by this column in ascending order. This will be read after the main column header label.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sortAscendingAriaLabel?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "sortAscendingAriaLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumn#sortDescendingAriaLabel:member",
              "docComment": "/**\n * Accessible label for indicating that the list is sorted by this column in descending order. This will be read after the main column header label.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sortDescendingAriaLabel?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "sortDescendingAriaLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumn#styles:member",
              "docComment": "/**\n * Custom overrides to the themed or default styles.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "styles?: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyleFunctionOrObject",
                  "canonicalReference": "@fluentui/merge-styles!IStyleFunctionOrObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsColumnStyleProps",
                  "canonicalReference": "@fluentui/react!IDetailsColumnStyleProps:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsColumnStyles",
                  "canonicalReference": "@fluentui/react!IDetailsColumnStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "styles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IColumnDragDropDetails:interface",
          "docComment": "/**\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IColumnDragDropDetails "
            }
          ],
          "releaseTag": "Public",
          "name": "IColumnDragDropDetails",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumnDragDropDetails#draggedIndex:member",
              "docComment": "/**\n * Specifies the source column index\n *\n * @defaultvalue\n *\n * -1\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "draggedIndex: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "draggedIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumnDragDropDetails#targetIndex:member",
              "docComment": "/**\n * Specifies the target column index\n *\n * @defaultvalue\n *\n * -1\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "targetIndex: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "targetIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IColumnReorderHeaderProps:interface",
          "docComment": "/**\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IColumnReorderHeaderProps extends "
            },
            {
              "kind": "Reference",
              "text": "IColumnReorderOptions",
              "canonicalReference": "@fluentui/react!IColumnReorderOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IColumnReorderHeaderProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumnReorderHeaderProps#onColumnDragEnd:member",
              "docComment": "/**\n * Callback to notify the column dragEnd event to List Need this to check whether the dragEnd has happened on corresponding list or outside of the list\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onColumnDragEnd?: "
                },
                {
                  "kind": "Content",
                  "text": "(props: {\n        dropLocation?: "
                },
                {
                  "kind": "Reference",
                  "text": "ColumnDragEndLocation",
                  "canonicalReference": "@fluentui/react!ColumnDragEndLocation:enum"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }, event: "
                },
                {
                  "kind": "Reference",
                  "text": "MouseEvent",
                  "canonicalReference": "!MouseEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onColumnDragEnd",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IColumnReorderOptions:interface",
          "docComment": "/**\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IColumnReorderOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "IColumnReorderOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumnReorderOptions#frozenColumnCountFromEnd:member",
              "docComment": "/**\n * Specifies the number fixed columns from right\n *\n * @defaultvalue\n *\n * 0\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "frozenColumnCountFromEnd?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "frozenColumnCountFromEnd",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumnReorderOptions#frozenColumnCountFromStart:member",
              "docComment": "/**\n * Specifies the number fixed columns from left\n *\n * @defaultvalue\n *\n * 0\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "frozenColumnCountFromStart?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "frozenColumnCountFromStart",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumnReorderOptions#handleColumnReorder:member",
              "docComment": "/**\n * Callback to handle column reordering. `draggedIndex` is the source column index, which should be placed at `targetIndex`.\n *\n * @deprecated\n *\n * Use `onColumnDrop` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "handleColumnReorder?: "
                },
                {
                  "kind": "Content",
                  "text": "(draggedIndex: number, targetIndex: number) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "handleColumnReorder",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumnReorderOptions#onColumnDragStart:member",
              "docComment": "/**\n * Callback to handle when dragging on this column's DetailsHeader has started.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onColumnDragStart?: "
                },
                {
                  "kind": "Content",
                  "text": "(dragStarted: boolean) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onColumnDragStart",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumnReorderOptions#onColumnDrop:member",
              "docComment": "/**\n * Callback to handle column reordering. `draggedIndex` is the source column index, which should be placed at `targetIndex`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onColumnDrop?: "
                },
                {
                  "kind": "Content",
                  "text": "(dragDropDetails: "
                },
                {
                  "kind": "Reference",
                  "text": "IColumnDragDropDetails",
                  "canonicalReference": "@fluentui/react!IColumnDragDropDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onColumnDrop",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumnReorderOptions#onDragEnd:member",
              "docComment": "/**\n * Callback to handle when dragging on this column's DetailsHeader has finished.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onDragEnd?: "
                },
                {
                  "kind": "Content",
                  "text": "(columnDropLocationDetails: "
                },
                {
                  "kind": "Reference",
                  "text": "ColumnDragEndLocation",
                  "canonicalReference": "@fluentui/react!ColumnDragEndLocation:enum"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onDragEnd",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IColumnResizeDetails:interface",
          "docComment": "/**\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IColumnResizeDetails "
            }
          ],
          "releaseTag": "Public",
          "name": "IColumnResizeDetails",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumnResizeDetails#columnIndex:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "columnIndex: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "columnIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumnResizeDetails#columnMinWidth:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "columnMinWidth: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "columnMinWidth",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IColumnResizeDetails#originX:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "originX?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "originX",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IComboBox:interface",
          "docComment": "/**\n * {@docCategory ComboBox}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IComboBox "
            }
          ],
          "releaseTag": "Public",
          "name": "IComboBox",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBox#dismissMenu:member",
              "docComment": "/**\n * If there is a menu open this will dismiss the menu.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dismissMenu: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dismissMenu",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluentui/react!IComboBox#focus:member(1)",
              "docComment": "/**\n * Sets focus to the input in the ComboBox\n *\n * @param shouldOpenOnFocus - Determines if we should open the ComboBox menu when the input gets focus.\n *\n * @param useFocusAsync - Determines if we should focus the input asynchronously.\n *\n * @returns True if focus could be set, false if no operation was taken.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "focus(shouldOpenOnFocus?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", useFocusAsync?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shouldOpenOnFocus",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "useFocusAsync",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "focus"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBox#selectedOptions:member",
              "docComment": "/**\n * All selected options.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly selectedOptions: "
                },
                {
                  "kind": "Reference",
                  "text": "IComboBoxOption",
                  "canonicalReference": "@fluentui/react!IComboBoxOption:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "selectedOptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IComboBoxClassNames:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IComboBoxClassNames "
            }
          ],
          "releaseTag": "Public",
          "name": "IComboBoxClassNames",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxClassNames#callout:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "callout: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "callout",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxClassNames#container:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "container: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "container",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxClassNames#divider:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "divider: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "divider",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxClassNames#errorMessage:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "errorMessage: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "errorMessage",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxClassNames#header:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "header: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "header",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxClassNames#input:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "input: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "input",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxClassNames#label:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "label: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "label",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxClassNames#optionsContainer:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "optionsContainer: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "optionsContainer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxClassNames#optionsContainerWrapper:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "optionsContainerWrapper: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "optionsContainerWrapper",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxClassNames#root:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "root: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "root",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxClassNames#screenReaderText:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "screenReaderText: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "screenReaderText",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IComboBoxOption:interface",
          "docComment": "/**\n * {@docCategory ComboBox}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IComboBoxOption extends "
            },
            {
              "kind": "Reference",
              "text": "ISelectableOption",
              "canonicalReference": "@fluentui/react-internal!ISelectableOption:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IComboBoxOption",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxOption#styles:member",
              "docComment": "/**\n * Specific styles for each ComboBox option. If you intend to give common styles to all ComboBox option please use the prop comboBoxOptionStyles.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "styles?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IComboBoxOptionStyles",
                  "canonicalReference": "@fluentui/react!IComboBoxOptionStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "styles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxOption#useAriaLabelAsText:member",
              "docComment": "/**\n * In scenarios where embedded data is used at the text prop, we will use the ariaLabel prop to set the aria-label and preview text. Default to false.\n *\n * @defaultvalue\n *\n * false;\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "useAriaLabelAsText?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "useAriaLabelAsText",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IComboBoxOptionClassNames:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IComboBoxOptionClassNames "
            }
          ],
          "releaseTag": "Public",
          "name": "IComboBoxOptionClassNames",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxOptionClassNames#optionText:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "optionText: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "optionText",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxOptionClassNames#optionTextWrapper:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "optionTextWrapper: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "optionTextWrapper",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxOptionClassNames#root:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "root: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "root",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IComboBoxOptionStyles:interface",
          "docComment": "/**\n * {@docCategory ComboBox}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IComboBoxOptionStyles extends "
            },
            {
              "kind": "Reference",
              "text": "IButtonStyles",
              "canonicalReference": "@fluentui/react-internal!IButtonStyles:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IComboBoxOptionStyles",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxOptionStyles#optionText:member",
              "docComment": "/**\n * Styles for the text inside the ComboBox option. This should be used instead of the description inside IButtonStyles because we custom render the text in the ComboBox options.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "optionText: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "optionText",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxOptionStyles#optionTextWrapper:member",
              "docComment": "/**\n * Styles for the ComboBox option text's wrapper.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "optionTextWrapper: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "optionTextWrapper",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IComboBoxProps:interface",
          "docComment": "/**\n * {@docCategory ComboBox}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IComboBoxProps extends "
            },
            {
              "kind": "Reference",
              "text": "ISelectableDroppableTextProps",
              "canonicalReference": "@fluentui/react-internal!ISelectableDroppableTextProps:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IComboBox",
              "canonicalReference": "@fluentui/react!IComboBox:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "IComboBox",
              "canonicalReference": "@fluentui/react!IComboBox:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "React.RefAttributes",
              "canonicalReference": "@types/react!~React.RefAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "IComboBoxProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxProps#allowFreeform:member",
              "docComment": "/**\n * Whether the ComboBox is free form, meaning that the user input is not bound to provided options. Defaults to false.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "allowFreeform?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "allowFreeform",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxProps#ariaDescribedBy:member",
              "docComment": "/**\n * Optional prop to add a string id that can be referenced inside the aria-describedby attribute.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ariaDescribedBy?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "ariaDescribedBy",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxProps#autoComplete:member",
              "docComment": "/**\n * Whether the ComboBox auto completes. As the user is entering text, it will be suggested potential matches from the list of options. If the ComboBox is expanded, this will also scroll to the suggested option, and give it a selected style.\n *\n * @defaultvalue\n *\n * \"on\"\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "autoComplete?: "
                },
                {
                  "kind": "Content",
                  "text": "'on' | 'off'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "autoComplete",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxProps#autofill:member",
              "docComment": "/**\n * The AutofillProps to be passed into the Autofill component inside ComboBox.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "autofill?: "
                },
                {
                  "kind": "Reference",
                  "text": "IAutofillProps",
                  "canonicalReference": "@fluentui/react-internal!IAutofillProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "autofill",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxProps#buttonIconProps:member",
              "docComment": "/**\n * The IconProps to use for the button aspect of the ComboBox.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "buttonIconProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "IIconProps",
                  "canonicalReference": "@fluentui/react-internal!IIconProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "buttonIconProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxProps#caretDownButtonStyles:member",
              "docComment": "/**\n * Styles for the caret down button.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "caretDownButtonStyles?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IButtonStyles",
                  "canonicalReference": "@fluentui/react-internal!IButtonStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "caretDownButtonStyles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxProps#comboBoxOptionStyles:member",
              "docComment": "/**\n * Default styles that should be applied to ComboBox options, in case an option does not come with user-defined custom styles\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "comboBoxOptionStyles?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IComboBoxOptionStyles",
                  "canonicalReference": "@fluentui/react!IComboBoxOptionStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "comboBoxOptionStyles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxProps#componentRef:member",
              "docComment": "/**\n * Optional callback to access the IComboBox interface. Use this instead of ref for accessing the public methods and properties of the component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentRef?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRefObject",
                  "canonicalReference": "@fluentui/utilities!IRefObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IComboBox",
                  "canonicalReference": "@fluentui/react!IComboBox:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "componentRef",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxProps#dropdownMaxWidth:member",
              "docComment": "/**\n * Custom max width for dropdown.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dropdownMaxWidth?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dropdownMaxWidth",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxProps#dropdownWidth:member",
              "docComment": "/**\n * Custom width for dropdown (unless useComboBoxAsMenuWidth is undefined or false)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dropdownWidth?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dropdownWidth",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxProps#getClassNames:member",
              "docComment": "/**\n * Custom function for providing the classNames for the ComboBox. Can be used to provide all styles for the component instead of applying them on top of the default styles.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getClassNames?: "
                },
                {
                  "kind": "Content",
                  "text": "(theme: "
                },
                {
                  "kind": "Reference",
                  "text": "ITheme",
                  "canonicalReference": "@fluentui/theme!ITheme:interface"
                },
                {
                  "kind": "Content",
                  "text": ", isOpen: boolean, disabled: boolean, required: boolean, focused: boolean, allowFreeForm: boolean, hasErrorMessage: boolean, className?: string) => "
                },
                {
                  "kind": "Reference",
                  "text": "IComboBoxClassNames",
                  "canonicalReference": "@fluentui/react!IComboBoxClassNames:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "getClassNames",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxProps#iconButtonProps:member",
              "docComment": "/**\n * Optional iconButton props on ComboBox.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "iconButtonProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "IButtonProps",
                  "canonicalReference": "@fluentui/react-internal!IButtonProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "iconButtonProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxProps#isButtonAriaHidden:member",
              "docComment": "/**\n * Sets the 'aria-hidden' attribute on the ComboBox's button element instructing screen readers how to handle the element. This element is hidden by default because all functionality is handled by the input element and the arrow button is only meant to be decorative.\n *\n * @defaultvalue\n *\n * true\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isButtonAriaHidden?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isButtonAriaHidden",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxProps#multiSelectDelimiter:member",
              "docComment": "/**\n * When multiple items are selected, this will be used to separate values in the ComboBox input.\n *\n * @defaultvalue\n *\n * \", \"\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "multiSelectDelimiter?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "multiSelectDelimiter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxProps#onChange:member",
              "docComment": "/**\n * Callback issued when either: 1) The selected option changes. 2) A manually edited value is submitted. In this case there may not be a matched option if allowFreeform is also true (and hence only value would be true, the other parameter would be null in this case)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onChange?: "
                },
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Reference",
                  "text": "React.FormEvent",
                  "canonicalReference": "@types/react!~React.FormEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IComboBox",
                  "canonicalReference": "@fluentui/react!IComboBox:interface"
                },
                {
                  "kind": "Content",
                  "text": ">, option?: "
                },
                {
                  "kind": "Reference",
                  "text": "IComboBoxOption",
                  "canonicalReference": "@fluentui/react!IComboBoxOption:interface"
                },
                {
                  "kind": "Content",
                  "text": ", index?: number, value?: string) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxProps#onItemClick:member",
              "docComment": "/**\n * Callback issued when a ComboBox item is clicked.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onItemClick?: "
                },
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Reference",
                  "text": "React.FormEvent",
                  "canonicalReference": "@types/react!~React.FormEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IComboBox",
                  "canonicalReference": "@fluentui/react!IComboBox:interface"
                },
                {
                  "kind": "Content",
                  "text": ">, option?: "
                },
                {
                  "kind": "Reference",
                  "text": "IComboBoxOption",
                  "canonicalReference": "@fluentui/react!IComboBoxOption:interface"
                },
                {
                  "kind": "Content",
                  "text": ", index?: number) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onItemClick",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxProps#onMenuDismiss:member",
              "docComment": "/**\n * Function that gets invoked before the menu gets dismissed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onMenuDismiss?: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onMenuDismiss",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxProps#onMenuDismissed:member",
              "docComment": "/**\n * Function that gets invoked when the ComboBox menu is dismissed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onMenuDismissed?: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onMenuDismissed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxProps#onMenuOpen:member",
              "docComment": "/**\n * Function that gets invoked when the ComboBox menu is launched.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onMenuOpen?: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onMenuOpen",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxProps#onPendingValueChanged:member",
              "docComment": "/**\n * Callback issued when the user changes the pending value in ComboBox. This will be called any time the component is updated and there is a current pending value. Option, index, and value will all be undefined if no change has taken place and the previously entered pending value is still valid.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onPendingValueChanged?: "
                },
                {
                  "kind": "Content",
                  "text": "(option?: "
                },
                {
                  "kind": "Reference",
                  "text": "IComboBoxOption",
                  "canonicalReference": "@fluentui/react!IComboBoxOption:interface"
                },
                {
                  "kind": "Content",
                  "text": ", index?: number, value?: string) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onPendingValueChanged",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxProps#onRenderLabel:member",
              "docComment": "/**\n * Custom render function for the label text.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRenderLabel?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRenderFunction",
                  "canonicalReference": "@fluentui/utilities!IRenderFunction:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IOnRenderComboBoxLabelProps",
                  "canonicalReference": "@fluentui/react!IOnRenderComboBoxLabelProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onRenderLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxProps#onRenderLowerContent:member",
              "docComment": "/**\n * Add additional content below the callout list.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRenderLowerContent?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRenderFunction",
                  "canonicalReference": "@fluentui/utilities!IRenderFunction:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IComboBoxProps",
                  "canonicalReference": "@fluentui/react!IComboBoxProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onRenderLowerContent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxProps#onRenderUpperContent:member",
              "docComment": "/**\n * Add additional content above the callout list.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRenderUpperContent?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRenderFunction",
                  "canonicalReference": "@fluentui/utilities!IRenderFunction:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IComboBoxProps",
                  "canonicalReference": "@fluentui/react!IComboBoxProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onRenderUpperContent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxProps#onResolveOptions:member",
              "docComment": "/**\n * Callback issued when the options should be resolved, if they have been updated or if they need to be passed in the first time.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onResolveOptions?: "
                },
                {
                  "kind": "Content",
                  "text": "(options: "
                },
                {
                  "kind": "Reference",
                  "text": "IComboBoxOption",
                  "canonicalReference": "@fluentui/react!IComboBoxOption:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]) => "
                },
                {
                  "kind": "Reference",
                  "text": "IComboBoxOption",
                  "canonicalReference": "@fluentui/react!IComboBoxOption:interface"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "PromiseLike",
                  "canonicalReference": "!PromiseLike:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IComboBoxOption",
                  "canonicalReference": "@fluentui/react!IComboBoxOption:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onResolveOptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 10
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxProps#onScrollToItem:member",
              "docComment": "/**\n * Callback issued when the ComboBox requests the list to scroll to a specific element.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onScrollToItem?: "
                },
                {
                  "kind": "Content",
                  "text": "(itemIndex: number) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onScrollToItem",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxProps#options:member",
              "docComment": "/**\n * Collection of options for this ComboBox.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "options: "
                },
                {
                  "kind": "Reference",
                  "text": "IComboBoxOption",
                  "canonicalReference": "@fluentui/react!IComboBoxOption:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "options",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxProps#persistMenu:member",
              "docComment": "/**\n * Menu will not be created or destroyed when opened or closed, instead it will be hidden. This will improve perf of the menu opening but could potentially impact overall perf by having more elements in the dom. Should only be used when perf is important. Note: This may increase the amount of time it takes for the ComboBox itself to mount.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "persistMenu?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "persistMenu",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxProps#scrollSelectedToTop:member",
              "docComment": "/**\n * When options are scrollable the selected option is positioned at the top of the callout when it is opened (unless it has reached the end of the scrollbar).\n *\n * @defaultvalue\n *\n * false;\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scrollSelectedToTop?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "scrollSelectedToTop",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxProps#shouldRestoreFocus:member",
              "docComment": "/**\n * When specified, determines whether the callout (the menu which drops down) should restore the focus after being dismissed or not. If false, then the menu will not try to set focus to whichever element had focus before the menu was opened.\n *\n * @defaultvalue\n *\n * true;\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "shouldRestoreFocus?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "shouldRestoreFocus",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxProps#styles:member",
              "docComment": "/**\n * Custom styles for this component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "styles?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IComboBoxStyles",
                  "canonicalReference": "@fluentui/react!IComboBoxStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "styles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxProps#text:member",
              "docComment": "/**\n * Value to show in the input, does not have to map to a ComboBox option.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "text?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "text",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxProps#theme:member",
              "docComment": "/**\n * Theme provided by HOC.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "theme?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITheme",
                  "canonicalReference": "@fluentui/theme!ITheme:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "theme",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxProps#useComboBoxAsMenuWidth:member",
              "docComment": "/**\n * Whether to use the ComboBox width as the menu's width.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "useComboBoxAsMenuWidth?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "useComboBoxAsMenuWidth",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 7
            },
            {
              "startIndex": 8,
              "endIndex": 12
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IComboBoxState:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IComboBoxState "
            }
          ],
          "releaseTag": "Public",
          "name": "IComboBoxState",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxState#currentPendingValue:member",
              "docComment": "/**\n * When taking input, this will store the actual text that is being entered\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "currentPendingValue?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "currentPendingValue",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxState#currentPendingValueValidIndex:member",
              "docComment": "/**\n * When taking input, this will store the index that the options input matches (-1 if no input or match)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "currentPendingValueValidIndex: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "currentPendingValueValidIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxState#currentPendingValueValidIndexOnHover:member",
              "docComment": "/**\n * Stores the hovered over value in the dropdown (used for styling the options without updating the input)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "currentPendingValueValidIndexOnHover: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "currentPendingValueValidIndexOnHover",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxState#focusState:member",
              "docComment": "/**\n * The focused state of the combo box\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "focusState?: "
                },
                {
                  "kind": "Content",
                  "text": "'none' | 'focused' | 'focusing'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "focusState",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxState#isOpen:member",
              "docComment": "/**\n * The open state\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isOpen?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isOpen",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IComboBoxStyles:interface",
          "docComment": "/**\n * {@docCategory ComboBox}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IComboBoxStyles "
            }
          ],
          "releaseTag": "Public",
          "name": "IComboBoxStyles",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxStyles#callout:member",
              "docComment": "/**\n * Styles for the callout.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "callout: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "callout",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxStyles#container:member",
              "docComment": "/**\n * Style for the container which has the ComboBox and the label.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "container: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "container",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxStyles#divider:member",
              "docComment": "/**\n * Styles for a divider in the options.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "divider: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "divider",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxStyles#errorMessage:member",
              "docComment": "/**\n * Styles for the error Message text of the ComboBox.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "errorMessage: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "errorMessage",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxStyles#header:member",
              "docComment": "/**\n * Styles for a header in the options.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "header: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "header",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxStyles#input:member",
              "docComment": "/**\n * Base styles for the input element - which contains the currently selected option.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "input: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "input",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxStyles#inputDisabled:member",
              "docComment": "/**\n * Style override for the input element when ComboBox is disabled.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inputDisabled: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "inputDisabled",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxStyles#label:member",
              "docComment": "/**\n * Style for the label element of the ComboBox.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "label: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "label",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxStyles#labelDisabled:member",
              "docComment": "/**\n * Style for the label element of the ComboBox in the disabled state.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "labelDisabled: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "labelDisabled",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxStyles#optionsContainer:member",
              "docComment": "/**\n * Styles for the container of all the ComboBox options. Includes the headers and dividers.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "optionsContainer: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "optionsContainer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxStyles#optionsContainerWrapper:member",
              "docComment": "/**\n * Styles for the optionsContainerWrapper.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "optionsContainerWrapper: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "optionsContainerWrapper",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxStyles#root:member",
              "docComment": "/**\n * Base styles for the root element of all ComboBoxes.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "root: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "root",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxStyles#rootDisabled:member",
              "docComment": "/**\n * Styles for when the ComboBox is disabled. These styles override all the other styles. NOTE : Hover (or) Focused (or) active styles are not applied for disabled ComboBoxes.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rootDisabled: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "rootDisabled",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxStyles#rootDisallowFreeForm:member",
              "docComment": "/**\n * Styles for variant of ComboBox where allowFreeForm is false in the props.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rootDisallowFreeForm: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "rootDisallowFreeForm",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxStyles#rootError:member",
              "docComment": "/**\n * Styles for the root element for variant of ComboBox with an errorMessage in the props.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rootError: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "rootError",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxStyles#rootFocused:member",
              "docComment": "/**\n * Styles for when the ComboBox is focused. These styles are applied for all ComboBoxes except when the ComboBox is disabled.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rootFocused: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "rootFocused",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxStyles#rootHovered:member",
              "docComment": "/**\n * Styles for when the ComboBox is hovered. These styles are applied for all ComboBoxes except when the ComboBox is disabled.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rootHovered: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "rootHovered",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxStyles#rootPressed:member",
              "docComment": "/**\n * Styles for when the ComboBox is active. These styles are applied for all ComboBoxes except when the ComboBox is disabled.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rootPressed: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "rootPressed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IComboBoxStyles#screenReaderText:member",
              "docComment": "/**\n * Styles for hidden screen reader text.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "screenReaderText: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "screenReaderText",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDetailsCheckboxProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDetailsCheckboxProps "
            }
          ],
          "releaseTag": "Public",
          "name": "IDetailsCheckboxProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsCheckboxProps#checked:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checked: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "checked",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsCheckboxProps#theme:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "theme?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITheme",
                  "canonicalReference": "@fluentui/theme!ITheme:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "theme",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDetailsColumnProps:interface",
          "docComment": "/**\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDetailsColumnProps extends "
            },
            {
              "kind": "Reference",
              "text": "React.ClassAttributes",
              "canonicalReference": "@types/react!~React.ClassAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DetailsColumnBase",
              "canonicalReference": "@fluentui/react!DetailsColumnBase:class"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "IDetailsColumnProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsColumnProps#cellStyleProps:member",
              "docComment": "/**\n * Custom styles for cell rendering.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cellStyleProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "ICellStyleProps",
                  "canonicalReference": "@fluentui/react!ICellStyleProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "cellStyleProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsColumnProps#column:member",
              "docComment": "/**\n * The column definition for the component instance.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "column: "
                },
                {
                  "kind": "Reference",
                  "text": "IColumn",
                  "canonicalReference": "@fluentui/react!IColumn:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "column",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsColumnProps#columnIndex:member",
              "docComment": "/**\n * The column index for the component instance.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "columnIndex: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "columnIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsColumnProps#componentRef:member",
              "docComment": "/**\n * A reference to the component instance.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentRef?: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "componentRef",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsColumnProps#dragDropHelper:member",
              "docComment": "/**\n * The drag and drop helper for the component instance.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dragDropHelper?: "
                },
                {
                  "kind": "Reference",
                  "text": "IDragDropHelper",
                  "canonicalReference": "@fluentui/react-internal!IDragDropHelper:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dragDropHelper",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsColumnProps#isDraggable:member",
              "docComment": "/**\n * Whether or not the column can be re-ordered via drag and drop.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isDraggable?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isDraggable",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsColumnProps#isDropped:member",
              "docComment": "/**\n * Whether or not the column has been dropped via drag and drop.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isDropped?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isDropped",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsColumnProps#onColumnClick:member",
              "docComment": "/**\n * Callback fired when click event occurs.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onColumnClick?: "
                },
                {
                  "kind": "Content",
                  "text": "(ev: "
                },
                {
                  "kind": "Reference",
                  "text": "React.MouseEvent",
                  "canonicalReference": "@types/react!~React.MouseEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">, column: "
                },
                {
                  "kind": "Reference",
                  "text": "IColumn",
                  "canonicalReference": "@fluentui/react!IColumn:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onColumnClick",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsColumnProps#onColumnContextMenu:member",
              "docComment": "/**\n * Callback fired on contextual menu event to provide contextual menu UI.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onColumnContextMenu?: "
                },
                {
                  "kind": "Content",
                  "text": "(column: "
                },
                {
                  "kind": "Reference",
                  "text": "IColumn",
                  "canonicalReference": "@fluentui/react!IColumn:interface"
                },
                {
                  "kind": "Content",
                  "text": ", ev: "
                },
                {
                  "kind": "Reference",
                  "text": "React.MouseEvent",
                  "canonicalReference": "@types/react!~React.MouseEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onColumnContextMenu",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsColumnProps#onRenderColumnHeaderTooltip:member",
              "docComment": "/**\n * Render function for providing a column header tooltip.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRenderColumnHeaderTooltip?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRenderFunction",
                  "canonicalReference": "@fluentui/utilities!IRenderFunction:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsColumnRenderTooltipProps",
                  "canonicalReference": "@fluentui/react!IDetailsColumnRenderTooltipProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onRenderColumnHeaderTooltip",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsColumnProps#parentId:member",
              "docComment": "/**\n * Parent ID used for accessibility label(s).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parentId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "parentId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsColumnProps#setDraggedItemIndex:member",
              "docComment": "/**\n * @deprecated\n *\n * use `updateDragInfo`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setDraggedItemIndex?: "
                },
                {
                  "kind": "Content",
                  "text": "(itemIndex: number) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "setDraggedItemIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsColumnProps#styles:member",
              "docComment": "/**\n * The component styles to respect during render.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "styles?: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyleFunctionOrObject",
                  "canonicalReference": "@fluentui/merge-styles!IStyleFunctionOrObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsColumnStyleProps",
                  "canonicalReference": "@fluentui/react!IDetailsColumnStyleProps:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsColumnStyles",
                  "canonicalReference": "@fluentui/react!IDetailsColumnStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "styles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsColumnProps#theme:member",
              "docComment": "/**\n * The theme object to respect during render.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "theme?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITheme",
                  "canonicalReference": "@fluentui/theme!ITheme:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "theme",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsColumnProps#updateDragInfo:member",
              "docComment": "/**\n * Callback on drag and drop event.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateDragInfo?: "
                },
                {
                  "kind": "Content",
                  "text": "(props: {\n        itemIndex: number;\n    }, event?: "
                },
                {
                  "kind": "Reference",
                  "text": "MouseEvent",
                  "canonicalReference": "!MouseEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "updateDragInfo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsColumnProps#useFastIcons:member",
              "docComment": "/**\n * Whether to use fast icon and check components. The icons can't be targeted by customization but are still customizable via class names.\n *\n * @defaultvalue\n *\n * true\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "useFastIcons?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "useFastIcons",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDetailsColumnRenderTooltipProps:interface",
          "docComment": "/**\n * {@docgategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDetailsColumnRenderTooltipProps extends "
            },
            {
              "kind": "Reference",
              "text": "ITooltipHostProps",
              "canonicalReference": "@fluentui/react-internal!ITooltipHostProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IDetailsColumnRenderTooltipProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsColumnRenderTooltipProps#column:member",
              "docComment": "/**\n * Information about the column for which the tooltip is being rendered. Use this to format status information about the column, such as its filter or sort state.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "column?: "
                },
                {
                  "kind": "Reference",
                  "text": "IColumn",
                  "canonicalReference": "@fluentui/react!IColumn:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "column",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluentui/react!IDetailsColumnStyleProps:type",
          "docComment": "/**\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type IDetailsColumnStyleProps = "
            },
            {
              "kind": "Reference",
              "text": "Required",
              "canonicalReference": "!Required:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDetailsColumnProps",
              "canonicalReference": "@fluentui/react!IDetailsColumnProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'theme' | 'cellStyleProps'>> & {\n    headerClassName?: string;\n    isActionable?: boolean;\n    isEmpty?: boolean;\n    isIconVisible?: boolean;\n    isPadded?: boolean;\n    isIconOnly?: boolean;\n    iconClassName?: string;\n    transitionDurationDrag?: number;\n    transitionDurationDrop?: number;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "IDetailsColumnStyleProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDetailsColumnStyles:interface",
          "docComment": "/**\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDetailsColumnStyles "
            }
          ],
          "releaseTag": "Public",
          "name": "IDetailsColumnStyles",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsColumnStyles#accessibleLabel:member",
              "docComment": "/**\n * Styleable label region.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "accessibleLabel: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "accessibleLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsColumnStyles#borderAfterDropping:member",
              "docComment": "/**\n * Styleable border region after drag & drop.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "borderAfterDropping: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "borderAfterDropping",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsColumnStyles#borderWhileDragging:member",
              "docComment": "/**\n * Styleable border while drag & drop occurs.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "borderWhileDragging: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "borderWhileDragging",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsColumnStyles#cellName:member",
              "docComment": "/**\n * Styleable cell name region.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cellName: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "cellName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsColumnStyles#cellTitle:member",
              "docComment": "/**\n * Styleable cell title region.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cellTitle: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "cellTitle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsColumnStyles#cellTooltip:member",
              "docComment": "/**\n * Styleable cell tooltip region.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cellTooltip: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "cellTooltip",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsColumnStyles#filterChevron:member",
              "docComment": "/**\n * Styleable filter glyph.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "filterChevron: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "filterChevron",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsColumnStyles#gripperBarVerticalStyle:member",
              "docComment": "/**\n * Styleable resize glyph region.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gripperBarVerticalStyle: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "gripperBarVerticalStyle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsColumnStyles#iconClassName:member",
              "docComment": "/**\n * Styleable icon region.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "iconClassName: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "iconClassName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsColumnStyles#nearIcon:member",
              "docComment": "/**\n * Styleable margin by icon region.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nearIcon: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "nearIcon",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsColumnStyles#noBorderAfterDropping:member",
              "docComment": "/**\n * Transparent no border region after drag & drop to avoid content shift.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "noBorderAfterDropping: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "noBorderAfterDropping",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsColumnStyles#noBorderWhileDragging:member",
              "docComment": "/**\n * Transparent no border region while drag & drop occurs to avoid content shift.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "noBorderWhileDragging: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "noBorderWhileDragging",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsColumnStyles#root:member",
              "docComment": "/**\n * Styleable root region.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "root: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "root",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsColumnStyles#sortIcon:member",
              "docComment": "/**\n * Styleable column sort icon region.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sortIcon: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "sortIcon",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDetailsFooterBaseProps:interface",
          "docComment": "/**\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDetailsFooterBaseProps extends "
            },
            {
              "kind": "Reference",
              "text": "IDetailsItemProps",
              "canonicalReference": "@fluentui/react!IDetailsItemProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IDetailsFooterBaseProps",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDetailsFooterProps:interface",
          "docComment": "/**\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDetailsFooterProps extends "
            },
            {
              "kind": "Reference",
              "text": "IDetailsFooterBaseProps",
              "canonicalReference": "@fluentui/react!IDetailsFooterBaseProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IDetailsFooterProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsFooterProps#columns:member",
              "docComment": "/**\n * Column metadata\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "columns: "
                },
                {
                  "kind": "Reference",
                  "text": "IColumn",
                  "canonicalReference": "@fluentui/react!IColumn:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "columns",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsFooterProps#selection:member",
              "docComment": "/**\n * Selection from utilities\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selection: "
                },
                {
                  "kind": "Reference",
                  "text": "ISelection",
                  "canonicalReference": "@fluentui/utilities!ISelection:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "selection",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsFooterProps#selectionMode:member",
              "docComment": "/**\n * Selection mode\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectionMode: "
                },
                {
                  "kind": "Reference",
                  "text": "SelectionMode",
                  "canonicalReference": "@fluentui/utilities!SelectionMode:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "selectionMode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDetailsGroupDividerProps:interface",
          "docComment": "/**\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDetailsGroupDividerProps extends "
            },
            {
              "kind": "Reference",
              "text": "IGroupDividerProps",
              "canonicalReference": "@fluentui/react!IGroupDividerProps:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "IDetailsItemProps",
              "canonicalReference": "@fluentui/react!IDetailsItemProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IDetailsGroupDividerProps",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDetailsGroupRenderProps:interface",
          "docComment": "/**\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDetailsGroupRenderProps extends "
            },
            {
              "kind": "Reference",
              "text": "IGroupRenderProps",
              "canonicalReference": "@fluentui/react!IGroupRenderProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IDetailsGroupRenderProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsGroupRenderProps#onRenderFooter:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRenderFooter?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRenderFunction",
                  "canonicalReference": "@fluentui/utilities!IRenderFunction:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsGroupDividerProps",
                  "canonicalReference": "@fluentui/react!IDetailsGroupDividerProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onRenderFooter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsGroupRenderProps#onRenderHeader:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRenderHeader?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRenderFunction",
                  "canonicalReference": "@fluentui/utilities!IRenderFunction:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsGroupDividerProps",
                  "canonicalReference": "@fluentui/react!IDetailsGroupDividerProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onRenderHeader",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDetailsHeader:interface",
          "docComment": "/**\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDetailsHeader "
            }
          ],
          "releaseTag": "Public",
          "name": "IDetailsHeader",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeader#focus:member",
              "docComment": "/**\n * sets focus into the header\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "focus: "
                },
                {
                  "kind": "Content",
                  "text": "() => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "focus",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDetailsHeaderBaseProps:interface",
          "docComment": "/**\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDetailsHeaderBaseProps extends "
            },
            {
              "kind": "Reference",
              "text": "React.ClassAttributes",
              "canonicalReference": "@types/react!~React.ClassAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DetailsHeaderBase",
              "canonicalReference": "@fluentui/react!DetailsHeaderBase:class"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "IDetailsItemProps",
              "canonicalReference": "@fluentui/react!IDetailsItemProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IDetailsHeaderBaseProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderBaseProps#ariaLabel:member",
              "docComment": "/**\n * ariaLabel for the entire header\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ariaLabel?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "ariaLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderBaseProps#ariaLabelForSelectAllCheckbox:member",
              "docComment": "/**\n * ariaLabel for the header checkbox that selects or deselects everything\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ariaLabelForSelectAllCheckbox?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "ariaLabelForSelectAllCheckbox",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderBaseProps#ariaLabelForSelectionColumn:member",
              "docComment": "/**\n * ariaLabel for the selection column\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ariaLabelForSelectionColumn?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "ariaLabelForSelectionColumn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderBaseProps#ariaLabelForToggleAllGroupsButton:member",
              "docComment": "/**\n * ariaLabel for expand/collapse group button\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ariaLabelForToggleAllGroupsButton?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "ariaLabelForToggleAllGroupsButton",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderBaseProps#className:member",
              "docComment": "/**\n * Overriding class name\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "className?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "className",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderBaseProps#collapseAllVisibility:member",
              "docComment": "/**\n * Whether to collapse for all visibility\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "collapseAllVisibility?: "
                },
                {
                  "kind": "Reference",
                  "text": "CollapseAllVisibility",
                  "canonicalReference": "@fluentui/react!CollapseAllVisibility:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "collapseAllVisibility",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderBaseProps#columnReorderOptions:member",
              "docComment": "/**\n * Column reordering options\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "columnReorderOptions?: "
                },
                {
                  "kind": "Reference",
                  "text": "IColumnReorderOptions",
                  "canonicalReference": "@fluentui/react!IColumnReorderOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "columnReorderOptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderBaseProps#columnReorderProps:member",
              "docComment": "/**\n * Column reordering options\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "columnReorderProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "IColumnReorderHeaderProps",
                  "canonicalReference": "@fluentui/react!IColumnReorderHeaderProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "columnReorderProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderBaseProps#componentRef:member",
              "docComment": "/**\n * Ref to the component itself\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentRef?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRefObject",
                  "canonicalReference": "@fluentui/utilities!IRefObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsHeader",
                  "canonicalReference": "@fluentui/react!IDetailsHeader:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "componentRef",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderBaseProps#isAllCollapsed:member",
              "docComment": "/**\n * Whether or not all is collapsed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isAllCollapsed?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isAllCollapsed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderBaseProps#layoutMode:member",
              "docComment": "/**\n * Layout mode - fixedColumns or justified\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "layoutMode: "
                },
                {
                  "kind": "Reference",
                  "text": "DetailsListLayoutMode",
                  "canonicalReference": "@fluentui/react!DetailsListLayoutMode:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "layoutMode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderBaseProps#minimumPixelsForDrag:member",
              "docComment": "/**\n * Minimum pixels to be moved before dragging is registered\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "minimumPixelsForDrag?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "minimumPixelsForDrag",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderBaseProps#onColumnAutoResized:member",
              "docComment": "/**\n * Callback for when column is automatically resized\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onColumnAutoResized?: "
                },
                {
                  "kind": "Content",
                  "text": "(column: "
                },
                {
                  "kind": "Reference",
                  "text": "IColumn",
                  "canonicalReference": "@fluentui/react!IColumn:interface"
                },
                {
                  "kind": "Content",
                  "text": ", columnIndex: number) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onColumnAutoResized",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderBaseProps#onColumnClick:member",
              "docComment": "/**\n * Callback for when the column is clicked\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onColumnClick?: "
                },
                {
                  "kind": "Content",
                  "text": "(ev: "
                },
                {
                  "kind": "Reference",
                  "text": "React.MouseEvent",
                  "canonicalReference": "@types/react!~React.MouseEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">, column: "
                },
                {
                  "kind": "Reference",
                  "text": "IColumn",
                  "canonicalReference": "@fluentui/react!IColumn:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onColumnClick",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderBaseProps#onColumnContextMenu:member",
              "docComment": "/**\n * Callback for when the column needs to show a context menu\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onColumnContextMenu?: "
                },
                {
                  "kind": "Content",
                  "text": "(column: "
                },
                {
                  "kind": "Reference",
                  "text": "IColumn",
                  "canonicalReference": "@fluentui/react!IColumn:interface"
                },
                {
                  "kind": "Content",
                  "text": ", ev: "
                },
                {
                  "kind": "Reference",
                  "text": "React.MouseEvent",
                  "canonicalReference": "@types/react!~React.MouseEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onColumnContextMenu",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderBaseProps#onColumnIsSizingChanged:member",
              "docComment": "/**\n * Callback for when column sizing has changed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onColumnIsSizingChanged?: "
                },
                {
                  "kind": "Content",
                  "text": "(column: "
                },
                {
                  "kind": "Reference",
                  "text": "IColumn",
                  "canonicalReference": "@fluentui/react!IColumn:interface"
                },
                {
                  "kind": "Content",
                  "text": ", isSizing: boolean) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onColumnIsSizingChanged",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderBaseProps#onColumnResized:member",
              "docComment": "/**\n * Callback for when column is resized\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onColumnResized?: "
                },
                {
                  "kind": "Content",
                  "text": "(column: "
                },
                {
                  "kind": "Reference",
                  "text": "IColumn",
                  "canonicalReference": "@fluentui/react!IColumn:interface"
                },
                {
                  "kind": "Content",
                  "text": ", newWidth: number, columnIndex: number) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onColumnResized",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderBaseProps#onRenderColumnHeaderTooltip:member",
              "docComment": "/**\n * Callback to render a tooltip for the column header\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRenderColumnHeaderTooltip?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRenderFunction",
                  "canonicalReference": "@fluentui/utilities!IRenderFunction:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsColumnRenderTooltipProps",
                  "canonicalReference": "@fluentui/react!IDetailsColumnRenderTooltipProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onRenderColumnHeaderTooltip",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderBaseProps#onRenderDetailsCheckbox:member",
              "docComment": "/**\n * If provided, can be used to render a custom checkbox\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRenderDetailsCheckbox?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRenderFunction",
                  "canonicalReference": "@fluentui/utilities!IRenderFunction:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsCheckboxProps",
                  "canonicalReference": "@fluentui/react!IDetailsCheckboxProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onRenderDetailsCheckbox",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderBaseProps#onToggleCollapseAll:member",
              "docComment": "/**\n * Callback for when collapse all is toggled\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onToggleCollapseAll?: "
                },
                {
                  "kind": "Content",
                  "text": "(isAllCollapsed: boolean) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onToggleCollapseAll",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderBaseProps#selectAllVisibility:member",
              "docComment": "/**\n * Select all button visibility\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectAllVisibility?: "
                },
                {
                  "kind": "Reference",
                  "text": "SelectAllVisibility",
                  "canonicalReference": "@fluentui/react!SelectAllVisibility:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "selectAllVisibility",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderBaseProps#styles:member",
              "docComment": "/**\n * Call to provide customized styling that will layer on top of the variant rules.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "styles?: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyleFunctionOrObject",
                  "canonicalReference": "@fluentui/merge-styles!IStyleFunctionOrObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsHeaderStyleProps",
                  "canonicalReference": "@fluentui/react!IDetailsHeaderStyleProps:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsHeaderStyles",
                  "canonicalReference": "@fluentui/react!IDetailsHeaderStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "styles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderBaseProps#theme:member",
              "docComment": "/**\n * Theme from the Higher Order Component\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "theme?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITheme",
                  "canonicalReference": "@fluentui/theme!ITheme:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "theme",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderBaseProps#useFastIcons:member",
              "docComment": "/**\n * Whether to use fast icon and check components. The icons can't be targeted by customization but are still customizable via class names.\n *\n * @defaultvalue\n *\n * true\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "useFastIcons?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "useFastIcons",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            },
            {
              "startIndex": 6,
              "endIndex": 8
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDetailsHeaderProps:interface",
          "docComment": "/**\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDetailsHeaderProps extends "
            },
            {
              "kind": "Reference",
              "text": "IDetailsHeaderBaseProps",
              "canonicalReference": "@fluentui/react!IDetailsHeaderBaseProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IDetailsHeaderProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderProps#columns:member",
              "docComment": "/**\n * Column metadata\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "columns: "
                },
                {
                  "kind": "Reference",
                  "text": "IColumn",
                  "canonicalReference": "@fluentui/react!IColumn:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "columns",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderProps#selection:member",
              "docComment": "/**\n * Selection from utilities\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selection: "
                },
                {
                  "kind": "Reference",
                  "text": "ISelection",
                  "canonicalReference": "@fluentui/utilities!ISelection:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "selection",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderProps#selectionMode:member",
              "docComment": "/**\n * Selection mode\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectionMode: "
                },
                {
                  "kind": "Reference",
                  "text": "SelectionMode",
                  "canonicalReference": "@fluentui/utilities!SelectionMode:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "selectionMode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDetailsHeaderState:interface",
          "docComment": "/**\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDetailsHeaderState "
            }
          ],
          "releaseTag": "Public",
          "name": "IDetailsHeaderState",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderState#columnResizeDetails:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "columnResizeDetails?: "
                },
                {
                  "kind": "Reference",
                  "text": "IColumnResizeDetails",
                  "canonicalReference": "@fluentui/react!IColumnResizeDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "columnResizeDetails",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderState#isAllCollapsed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isAllCollapsed?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isAllCollapsed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderState#isAllSelected:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isAllSelected?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isAllSelected",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderState#isSizing:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isSizing?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isSizing",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluentui/react!IDetailsHeaderStyleProps:type",
          "docComment": "/**\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type IDetailsHeaderStyleProps = "
            },
            {
              "kind": "Reference",
              "text": "Required",
              "canonicalReference": "!Required:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDetailsHeaderProps",
              "canonicalReference": "@fluentui/react!IDetailsHeaderProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'theme'>> & "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDetailsHeaderProps",
              "canonicalReference": "@fluentui/react!IDetailsHeaderProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'className'> & {\n    isSelectAllHidden?: boolean;\n    isAllSelected?: boolean;\n    isResizingColumn?: boolean;\n    isAllCollapsed?: boolean;\n    isSizing?: boolean;\n    isCheckboxHidden?: boolean;\n    cellStyleProps?: "
            },
            {
              "kind": "Reference",
              "text": "ICellStyleProps",
              "canonicalReference": "@fluentui/react!ICellStyleProps:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "IDetailsHeaderStyleProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 13
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDetailsHeaderStyles:interface",
          "docComment": "/**\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDetailsHeaderStyles "
            }
          ],
          "releaseTag": "Public",
          "name": "IDetailsHeaderStyles",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderStyles#accessibleLabel:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "accessibleLabel: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "accessibleLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderStyles#cellIsActionable:member",
              "docComment": "/**\n * @deprecated\n *\n * Not used\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cellIsActionable: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "cellIsActionable",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderStyles#cellIsCheck:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cellIsCheck: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "cellIsCheck",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderStyles#cellIsEmpty:member",
              "docComment": "/**\n * @deprecated\n *\n * Not used\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cellIsEmpty: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "cellIsEmpty",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderStyles#cellIsGroupExpander:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cellIsGroupExpander: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "cellIsGroupExpander",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderStyles#cellIsResizing:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cellIsResizing: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "cellIsResizing",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderStyles#cellSizer:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cellSizer: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "cellSizer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderStyles#cellSizerEnd:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cellSizerEnd: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "cellSizerEnd",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderStyles#cellSizerStart:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cellSizerStart: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "cellSizerStart",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderStyles#cellWrapperPadded:member",
              "docComment": "/**\n * @deprecated\n *\n * Not used\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cellWrapperPadded: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "cellWrapperPadded",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderStyles#check:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "check: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "check",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderStyles#checkTooltip:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checkTooltip: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "checkTooltip",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderStyles#collapseButton:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "collapseButton: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "collapseButton",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderStyles#dropHintCaretStyle:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dropHintCaretStyle: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dropHintCaretStyle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderStyles#dropHintCircleStyle:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dropHintCircleStyle: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dropHintCircleStyle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderStyles#dropHintLineStyle:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dropHintLineStyle: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dropHintLineStyle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderStyles#dropHintStyle:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dropHintStyle: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dropHintStyle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderStyles#root:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "root: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "root",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsHeaderStyles#sizingOverlay:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sizingOverlay: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "sizingOverlay",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDetailsItemProps:interface",
          "docComment": "/**\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDetailsItemProps "
            }
          ],
          "releaseTag": "Public",
          "name": "IDetailsItemProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsItemProps#cellStyleProps:member",
              "docComment": "/**\n * Rules for rendering column cells.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cellStyleProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "ICellStyleProps",
                  "canonicalReference": "@fluentui/react!ICellStyleProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "cellStyleProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsItemProps#checkboxVisibility:member",
              "docComment": "/**\n * Checkbox visibility\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checkboxVisibility?: "
                },
                {
                  "kind": "Reference",
                  "text": "CheckboxVisibility",
                  "canonicalReference": "@fluentui/react!CheckboxVisibility:enum"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "checkboxVisibility",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsItemProps#columns:member",
              "docComment": "/**\n * Column metadata\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "columns?: "
                },
                {
                  "kind": "Reference",
                  "text": "IColumn",
                  "canonicalReference": "@fluentui/react!IColumn:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "columns",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsItemProps#groupNestingDepth:member",
              "docComment": "/**\n * Nesting depth of a grouping\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "groupNestingDepth?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "groupNestingDepth",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsItemProps#indentWidth:member",
              "docComment": "/**\n * How much to indent\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "indentWidth?: "
                },
                {
                  "kind": "Content",
                  "text": "number | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "indentWidth",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsItemProps#rowWidth:member",
              "docComment": "/**\n * Minimum width of the row.\n *\n * @defaultvalue\n *\n * 0\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rowWidth?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "rowWidth",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsItemProps#selection:member",
              "docComment": "/**\n * Selection from utilities\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selection?: "
                },
                {
                  "kind": "Reference",
                  "text": "ISelection",
                  "canonicalReference": "@fluentui/utilities!ISelection:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "selection",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsItemProps#selectionMode:member",
              "docComment": "/**\n * Selection mode\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectionMode?: "
                },
                {
                  "kind": "Reference",
                  "text": "SelectionMode",
                  "canonicalReference": "@fluentui/utilities!SelectionMode:enum"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "selectionMode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsItemProps#viewport:member",
              "docComment": "/**\n * View port of the virtualized list\n *\n * @deprecated\n *\n * use rowWidth instead\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "viewport?: "
                },
                {
                  "kind": "Reference",
                  "text": "IViewport",
                  "canonicalReference": "@fluentui/react-internal!IViewport:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "viewport",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDetailsList:interface",
          "docComment": "/**\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDetailsList extends "
            },
            {
              "kind": "Reference",
              "text": "IList",
              "canonicalReference": "@fluentui/react-internal!IList:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IDetailsList",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsList#focusIndex:member",
              "docComment": "/**\n * Scroll to and focus the item at the given index. focusIndex will call scrollToIndex on the specified index.\n *\n * @param index - Index of item to scroll to\n *\n * @param forceIntoFirstElement - If true, focus will be set to the first focusable child element of the item rather than the item itself.\n *\n * @param measureItem - Optional callback to measure the height of an individual item\n *\n * @param scrollToMode - Optional setting to determine where in the window the item should be scrolled to when focused.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "focusIndex: "
                },
                {
                  "kind": "Content",
                  "text": "(index: number, forceIntoFirstElement?: boolean, measureItem?: (itemIndex: number) => number, scrollToMode?: "
                },
                {
                  "kind": "Reference",
                  "text": "ScrollToMode",
                  "canonicalReference": "@fluentui/react-internal!ScrollToMode:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "focusIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsList#forceUpdate:member",
              "docComment": "/**\n * Ensures that the list content is updated. Call this in cases where the list prop updates don't change, but the list still needs to be re-evaluated. For example, if a sizer bar is adjusted and causes the list width to change, you can call this to force a re-evaluation. Be aware that this can be an expensive operation and should be done sparingly.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forceUpdate: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "forceUpdate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsList#getStartItemIndexInView:member",
              "docComment": "/**\n * Get the start index of the page that is currently in view\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getStartItemIndexInView: "
                },
                {
                  "kind": "Content",
                  "text": "() => number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "getStartItemIndexInView",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDetailsListCheckboxProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDetailsListCheckboxProps extends "
            },
            {
              "kind": "Reference",
              "text": "IDetailsCheckboxProps",
              "canonicalReference": "@fluentui/react!IDetailsCheckboxProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IDetailsListCheckboxProps",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDetailsListProps:interface",
          "docComment": "/**\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDetailsListProps extends "
            },
            {
              "kind": "Reference",
              "text": "IBaseProps",
              "canonicalReference": "@fluentui/utilities!IBaseProps:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDetailsList",
              "canonicalReference": "@fluentui/react!IDetailsList:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "IWithViewportProps",
              "canonicalReference": "@fluentui/react-internal!IWithViewportProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IDetailsListProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#ariaLabel:member",
              "docComment": "/**\n * Accessible label describing or summarizing the list.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ariaLabel?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "ariaLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#ariaLabelForGrid:member",
              "docComment": "/**\n * Accessible label for the grid within the list.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ariaLabelForGrid?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "ariaLabelForGrid",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#ariaLabelForListHeader:member",
              "docComment": "/**\n * Accessible label for the list header.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ariaLabelForListHeader?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "ariaLabelForListHeader",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#ariaLabelForSelectAllCheckbox:member",
              "docComment": "/**\n * Accessible label for the select all checkbox.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ariaLabelForSelectAllCheckbox?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "ariaLabelForSelectAllCheckbox",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#ariaLabelForSelectionColumn:member",
              "docComment": "/**\n * Accessible label for the name of the selection column.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ariaLabelForSelectionColumn?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "ariaLabelForSelectionColumn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#cellStyleProps:member",
              "docComment": "/**\n * Props impacting the render style of cells. Since these have an impact on calculated column widths, they are handled separately from normal theme styling, but they are passed to the styling system.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cellStyleProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "ICellStyleProps",
                  "canonicalReference": "@fluentui/react!ICellStyleProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "cellStyleProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#checkboxCellClassName:member",
              "docComment": "/**\n * Class name to add to the cell of a checkbox.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checkboxCellClassName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "checkboxCellClassName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#checkboxVisibility:member",
              "docComment": "/**\n * Controls the visibility of selection check box.\n *\n * @defaultvalue\n *\n * CheckboxVisibility.onHover\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checkboxVisibility?: "
                },
                {
                  "kind": "Reference",
                  "text": "CheckboxVisibility",
                  "canonicalReference": "@fluentui/react!CheckboxVisibility:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "checkboxVisibility",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#checkButtonAriaLabel:member",
              "docComment": "/**\n * Accessible label for the check button.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checkButtonAriaLabel?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "checkButtonAriaLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#className:member",
              "docComment": "/**\n * Class name to add to the root element.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "className?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "className",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#columnReorderOptions:member",
              "docComment": "/**\n * Options for column reordering using drag and drop.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "columnReorderOptions?: "
                },
                {
                  "kind": "Reference",
                  "text": "IColumnReorderOptions",
                  "canonicalReference": "@fluentui/react!IColumnReorderOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "columnReorderOptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#columns:member",
              "docComment": "/**\n * column defitions. If none are provided, default columns will be created based on the items' properties.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "columns?: "
                },
                {
                  "kind": "Reference",
                  "text": "IColumn",
                  "canonicalReference": "@fluentui/react!IColumn:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "columns",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#compact:member",
              "docComment": "/**\n * Whether to render in compact mode.\n *\n * @defaultvalue\n *\n * false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compact?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "compact",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#componentRef:member",
              "docComment": "/**\n * Callback to access the IDetailsList interface. Use this instead of ref for accessing the public methods and properties of the component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentRef?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRefObject",
                  "canonicalReference": "@fluentui/utilities!IRefObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsList",
                  "canonicalReference": "@fluentui/react!IDetailsList:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "componentRef",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#constrainMode:member",
              "docComment": "/**\n * Controls how the list contrains overflow.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constrainMode?: "
                },
                {
                  "kind": "Reference",
                  "text": "ConstrainMode",
                  "canonicalReference": "@fluentui/react!ConstrainMode:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "constrainMode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#disableSelectionZone:member",
              "docComment": "/**\n * Whether to disable the built-in SelectionZone, so the host component can provide its own.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "disableSelectionZone?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "disableSelectionZone",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#dragDropEvents:member",
              "docComment": "/**\n * Map of callback functions related to row drag and drop functionality.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dragDropEvents?: "
                },
                {
                  "kind": "Reference",
                  "text": "IDragDropEvents",
                  "canonicalReference": "@fluentui/react-internal!IDragDropEvents:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dragDropEvents",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#enableUpdateAnimations:member",
              "docComment": "/**\n * Whether to animate updates\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enableUpdateAnimations?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "enableUpdateAnimations",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#enterModalSelectionOnTouch:member",
              "docComment": "/**\n * Whether the selection zone should enter modal state on touch.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enterModalSelectionOnTouch?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "enterModalSelectionOnTouch",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#getCellValueKey:member",
              "docComment": "/**\n * If provided, will be the \"default\" item column cell value return. A column's `getValueKey` can override `getCellValueKey`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCellValueKey?: "
                },
                {
                  "kind": "Content",
                  "text": "(item?: any, index?: number, column?: "
                },
                {
                  "kind": "Reference",
                  "text": "IColumn",
                  "canonicalReference": "@fluentui/react!IColumn:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "getCellValueKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#getGroupHeight:member",
              "docComment": "/**\n * Callback to override default group height calculation used by list virtualization.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getGroupHeight?: "
                },
                {
                  "kind": "Reference",
                  "text": "IGroupedListProps",
                  "canonicalReference": "@fluentui/react!IGroupedListProps:interface"
                },
                {
                  "kind": "Content",
                  "text": "['getGroupHeight']"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "getGroupHeight",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#getKey:member",
              "docComment": "/**\n * Callback to get the item key, to be used in the selection and on render. Must be provided if sorting or filtering is enabled.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getKey?: "
                },
                {
                  "kind": "Content",
                  "text": "(item: any, index?: number) => string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "getKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#getRowAriaDescribedBy:member",
              "docComment": "/**\n * Callback to get the aria-describedby IDs (space-separated strings) of elements that describe the item.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getRowAriaDescribedBy?: "
                },
                {
                  "kind": "Content",
                  "text": "(item: any) => string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "getRowAriaDescribedBy",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#getRowAriaLabel:member",
              "docComment": "/**\n * Callback to get the aria-label string for a given item.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getRowAriaLabel?: "
                },
                {
                  "kind": "Content",
                  "text": "(item: any) => string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "getRowAriaLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#groupProps:member",
              "docComment": "/**\n * Override properties to render groups.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "groupProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsGroupRenderProps",
                  "canonicalReference": "@fluentui/react!IDetailsGroupRenderProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "groupProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#groups:member",
              "docComment": "/**\n * Grouping instructions.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "groups?: "
                },
                {
                  "kind": "Reference",
                  "text": "IGroup",
                  "canonicalReference": "@fluentui/react!IGroup:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "groups",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#indentWidth:member",
              "docComment": "/**\n * Override for the indent width used for group nesting.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "indentWidth?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "indentWidth",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#initialFocusedIndex:member",
              "docComment": "/**\n * Default index to set focus to once the items have rendered and the index exists.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initialFocusedIndex?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "initialFocusedIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#isHeaderVisible:member",
              "docComment": "/**\n * Controls the visibility of the header.\n *\n * @defaultvalue\n *\n * true\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isHeaderVisible?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isHeaderVisible",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#isPlaceholderData:member",
              "docComment": "/**\n * Set this to true to indicate that the items being displayed are placeholder data.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isPlaceholderData?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isPlaceholderData",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#items:member",
              "docComment": "/**\n * The items to render.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "items: "
                },
                {
                  "kind": "Content",
                  "text": "any[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "items",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#layoutMode:member",
              "docComment": "/**\n * Controls how the columns are adjusted.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "layoutMode?: "
                },
                {
                  "kind": "Reference",
                  "text": "DetailsListLayoutMode",
                  "canonicalReference": "@fluentui/react!DetailsListLayoutMode:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "layoutMode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#listProps:member",
              "docComment": "/**\n * Properties to pass through to the List components being rendered.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "IListProps",
                  "canonicalReference": "@fluentui/react-internal!IListProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "listProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#minimumPixelsForDrag:member",
              "docComment": "/**\n * The minimum mouse move distance to interpret the action as drag event.\n *\n * @defaultvalue\n *\n * 5\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "minimumPixelsForDrag?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "minimumPixelsForDrag",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#onActiveItemChanged:member",
              "docComment": "/**\n * Callback for when an item in the list becomes active by clicking anywhere inside the row or navigating to it with the keyboard.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onActiveItemChanged?: "
                },
                {
                  "kind": "Content",
                  "text": "(item?: any, index?: number, ev?: "
                },
                {
                  "kind": "Reference",
                  "text": "React.FocusEvent",
                  "canonicalReference": "@types/react!~React.FocusEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onActiveItemChanged",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#onColumnHeaderClick:member",
              "docComment": "/**\n * Callback for when the user clicks on the column header.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onColumnHeaderClick?: "
                },
                {
                  "kind": "Content",
                  "text": "(ev?: "
                },
                {
                  "kind": "Reference",
                  "text": "React.MouseEvent",
                  "canonicalReference": "@types/react!~React.MouseEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">, column?: "
                },
                {
                  "kind": "Reference",
                  "text": "IColumn",
                  "canonicalReference": "@fluentui/react!IColumn:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onColumnHeaderClick",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#onColumnHeaderContextMenu:member",
              "docComment": "/**\n * Callback for when the user asks for a contextual menu (usually via right click) from a column header.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onColumnHeaderContextMenu?: "
                },
                {
                  "kind": "Content",
                  "text": "(column?: "
                },
                {
                  "kind": "Reference",
                  "text": "IColumn",
                  "canonicalReference": "@fluentui/react!IColumn:interface"
                },
                {
                  "kind": "Content",
                  "text": ", ev?: "
                },
                {
                  "kind": "Reference",
                  "text": "React.MouseEvent",
                  "canonicalReference": "@types/react!~React.MouseEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onColumnHeaderContextMenu",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#onColumnResize:member",
              "docComment": "/**\n * Callback fired on column resize\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onColumnResize?: "
                },
                {
                  "kind": "Content",
                  "text": "(column?: "
                },
                {
                  "kind": "Reference",
                  "text": "IColumn",
                  "canonicalReference": "@fluentui/react!IColumn:interface"
                },
                {
                  "kind": "Content",
                  "text": ", newWidth?: number, columnIndex?: number) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onColumnResize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#onDidUpdate:member",
              "docComment": "/**\n * Callback for when the list has been updated. Useful for telemetry tracking externally.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onDidUpdate?: "
                },
                {
                  "kind": "Content",
                  "text": "(detailsList?: "
                },
                {
                  "kind": "Reference",
                  "text": "DetailsListBase",
                  "canonicalReference": "@fluentui/react!DetailsListBase:class"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onDidUpdate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#onItemContextMenu:member",
              "docComment": "/**\n * Callback for when the context menu of an item has been accessed. If undefined or false is returned, `ev.preventDefault()` will be called.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onItemContextMenu?: "
                },
                {
                  "kind": "Content",
                  "text": "(item?: any, index?: number, ev?: "
                },
                {
                  "kind": "Reference",
                  "text": "Event",
                  "canonicalReference": "!Event:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void | boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onItemContextMenu",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#onItemInvoked:member",
              "docComment": "/**\n * Callback for when a given row has been invoked (by pressing enter while it is selected.)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onItemInvoked?: "
                },
                {
                  "kind": "Content",
                  "text": "(item?: any, index?: number, ev?: "
                },
                {
                  "kind": "Reference",
                  "text": "Event",
                  "canonicalReference": "!Event:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onItemInvoked",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#onRenderCheckbox:member",
              "docComment": "/**\n * If provided, can be used to render a custom checkbox.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRenderCheckbox?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRenderFunction",
                  "canonicalReference": "@fluentui/utilities!IRenderFunction:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsListCheckboxProps",
                  "canonicalReference": "@fluentui/react!IDetailsListCheckboxProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onRenderCheckbox",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#onRenderDetailsFooter:member",
              "docComment": "/**\n * An override to render the details footer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRenderDetailsFooter?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRenderFunction",
                  "canonicalReference": "@fluentui/utilities!IRenderFunction:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsFooterProps",
                  "canonicalReference": "@fluentui/react!IDetailsFooterProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onRenderDetailsFooter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#onRenderDetailsHeader:member",
              "docComment": "/**\n * An override to render the details header.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRenderDetailsHeader?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRenderFunction",
                  "canonicalReference": "@fluentui/utilities!IRenderFunction:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsHeaderProps",
                  "canonicalReference": "@fluentui/react!IDetailsHeaderProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onRenderDetailsHeader",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#onRenderItemColumn:member",
              "docComment": "/**\n * If provided, will be the \"default\" item column renderer method. This affects cells within the rows, not the rows themselves. If a column definition provides its own `onRender` method, that will be used instead of this.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRenderItemColumn?: "
                },
                {
                  "kind": "Content",
                  "text": "(item?: any, index?: number, column?: "
                },
                {
                  "kind": "Reference",
                  "text": "IColumn",
                  "canonicalReference": "@fluentui/react!IColumn:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "React.ReactNode",
                  "canonicalReference": "@types/react!~React.ReactNode:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onRenderItemColumn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#onRenderMissingItem:member",
              "docComment": "/**\n * Callback for what to render when the item is missing.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRenderMissingItem?: "
                },
                {
                  "kind": "Content",
                  "text": "(index?: number, rowProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsRowProps",
                  "canonicalReference": "@fluentui/react!IDetailsRowProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "React.ReactNode",
                  "canonicalReference": "@types/react!~React.ReactNode:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onRenderMissingItem",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#onRenderRow:member",
              "docComment": "/**\n * Callback to override the default row rendering.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRenderRow?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRenderFunction",
                  "canonicalReference": "@fluentui/utilities!IRenderFunction:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsRowProps",
                  "canonicalReference": "@fluentui/react!IDetailsRowProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onRenderRow",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#onRowDidMount:member",
              "docComment": "/**\n * Callback for when a given row has been mounted. Useful for identifying when a row has been rendered on the page.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRowDidMount?: "
                },
                {
                  "kind": "Content",
                  "text": "(item?: any, index?: number) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onRowDidMount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#onRowWillUnmount:member",
              "docComment": "/**\n * Callback for when a given row has been unmounted. Useful for identifying when a row has been removed from the page.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRowWillUnmount?: "
                },
                {
                  "kind": "Content",
                  "text": "(item?: any, index?: number) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onRowWillUnmount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#onShouldVirtualize:member",
              "docComment": "/**\n * Callback to determine whether the list should be rendered in full, or virtualized.\n *\n * Virtualization will add and remove pages of items as the user scrolls them into the visible range. This benefits larger list scenarios by reducing the DOM on the screen, but can negatively affect performance for smaller lists.\n *\n * The default implementation will virtualize when this callback is not provided.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onShouldVirtualize?: "
                },
                {
                  "kind": "Content",
                  "text": "(props: "
                },
                {
                  "kind": "Reference",
                  "text": "IListProps",
                  "canonicalReference": "@fluentui/react-internal!IListProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onShouldVirtualize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#rowElementEventMap:member",
              "docComment": "/**\n * Event names and corresponding callbacks that will be registered to rendered row elements.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rowElementEventMap?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        eventName: string;\n        callback: (context: "
                },
                {
                  "kind": "Reference",
                  "text": "IDragDropContext",
                  "canonicalReference": "@fluentui/react-internal!IDragDropContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ", event?: any) => void;\n    }[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "rowElementEventMap",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#selection:member",
              "docComment": "/**\n * Selection model to track selection state.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selection?: "
                },
                {
                  "kind": "Reference",
                  "text": "ISelection",
                  "canonicalReference": "@fluentui/utilities!ISelection:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "selection",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#selectionMode:member",
              "docComment": "/**\n * Controls how/if the details list manages selection. Options include none, single, multiple\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectionMode?: "
                },
                {
                  "kind": "Reference",
                  "text": "SelectionMode",
                  "canonicalReference": "@fluentui/utilities!SelectionMode:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "selectionMode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#selectionPreservedOnEmptyClick:member",
              "docComment": "/**\n * By default, selection is cleared when clicking on an empty (non-focusable) section of the screen. Setting this value to true overrides that behavior and maintains selection.\n *\n * @defaultvalue\n *\n * false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectionPreservedOnEmptyClick?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "selectionPreservedOnEmptyClick",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#selectionZoneProps:member",
              "docComment": "/**\n * Additional props to pass through to the SelectionZone created by default.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectionZoneProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "ISelectionZoneProps",
                  "canonicalReference": "@fluentui/react-internal!ISelectionZoneProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "selectionZoneProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#setKey:member",
              "docComment": "/**\n * A key that uniquely identifies the given items. If provided, the selection will be reset when the key changes.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setKey?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "setKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#shouldApplyApplicationRole:member",
              "docComment": "/**\n * Whether the role `application` should be applied to the list.\n *\n * @defaultvalue\n *\n * false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "shouldApplyApplicationRole?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "shouldApplyApplicationRole",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#styles:member",
              "docComment": "/**\n * Custom overrides to the themed or default styles.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "styles?: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyleFunctionOrObject",
                  "canonicalReference": "@fluentui/merge-styles!IStyleFunctionOrObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsListStyleProps",
                  "canonicalReference": "@fluentui/react!IDetailsListStyleProps:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsListStyles",
                  "canonicalReference": "@fluentui/react!IDetailsListStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "styles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#theme:member",
              "docComment": "/**\n * Theme provided by a higher-order component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "theme?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITheme",
                  "canonicalReference": "@fluentui/theme!ITheme:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "theme",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#useFastIcons:member",
              "docComment": "/**\n * Whether to use fast icon and check components. The icons can't be targeted by customization but are still customizable via class names.\n *\n * @defaultvalue\n *\n * true\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "useFastIcons?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "useFastIcons",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#usePageCache:member",
              "docComment": "/**\n * Whether to enable render page caching. This is an experimental performance optimization that is off by default.\n *\n * @defaultvalue\n *\n * false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "usePageCache?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "usePageCache",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#useReducedRowRenderer:member",
              "docComment": "/**\n * Whether to re-render a row only when props changed. Might cause regression when depending on external updates.\n *\n * @defaultvalue\n *\n * false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "useReducedRowRenderer?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "useReducedRowRenderer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListProps#viewport:member",
              "docComment": "/**\n * Viewport info, provided by the `withViewport` decorator.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "viewport?: "
                },
                {
                  "kind": "Reference",
                  "text": "IViewport",
                  "canonicalReference": "@fluentui/react-internal!IViewport:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "viewport",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            },
            {
              "startIndex": 6,
              "endIndex": 8
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDetailsListState:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDetailsListState "
            }
          ],
          "releaseTag": "Public",
          "name": "IDetailsListState",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListState#adjustedColumns:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "adjustedColumns: "
                },
                {
                  "kind": "Reference",
                  "text": "IColumn",
                  "canonicalReference": "@fluentui/react!IColumn:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "adjustedColumns",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListState#focusedItemIndex:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "focusedItemIndex: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "focusedItemIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluentui/react!IDetailsListState#getDerivedStateFromProps:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getDerivedStateFromProps(nextProps: "
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsListProps",
                  "canonicalReference": "@fluentui/react!IDetailsListProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ", previousState: "
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsListState",
                  "canonicalReference": "@fluentui/react!IDetailsListState:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsListState",
                  "canonicalReference": "@fluentui/react!IDetailsListState:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "nextProps",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "previousState",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getDerivedStateFromProps"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListState#isCollapsed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isCollapsed?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isCollapsed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListState#isSizing:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isSizing?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isSizing",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListState#isSomeGroupExpanded:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isSomeGroupExpanded?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isSomeGroupExpanded",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListState#lastSelectionMode:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lastSelectionMode?: "
                },
                {
                  "kind": "Reference",
                  "text": "SelectionMode",
                  "canonicalReference": "@fluentui/utilities!SelectionMode:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "lastSelectionMode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListState#lastWidth:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lastWidth?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "lastWidth",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListState#version:member",
              "docComment": "/**\n * A unique object used to force-update the List when it changes.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "version: "
                },
                {
                  "kind": "Content",
                  "text": "{}"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "version",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluentui/react!IDetailsListStyleProps:type",
          "docComment": "/**\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type IDetailsListStyleProps = "
            },
            {
              "kind": "Reference",
              "text": "Required",
              "canonicalReference": "!Required:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDetailsListProps",
              "canonicalReference": "@fluentui/react!IDetailsListProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'theme'>> & "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDetailsListProps",
              "canonicalReference": "@fluentui/react!IDetailsListProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'className'> & {\n    isHorizontalConstrained?: boolean;\n    compact?: boolean;\n    isFixed?: boolean;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "IDetailsListStyleProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 11
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDetailsListStyles:interface",
          "docComment": "/**\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDetailsListStyles "
            }
          ],
          "releaseTag": "Public",
          "name": "IDetailsListStyles",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListStyles#contentWrapper:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "contentWrapper: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "contentWrapper",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListStyles#focusZone:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "focusZone: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "focusZone",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListStyles#headerWrapper:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "headerWrapper: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "headerWrapper",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsListStyles#root:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "root: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "root",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDetailsRow:interface",
          "docComment": "/**\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDetailsRow "
            }
          ],
          "releaseTag": "Public",
          "name": "IDetailsRow",
          "members": [],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDetailsRowBaseProps:interface",
          "docComment": "/**\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDetailsRowBaseProps extends "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDetailsListProps",
              "canonicalReference": "@fluentui/react!IDetailsListProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'onRenderItemColumn' | 'getCellValueKey'>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "IBaseProps",
              "canonicalReference": "@fluentui/utilities!IBaseProps:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDetailsRow",
              "canonicalReference": "@fluentui/react!IDetailsRow:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "IDetailsItemProps",
              "canonicalReference": "@fluentui/react!IDetailsItemProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IDetailsRowBaseProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowBaseProps#cellsByColumn:member",
              "docComment": "/**\n * Optional pre-rendered content per column. Preferred over onRender or onRenderItemColumn if provided.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cellsByColumn?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [columnKey: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ReactNode",
                  "canonicalReference": "@types/react!~React.ReactNode:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "cellsByColumn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowBaseProps#checkboxCellClassName:member",
              "docComment": "/**\n * Class name for the checkbox cell\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checkboxCellClassName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "checkboxCellClassName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowBaseProps#checkButtonAriaLabel:member",
              "docComment": "/**\n * Check button's aria label\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checkButtonAriaLabel?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "checkButtonAriaLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowBaseProps#className:member",
              "docComment": "/**\n * Overriding class name\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "className?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "className",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowBaseProps#collapseAllVisibility:member",
              "docComment": "/**\n * Collapse all visibility\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "collapseAllVisibility?: "
                },
                {
                  "kind": "Reference",
                  "text": "CollapseAllVisibility",
                  "canonicalReference": "@fluentui/react!CollapseAllVisibility:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "collapseAllVisibility",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowBaseProps#compact:member",
              "docComment": "/**\n * Whether to render in compact mode\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compact?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "compact",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowBaseProps#componentRef:member",
              "docComment": "/**\n * Ref of the component\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentRef?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRefObject",
                  "canonicalReference": "@fluentui/utilities!IRefObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsRow",
                  "canonicalReference": "@fluentui/react!IDetailsRow:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "componentRef",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowBaseProps#dragDropEvents:member",
              "docComment": "/**\n * Handling drag and drop events\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dragDropEvents?: "
                },
                {
                  "kind": "Reference",
                  "text": "IDragDropEvents",
                  "canonicalReference": "@fluentui/react-internal!IDragDropEvents:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dragDropEvents",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowBaseProps#dragDropHelper:member",
              "docComment": "/**\n * Helper for the drag and drop\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dragDropHelper?: "
                },
                {
                  "kind": "Reference",
                  "text": "IDragDropHelper",
                  "canonicalReference": "@fluentui/react-internal!IDragDropHelper:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dragDropHelper",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowBaseProps#enableUpdateAnimations:member",
              "docComment": "/**\n * Whether to animate updates\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enableUpdateAnimations?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "enableUpdateAnimations",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowBaseProps#eventsToRegister:member",
              "docComment": "/**\n * A list of events to register\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "eventsToRegister?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        eventName: string;\n        callback: (item?: any, index?: number, event?: any) => void;\n    }[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "eventsToRegister",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowBaseProps#getRowAriaDescribedBy:member",
              "docComment": "/**\n * Callback for getting the row aria-describedby\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getRowAriaDescribedBy?: "
                },
                {
                  "kind": "Content",
                  "text": "(item: any) => string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "getRowAriaDescribedBy",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowBaseProps#getRowAriaLabel:member",
              "docComment": "/**\n * Callback for getting the row aria label\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getRowAriaLabel?: "
                },
                {
                  "kind": "Content",
                  "text": "(item: any) => string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "getRowAriaLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowBaseProps#item:member",
              "docComment": "/**\n * Data source for this component\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "item: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "item",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowBaseProps#itemIndex:member",
              "docComment": "/**\n * Index of the collection of items of the DetailsList\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "itemIndex: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "itemIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowBaseProps#onDidMount:member",
              "docComment": "/**\n * Callback for did mount for parent\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onDidMount?: "
                },
                {
                  "kind": "Content",
                  "text": "(row?: "
                },
                {
                  "kind": "Reference",
                  "text": "DetailsRowBase",
                  "canonicalReference": "@fluentui/react!DetailsRowBase:class"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onDidMount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowBaseProps#onRenderCheck:member",
              "docComment": "/**\n * Callback for rendering a checkbox\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRenderCheck?: "
                },
                {
                  "kind": "Content",
                  "text": "(props: "
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsRowCheckProps",
                  "canonicalReference": "@fluentui/react!IDetailsRowCheckProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "JSX.Element",
                  "canonicalReference": "@types/react!~__global.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onRenderCheck",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowBaseProps#onRenderDetailsCheckbox:member",
              "docComment": "/**\n * If provided, can be used to render a custom checkbox\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRenderDetailsCheckbox?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRenderFunction",
                  "canonicalReference": "@fluentui/utilities!IRenderFunction:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsCheckboxProps",
                  "canonicalReference": "@fluentui/react!IDetailsCheckboxProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onRenderDetailsCheckbox",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowBaseProps#onWillUnmount:member",
              "docComment": "/**\n * Callback for will mount for parent\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onWillUnmount?: "
                },
                {
                  "kind": "Content",
                  "text": "(row?: "
                },
                {
                  "kind": "Reference",
                  "text": "DetailsRowBase",
                  "canonicalReference": "@fluentui/react!DetailsRowBase:class"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onWillUnmount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowBaseProps#rowFieldsAs:member",
              "docComment": "/**\n * DOM element into which to render row field\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rowFieldsAs?: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ComponentType",
                  "canonicalReference": "@types/react!~React.ComponentType:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsRowFieldsProps",
                  "canonicalReference": "@fluentui/react!IDetailsRowFieldsProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "rowFieldsAs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowBaseProps#styles:member",
              "docComment": "/**\n * Overriding styles to this row\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "styles?: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyleFunctionOrObject",
                  "canonicalReference": "@fluentui/merge-styles!IStyleFunctionOrObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsRowStyleProps",
                  "canonicalReference": "@fluentui/react!IDetailsRowStyleProps:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsRowStyles",
                  "canonicalReference": "@fluentui/react!IDetailsRowStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "styles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowBaseProps#theme:member",
              "docComment": "/**\n * Theme provided by styled() function\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "theme?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITheme",
                  "canonicalReference": "@fluentui/theme!ITheme:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "theme",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowBaseProps#useFastIcons:member",
              "docComment": "/**\n * Whether to use fast icon and check components. The icons can't be targeted by customization but are still customizable via class names.\n *\n * @defaultvalue\n *\n * true\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "useFastIcons?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "useFastIcons",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowBaseProps#useReducedRowRenderer:member",
              "docComment": "/**\n * Rerender DetailsRow only when props changed. Might cause regression when depending on external updates.\n *\n * @defaultvalue\n *\n * false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "useReducedRowRenderer?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "useReducedRowRenderer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            },
            {
              "startIndex": 6,
              "endIndex": 10
            },
            {
              "startIndex": 11,
              "endIndex": 13
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDetailsRowCheckProps:interface",
          "docComment": "/**\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDetailsRowCheckProps extends "
            },
            {
              "kind": "Reference",
              "text": "React.HTMLAttributes",
              "canonicalReference": "@types/react!~React.HTMLAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "IDetailsRowCheckProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowCheckProps#anySelected:member",
              "docComment": "/**\n * Is any selected - also true for isSelectionModal\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "anySelected?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "anySelected",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowCheckProps#canSelect:member",
              "docComment": "/**\n * Can this checkbox be selectable\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "canSelect: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "canSelect",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowCheckProps#checkClassName:member",
              "docComment": "/**\n * The classname to be passed down to Check component\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checkClassName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "checkClassName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowCheckProps#className:member",
              "docComment": "/**\n * Optional className to attach to the slider root element.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "className?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "className",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowCheckProps#compact:member",
              "docComment": "/**\n * Is this in compact mode?\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compact?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "compact",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowCheckProps#isHeader:member",
              "docComment": "/**\n * Is the check part of the header in a DetailsList\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isHeader?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isHeader",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowCheckProps#isVisible:member",
              "docComment": "/**\n * Whether or not this checkbox is visible\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isVisible?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isVisible",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowCheckProps#onRenderDetailsCheckbox:member",
              "docComment": "/**\n * If provided, can be used to render a custom checkbox\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRenderDetailsCheckbox?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRenderFunction",
                  "canonicalReference": "@fluentui/utilities!IRenderFunction:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsCheckboxProps",
                  "canonicalReference": "@fluentui/react!IDetailsCheckboxProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onRenderDetailsCheckbox",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowCheckProps#selected:member",
              "docComment": "/**\n * Whether or not this check is selected\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selected?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "selected",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowCheckProps#styles:member",
              "docComment": "/**\n * Style override\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "styles?: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyleFunctionOrObject",
                  "canonicalReference": "@fluentui/merge-styles!IStyleFunctionOrObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsRowCheckStyleProps",
                  "canonicalReference": "@fluentui/react!IDetailsRowCheckStyleProps:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsRowCheckStyles",
                  "canonicalReference": "@fluentui/react!IDetailsRowCheckStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "styles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowCheckProps#theme:member",
              "docComment": "/**\n * Theme provided by High-Order Component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "theme?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITheme",
                  "canonicalReference": "@fluentui/theme!ITheme:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "theme",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowCheckProps#useFastIcons:member",
              "docComment": "/**\n * Whether to use fast icon and check components. The icons can't be targeted by customization but are still customizable via class names.\n *\n * @defaultvalue\n *\n * true\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "useFastIcons?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "useFastIcons",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluentui/react!IDetailsRowCheckStyleProps:type",
          "docComment": "/**\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type IDetailsRowCheckStyleProps = "
            },
            {
              "kind": "Reference",
              "text": "Required",
              "canonicalReference": "!Required:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDetailsRowCheckProps",
              "canonicalReference": "@fluentui/react!IDetailsRowCheckProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'theme'>> & "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDetailsRowCheckProps",
              "canonicalReference": "@fluentui/react!IDetailsRowCheckProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'compact' | 'isHeader' | 'selected' | 'anySelected' | 'canSelect' | 'className'> & {\n    isVisible?: boolean;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "IDetailsRowCheckStyleProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 11
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDetailsRowCheckStyles:interface",
          "docComment": "/**\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDetailsRowCheckStyles "
            }
          ],
          "releaseTag": "Public",
          "name": "IDetailsRowCheckStyles",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowCheckStyles#check:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `root` (they're applied to the same element)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "check: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "check",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowCheckStyles#isDisabled:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isDisabled: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isDisabled",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowCheckStyles#root:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "root: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "root",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDetailsRowFieldsProps:interface",
          "docComment": "/**\n * Props interface for the DetailsRowFields component.\n *\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDetailsRowFieldsProps extends "
            },
            {
              "kind": "Reference",
              "text": "IOverrideColumnRenderProps",
              "canonicalReference": "@fluentui/react!IOverrideColumnRenderProps:type"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IDetailsRowFieldsProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowFieldsProps#cellStyleProps:member",
              "docComment": "/**\n * Style properties to customize cell render output.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cellStyleProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "ICellStyleProps",
                  "canonicalReference": "@fluentui/react!ICellStyleProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "cellStyleProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowFieldsProps#columns:member",
              "docComment": "/**\n * Columns metadata\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "columns: "
                },
                {
                  "kind": "Reference",
                  "text": "IColumn",
                  "canonicalReference": "@fluentui/react!IColumn:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "columns",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowFieldsProps#columnStartIndex:member",
              "docComment": "/**\n * Index to start for the column\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "columnStartIndex: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "columnStartIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowFieldsProps#compact:member",
              "docComment": "/**\n * whether to render as a compact field\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compact?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "compact",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowFieldsProps#enableUpdateAnimations:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enableUpdateAnimations?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "enableUpdateAnimations",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowFieldsProps#item:member",
              "docComment": "/**\n * Data source for this component\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "item: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "item",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowFieldsProps#itemIndex:member",
              "docComment": "/**\n * The item index of the collection for the DetailsList\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "itemIndex: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "itemIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowFieldsProps#rowClassNames:member",
              "docComment": "/**\n * Subset of classnames currently generated in DetailsRow that are used within DetailsRowFields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rowClassNames: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [k in keyof "
                },
                {
                  "kind": "Reference",
                  "text": "Pick",
                  "canonicalReference": "!Pick:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsRowStyles",
                  "canonicalReference": "@fluentui/react!IDetailsRowStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ", 'isMultiline' | 'isRowHeader' | 'cell' | 'cellAnimation' | 'cellPadded' | 'cellUnpadded' | 'fields'>]: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "rowClassNames",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDetailsRowProps:interface",
          "docComment": "/**\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDetailsRowProps extends "
            },
            {
              "kind": "Reference",
              "text": "IDetailsRowBaseProps",
              "canonicalReference": "@fluentui/react!IDetailsRowBaseProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IDetailsRowProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowProps#columns:member",
              "docComment": "/**\n * Column metadata\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "columns: "
                },
                {
                  "kind": "Reference",
                  "text": "IColumn",
                  "canonicalReference": "@fluentui/react!IColumn:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "columns",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowProps#selection:member",
              "docComment": "/**\n * Selection from utilities\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selection: "
                },
                {
                  "kind": "Reference",
                  "text": "ISelection",
                  "canonicalReference": "@fluentui/utilities!ISelection:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "selection",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowProps#selectionMode:member",
              "docComment": "/**\n * Selection mode\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectionMode: "
                },
                {
                  "kind": "Reference",
                  "text": "SelectionMode",
                  "canonicalReference": "@fluentui/utilities!SelectionMode:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "selectionMode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDetailsRowSelectionState:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDetailsRowSelectionState "
            }
          ],
          "releaseTag": "Public",
          "name": "IDetailsRowSelectionState",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowSelectionState#isSelected:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isSelected: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isSelected",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowSelectionState#isSelectionModal:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isSelectionModal: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isSelectionModal",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDetailsRowState:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDetailsRowState "
            }
          ],
          "releaseTag": "Public",
          "name": "IDetailsRowState",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowState#columnMeasureInfo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "columnMeasureInfo?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        index: number;\n        column: "
                },
                {
                  "kind": "Reference",
                  "text": "IColumn",
                  "canonicalReference": "@fluentui/react!IColumn:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        onMeasureDone: (measuredWidth: number) => void;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "columnMeasureInfo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowState#isDropping:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isDropping?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isDropping",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowState#selectionState:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectionState: "
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsRowSelectionState",
                  "canonicalReference": "@fluentui/react!IDetailsRowSelectionState:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "selectionState",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluentui/react!IDetailsRowStyleProps:type",
          "docComment": "/**\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type IDetailsRowStyleProps = "
            },
            {
              "kind": "Reference",
              "text": "Required",
              "canonicalReference": "!Required:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDetailsRowProps",
              "canonicalReference": "@fluentui/react!IDetailsRowProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'theme'>> & {\n    isSelected?: boolean;\n    anySelected?: boolean;\n    canSelect?: boolean;\n    droppingClassName?: string;\n    isCheckVisible?: boolean;\n    isRowHeader?: boolean;\n    checkboxCellClassName?: string;\n    className?: string;\n    compact?: boolean;\n    cellStyleProps?: "
            },
            {
              "kind": "Reference",
              "text": "ICellStyleProps",
              "canonicalReference": "@fluentui/react!ICellStyleProps:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    enableUpdateAnimations?: boolean;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "IDetailsRowStyleProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDetailsRowStyles:interface",
          "docComment": "/**\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDetailsRowStyles "
            }
          ],
          "releaseTag": "Public",
          "name": "IDetailsRowStyles",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowStyles#cell:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cell: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "cell",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowStyles#cellAnimation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cellAnimation: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "cellAnimation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowStyles#cellMeasurer:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cellMeasurer: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "cellMeasurer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowStyles#cellPadded:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cellPadded: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "cellPadded",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowStyles#cellUnpadded:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cellUnpadded: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "cellUnpadded",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowStyles#check:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "check: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "check",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowStyles#checkCell:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checkCell: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "checkCell",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowStyles#checkCover:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checkCover: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "checkCover",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowStyles#fields:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fields: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "fields",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowStyles#isMultiline:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isMultiline: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isMultiline",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowStyles#isRowHeader:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isRowHeader: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isRowHeader",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDetailsRowStyles#root:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "root: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "root",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDividerAsProps:interface",
          "docComment": "/**\n * {@docCategory Breadcrumb}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDividerAsProps extends "
            },
            {
              "kind": "Reference",
              "text": "IIconProps",
              "canonicalReference": "@fluentui/react-internal!IIconProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IDividerAsProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDividerAsProps#item:member",
              "docComment": "/**\n * Breadcrumb item to left of the divider to be passed for custom rendering. For overflowed items, it will be last item in the list.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "item?: "
                },
                {
                  "kind": "Reference",
                  "text": "IBreadcrumbItem",
                  "canonicalReference": "@fluentui/react!IBreadcrumbItem:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "item",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCard:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCard "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCard",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCard#focus:member",
              "docComment": "/**\n * Sets focus to the DocumentCard.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "focus: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "focus",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardActions:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardActions "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardActions",
          "members": [],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardActionsProps:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardActionsProps extends "
            },
            {
              "kind": "Reference",
              "text": "React.ClassAttributes",
              "canonicalReference": "@types/react!~React.ClassAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DocumentCardActionsBase",
              "canonicalReference": "@fluentui/react!DocumentCardActionsBase:class"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardActionsProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardActionsProps#actions:member",
              "docComment": "/**\n * The actions available for this document.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "actions: "
                },
                {
                  "kind": "Reference",
                  "text": "IButtonProps",
                  "canonicalReference": "@fluentui/react-internal!IButtonProps:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "actions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardActionsProps#className:member",
              "docComment": "/**\n * Optional override class name\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "className?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "className",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardActionsProps#componentRef:member",
              "docComment": "/**\n * Gets the component ref.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentRef?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRefObject",
                  "canonicalReference": "@fluentui/utilities!IRefObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDocumentCardActions",
                  "canonicalReference": "@fluentui/react!IDocumentCardActions:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "componentRef",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardActionsProps#styles:member",
              "docComment": "/**\n * Call to provide customized styling that will layer on top of the variant rules\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "styles?: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyleFunctionOrObject",
                  "canonicalReference": "@fluentui/merge-styles!IStyleFunctionOrObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDocumentCardActionsStyleProps",
                  "canonicalReference": "@fluentui/react!IDocumentCardActionsStyleProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "IDocumentCardActionsStyles",
                  "canonicalReference": "@fluentui/react!IDocumentCardActionsStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "styles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardActionsProps#theme:member",
              "docComment": "/**\n * Theme provided by HOC.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "theme?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITheme",
                  "canonicalReference": "@fluentui/theme!ITheme:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "theme",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardActionsProps#views:member",
              "docComment": "/**\n * The number of views this document has received.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "views?: "
                },
                {
                  "kind": "Reference",
                  "text": "Number",
                  "canonicalReference": "!Number:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "views",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardActionsStyleProps:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardActionsStyleProps "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardActionsStyleProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardActionsStyleProps#className:member",
              "docComment": "/**\n * Optional override class name\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "className?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "className",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardActionsStyleProps#theme:member",
              "docComment": "/**\n * Accept theme prop.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "theme: "
                },
                {
                  "kind": "Reference",
                  "text": "ITheme",
                  "canonicalReference": "@fluentui/theme!ITheme:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "theme",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardActionsStyles:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardActionsStyles "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardActionsStyles",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardActionsStyles#action:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "action: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "action",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardActionsStyles#root:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "root: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "root",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardActionsStyles#views:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "views: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "views",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardActionsStyles#viewsIcon:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "viewsIcon: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "viewsIcon",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardActivity:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardActivity "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardActivity",
          "members": [],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardActivityPerson:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardActivityPerson "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardActivityPerson",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardActivityPerson#allowPhoneInitials:member",
              "docComment": "/**\n * Whether initials are calculated for phone numbers and number sequences. Example: Set property to true to get initials for project names consisting of numbers only.\n *\n * @defaultvalue\n *\n * false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "allowPhoneInitials?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "allowPhoneInitials",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardActivityPerson#initials:member",
              "docComment": "/**\n * The user's initials to display in the profile photo area when there is no image.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initials?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "initials",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardActivityPerson#initialsColor:member",
              "docComment": "/**\n * The background color when the user's initials are displayed.\n *\n * @defaultvalue\n *\n * PersonaInitialsColor.blue\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initialsColor?: "
                },
                {
                  "kind": "Reference",
                  "text": "PersonaInitialsColor",
                  "canonicalReference": "@fluentui/react-internal!PersonaInitialsColor:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "initialsColor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardActivityPerson#name:member",
              "docComment": "/**\n * The name of the person.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardActivityPerson#profileImageSrc:member",
              "docComment": "/**\n * Path to the profile photo of the person.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "profileImageSrc: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "profileImageSrc",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardActivityProps:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardActivityProps extends "
            },
            {
              "kind": "Reference",
              "text": "React.ClassAttributes",
              "canonicalReference": "@types/react!~React.ClassAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DocumentCardActivityBase",
              "canonicalReference": "@fluentui/react!DocumentCardActivityBase:class"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardActivityProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardActivityProps#activity:member",
              "docComment": "/**\n * Describes the activity that has taken place, such as \"Created Feb 23, 2016\".\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "activity: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "activity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardActivityProps#className:member",
              "docComment": "/**\n * Optional override class name\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "className?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "className",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardActivityProps#componentRef:member",
              "docComment": "/**\n * Gets the component ref.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentRef?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRefObject",
                  "canonicalReference": "@fluentui/utilities!IRefObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDocumentCardActivity",
                  "canonicalReference": "@fluentui/react!IDocumentCardActivity:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "componentRef",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardActivityProps#people:member",
              "docComment": "/**\n * One or more people who are involved in this activity.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "people: "
                },
                {
                  "kind": "Reference",
                  "text": "IDocumentCardActivityPerson",
                  "canonicalReference": "@fluentui/react!IDocumentCardActivityPerson:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "people",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardActivityProps#styles:member",
              "docComment": "/**\n * Call to provide customized styling that will layer on top of the variant rules\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "styles?: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyleFunctionOrObject",
                  "canonicalReference": "@fluentui/merge-styles!IStyleFunctionOrObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDocumentCardActivityStyleProps",
                  "canonicalReference": "@fluentui/react!IDocumentCardActivityStyleProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "IDocumentCardActivityStyles",
                  "canonicalReference": "@fluentui/react!IDocumentCardActivityStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "styles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardActivityProps#theme:member",
              "docComment": "/**\n * Theme provided by HOC.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "theme?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITheme",
                  "canonicalReference": "@fluentui/theme!ITheme:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "theme",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardActivityStyleProps:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardActivityStyleProps "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardActivityStyleProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardActivityStyleProps#className:member",
              "docComment": "/**\n * Optional override class name\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "className?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "className",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardActivityStyleProps#multiplePeople:member",
              "docComment": "/**\n * Indicates if multiple people are being shown.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "multiplePeople?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "multiplePeople",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardActivityStyleProps#theme:member",
              "docComment": "/**\n * Accept theme prop.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "theme: "
                },
                {
                  "kind": "Reference",
                  "text": "ITheme",
                  "canonicalReference": "@fluentui/theme!ITheme:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "theme",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardActivityStyles:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardActivityStyles "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardActivityStyles",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardActivityStyles#activity:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "activity: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "activity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardActivityStyles#avatar:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "avatar: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "avatar",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardActivityStyles#avatars:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "avatars: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "avatars",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardActivityStyles#details:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "details: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "details",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardActivityStyles#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardActivityStyles#root:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "root: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "root",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardDetails:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardDetails "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardDetails",
          "members": [],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardDetailsProps:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardDetailsProps extends "
            },
            {
              "kind": "Reference",
              "text": "React.Props",
              "canonicalReference": "@types/react!~React.Props:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DocumentCardDetailsBase",
              "canonicalReference": "@fluentui/react!DocumentCardDetailsBase:class"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardDetailsProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardDetailsProps#className:member",
              "docComment": "/**\n * Optional override class name\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "className?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "className",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardDetailsProps#componentRef:member",
              "docComment": "/**\n * Gets the component ref.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentRef?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRefObject",
                  "canonicalReference": "@fluentui/utilities!IRefObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDocumentCardDetails",
                  "canonicalReference": "@fluentui/react!IDocumentCardDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "componentRef",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardDetailsProps#styles:member",
              "docComment": "/**\n * Call to provide customized styling that will layer on top of the variant rules\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "styles?: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyleFunctionOrObject",
                  "canonicalReference": "@fluentui/merge-styles!IStyleFunctionOrObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDocumentCardDetailsStyleProps",
                  "canonicalReference": "@fluentui/react!IDocumentCardDetailsStyleProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "IDocumentCardDetailsStyles",
                  "canonicalReference": "@fluentui/react!IDocumentCardDetailsStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "styles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardDetailsProps#theme:member",
              "docComment": "/**\n * Theme provided by HOC.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "theme?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITheme",
                  "canonicalReference": "@fluentui/theme!ITheme:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "theme",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardDetailsStyleProps:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardDetailsStyleProps "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardDetailsStyleProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardDetailsStyleProps#className:member",
              "docComment": "/**\n * Optional override class name\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "className?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "className",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardDetailsStyleProps#theme:member",
              "docComment": "/**\n * Accept theme prop.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "theme: "
                },
                {
                  "kind": "Reference",
                  "text": "ITheme",
                  "canonicalReference": "@fluentui/theme!ITheme:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "theme",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardDetailsStyles:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardDetailsStyles "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardDetailsStyles",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardDetailsStyles#root:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "root: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "root",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardImage:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardImage "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardImage",
          "members": [],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardImageProps:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardImageProps extends "
            },
            {
              "kind": "Reference",
              "text": "IBaseProps",
              "canonicalReference": "@fluentui/utilities!IBaseProps:interface"
            },
            {
              "kind": "Content",
              "text": "<{}> "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardImageProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardImageProps#className:member",
              "docComment": "/**\n * Optional override class name\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "className?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "className",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardImageProps#componentRef:member",
              "docComment": "/**\n * Gets the component ref.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentRef?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRefObject",
                  "canonicalReference": "@fluentui/utilities!IRefObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDocumentCardImage",
                  "canonicalReference": "@fluentui/react!IDocumentCardImage:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "componentRef",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardImageProps#height:member",
              "docComment": "/**\n * If provided, forces the preview image to be this height.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "height?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "height",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardImageProps#iconProps:member",
              "docComment": "/**\n * The props for the icon associated with this document type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "iconProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "IIconProps",
                  "canonicalReference": "@fluentui/react-internal!IIconProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "iconProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardImageProps#imageFit:member",
              "docComment": "/**\n * Used to determine how to size the image to fit the dimensions of the component. If both dimensions are provided, then the image is fit using ImageFit.scale, otherwise ImageFit.none is used.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "imageFit?: "
                },
                {
                  "kind": "Reference",
                  "text": "ImageFit",
                  "canonicalReference": "@fluentui/react-internal!ImageFit:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "imageFit",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardImageProps#imageSrc:member",
              "docComment": "/**\n * Path to the preview image.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "imageSrc?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "imageSrc",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardImageProps#styles:member",
              "docComment": "/**\n * Call to provide customized styling that will layer on top of the variant rules\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "styles?: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyleFunctionOrObject",
                  "canonicalReference": "@fluentui/merge-styles!IStyleFunctionOrObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDocumentCardImageStyleProps",
                  "canonicalReference": "@fluentui/react!IDocumentCardImageStyleProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "IDocumentCardImageStyles",
                  "canonicalReference": "@fluentui/react!IDocumentCardImageStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "styles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardImageProps#theme:member",
              "docComment": "/**\n * Theme provided by HOC.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "theme?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITheme",
                  "canonicalReference": "@fluentui/theme!ITheme:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "theme",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardImageProps#width:member",
              "docComment": "/**\n * If provided, forces the preview image to be this width.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "width?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "width",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardImageStyleProps:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardImageStyleProps extends "
            },
            {
              "kind": "Reference",
              "text": "IDocumentCardImageProps",
              "canonicalReference": "@fluentui/react!IDocumentCardImageProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardImageStyleProps",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardImageStyles:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardImageStyles "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardImageStyles",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardImageStyles#centeredIcon:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "centeredIcon: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "centeredIcon",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardImageStyles#centeredIconWrapper:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "centeredIconWrapper: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "centeredIconWrapper",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardImageStyles#cornerIcon:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cornerIcon: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "cornerIcon",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardImageStyles#root:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "root: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "root",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardLocation:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardLocation "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardLocation",
          "members": [],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardLocationProps:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardLocationProps extends "
            },
            {
              "kind": "Reference",
              "text": "React.ClassAttributes",
              "canonicalReference": "@types/react!~React.ClassAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DocumentCardLocationBase",
              "canonicalReference": "@fluentui/react!DocumentCardLocationBase:class"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardLocationProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardLocationProps#ariaLabel:member",
              "docComment": "/**\n * Aria label for the link to the document location.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ariaLabel?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "ariaLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardLocationProps#className:member",
              "docComment": "/**\n * Optional override class name\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "className?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "className",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardLocationProps#componentRef:member",
              "docComment": "/**\n * Gets the component ref.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentRef?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRefObject",
                  "canonicalReference": "@fluentui/utilities!IRefObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDocumentCardLocation",
                  "canonicalReference": "@fluentui/react!IDocumentCardLocation:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "componentRef",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardLocationProps#location:member",
              "docComment": "/**\n * Text for the location of the document.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "location: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "location",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardLocationProps#locationHref:member",
              "docComment": "/**\n * URL to navigate to for this location.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "locationHref?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "locationHref",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardLocationProps#onClick:member",
              "docComment": "/**\n * Function to call when the location is clicked.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onClick?: "
                },
                {
                  "kind": "Content",
                  "text": "(ev?: "
                },
                {
                  "kind": "Reference",
                  "text": "React.MouseEvent",
                  "canonicalReference": "@types/react!~React.MouseEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onClick",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardLocationProps#styles:member",
              "docComment": "/**\n * Call to provide customized styling that will layer on top of the variant rules\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "styles?: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyleFunctionOrObject",
                  "canonicalReference": "@fluentui/merge-styles!IStyleFunctionOrObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDocumentCardLocationStyleProps",
                  "canonicalReference": "@fluentui/react!IDocumentCardLocationStyleProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "IDocumentCardLocationStyles",
                  "canonicalReference": "@fluentui/react!IDocumentCardLocationStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "styles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardLocationProps#theme:member",
              "docComment": "/**\n * Theme provided by HOC.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "theme?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITheme",
                  "canonicalReference": "@fluentui/theme!ITheme:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "theme",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardLocationStyleProps:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardLocationStyleProps "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardLocationStyleProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardLocationStyleProps#className:member",
              "docComment": "/**\n * Optional override class name\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "className?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "className",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardLocationStyleProps#theme:member",
              "docComment": "/**\n * Accept theme prop.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "theme: "
                },
                {
                  "kind": "Reference",
                  "text": "ITheme",
                  "canonicalReference": "@fluentui/theme!ITheme:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "theme",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardLocationStyles:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardLocationStyles "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardLocationStyles",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardLocationStyles#root:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "root: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "root",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardLogo:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardLogo "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardLogo",
          "members": [],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardLogoProps:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardLogoProps extends "
            },
            {
              "kind": "Reference",
              "text": "React.ClassAttributes",
              "canonicalReference": "@types/react!~React.ClassAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DocumentCardLogoBase",
              "canonicalReference": "@fluentui/react!DocumentCardLogoBase:class"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardLogoProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardLogoProps#className:member",
              "docComment": "/**\n * Optional override class name\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "className?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "className",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardLogoProps#componentRef:member",
              "docComment": "/**\n * Gets the component ref.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentRef?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRefObject",
                  "canonicalReference": "@fluentui/utilities!IRefObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDocumentCardLogo",
                  "canonicalReference": "@fluentui/react!IDocumentCardLogo:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "componentRef",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardLogoProps#logoIcon:member",
              "docComment": "/**\n * Describes DocumentCard Logo badge.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "logoIcon: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "logoIcon",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardLogoProps#logoName:member",
              "docComment": "/**\n * Describe Logo name, optional.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "logoName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "logoName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardLogoProps#styles:member",
              "docComment": "/**\n * Call to provide customized styling that will layer on top of the variant rules\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "styles?: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyleFunctionOrObject",
                  "canonicalReference": "@fluentui/merge-styles!IStyleFunctionOrObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDocumentCardLogoStyleProps",
                  "canonicalReference": "@fluentui/react!IDocumentCardLogoStyleProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "IDocumentCardLogoStyles",
                  "canonicalReference": "@fluentui/react!IDocumentCardLogoStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "styles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardLogoProps#theme:member",
              "docComment": "/**\n * Theme provided by HOC.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "theme?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITheme",
                  "canonicalReference": "@fluentui/theme!ITheme:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "theme",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardLogoStyleProps:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardLogoStyleProps "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardLogoStyleProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardLogoStyleProps#className:member",
              "docComment": "/**\n * Optional override class name\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "className?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "className",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardLogoStyleProps#theme:member",
              "docComment": "/**\n * Accept theme prop.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "theme: "
                },
                {
                  "kind": "Reference",
                  "text": "ITheme",
                  "canonicalReference": "@fluentui/theme!ITheme:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "theme",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardLogoStyles:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardLogoStyles "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardLogoStyles",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardLogoStyles#root:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "root: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "root",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardPreview:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardPreview "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardPreview",
          "members": [],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardPreviewImage:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardPreviewImage "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardPreviewImage",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardPreviewImage#accentColor:member",
              "docComment": "/**\n * Hex color value of the line below the preview, which should correspond to the document type.\n *\n * Deprecated at v4.17.1, to be removed at \\>= v5.0.0.\n *\n * @deprecated\n *\n * To be removed at v5.0.0.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "accentColor?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "accentColor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardPreviewImage#componentRef:member",
              "docComment": "/**\n * Gets the component ref.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentRef?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRefObject",
                  "canonicalReference": "@fluentui/utilities!IRefObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<{}>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "componentRef",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardPreviewImage#errorImageSrc:member",
              "docComment": "/**\n * Deprecated at v1.3.6, to be removed at \\>= v2.0.0.\n *\n * @deprecated\n *\n * To be removed at v2.0.0.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "errorImageSrc?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "errorImageSrc",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardPreviewImage#height:member",
              "docComment": "/**\n * If provided, forces the preview image to be this height.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "height?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "height",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardPreviewImage#iconSrc:member",
              "docComment": "/**\n * Path to the icon associated with this document type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "iconSrc?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "iconSrc",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardPreviewImage#imageFit:member",
              "docComment": "/**\n * Used to determine how to size the image to fit the dimensions of the component. If both dimensions are provided, then the image is fit using ImageFit.scale, otherwise ImageFit.none is used.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "imageFit?: "
                },
                {
                  "kind": "Reference",
                  "text": "ImageFit",
                  "canonicalReference": "@fluentui/react-internal!ImageFit:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "imageFit",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardPreviewImage#linkProps:member",
              "docComment": "/**\n * Props to pass to Link component\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "linkProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "ILinkProps",
                  "canonicalReference": "@fluentui/react-link!ILinkProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "linkProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardPreviewImage#name:member",
              "docComment": "/**\n * File name for the document this preview represents.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardPreviewImage#previewIconContainerClass:member",
              "docComment": "/**\n * The props for the preview icon container classname. If provided, icon container classname will be used..\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "previewIconContainerClass?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "previewIconContainerClass",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardPreviewImage#previewIconProps:member",
              "docComment": "/**\n * The props for the preview icon. If provided, icon will be rendered instead of image.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "previewIconProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "IIconProps",
                  "canonicalReference": "@fluentui/react-internal!IIconProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "previewIconProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardPreviewImage#previewImageSrc:member",
              "docComment": "/**\n * Path to the preview image.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "previewImageSrc?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "previewImageSrc",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardPreviewImage#url:member",
              "docComment": "/**\n * URL to view the file.\n *\n * @deprecated\n *\n * Use `href` inside of `linkProps` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "url?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "url",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardPreviewImage#width:member",
              "docComment": "/**\n * If provided, forces the preview image to be this width.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "width?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "width",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardPreviewProps:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardPreviewProps extends "
            },
            {
              "kind": "Reference",
              "text": "IBaseProps",
              "canonicalReference": "@fluentui/utilities!IBaseProps:interface"
            },
            {
              "kind": "Content",
              "text": "<{}> "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardPreviewProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardPreviewProps#className:member",
              "docComment": "/**\n * Optional override class name\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "className?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "className",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardPreviewProps#componentRef:member",
              "docComment": "/**\n * Gets the component ref.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentRef?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRefObject",
                  "canonicalReference": "@fluentui/utilities!IRefObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDocumentCardPreview",
                  "canonicalReference": "@fluentui/react!IDocumentCardPreview:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "componentRef",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardPreviewProps#getOverflowDocumentCountText:member",
              "docComment": "/**\n * The function return string that will describe the number of overflow documents. such as (overflowCount: number) =\\> `+${ overflowCount } more`,\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getOverflowDocumentCountText?: "
                },
                {
                  "kind": "Content",
                  "text": "(overflowCount: number) => string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "getOverflowDocumentCountText",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardPreviewProps#previewImages:member",
              "docComment": "/**\n * One or more preview images to display.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "previewImages: "
                },
                {
                  "kind": "Reference",
                  "text": "IDocumentCardPreviewImage",
                  "canonicalReference": "@fluentui/react!IDocumentCardPreviewImage:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "previewImages",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardPreviewProps#styles:member",
              "docComment": "/**\n * Call to provide customized styling that will layer on top of the variant rules\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "styles?: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyleFunctionOrObject",
                  "canonicalReference": "@fluentui/merge-styles!IStyleFunctionOrObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDocumentCardPreviewStyleProps",
                  "canonicalReference": "@fluentui/react!IDocumentCardPreviewStyleProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "IDocumentCardPreviewStyles",
                  "canonicalReference": "@fluentui/react!IDocumentCardPreviewStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "styles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardPreviewProps#theme:member",
              "docComment": "/**\n * Theme provided by HOC.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "theme?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITheme",
                  "canonicalReference": "@fluentui/theme!ITheme:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "theme",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardPreviewStyleProps:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardPreviewStyleProps "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardPreviewStyleProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardPreviewStyleProps#className:member",
              "docComment": "/**\n * Optional override class name\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "className?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "className",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardPreviewStyleProps#isFileList:member",
              "docComment": "/**\n * Is it a list of files rather than a preview image?\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isFileList?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isFileList",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardPreviewStyleProps#theme:member",
              "docComment": "/**\n * Accept theme prop.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "theme: "
                },
                {
                  "kind": "Reference",
                  "text": "ITheme",
                  "canonicalReference": "@fluentui/theme!ITheme:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "theme",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardPreviewStyles:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardPreviewStyles "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardPreviewStyles",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardPreviewStyles#fileList:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fileList: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "fileList",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardPreviewStyles#fileListIcon:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fileListIcon: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "fileListIcon",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardPreviewStyles#fileListLink:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fileListLink: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "fileListLink",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardPreviewStyles#fileListOverflowText:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fileListOverflowText: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "fileListOverflowText",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardPreviewStyles#icon:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "icon: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "icon",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardPreviewStyles#previewIcon:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "previewIcon: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "previewIcon",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardPreviewStyles#root:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "root: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "root",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardProps:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardProps extends "
            },
            {
              "kind": "Reference",
              "text": "IBaseProps",
              "canonicalReference": "@fluentui/utilities!IBaseProps:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDocumentCard",
              "canonicalReference": "@fluentui/react!IDocumentCard:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "React.HTMLAttributes",
              "canonicalReference": "@types/react!~React.HTMLAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardProps#accentColor:member",
              "docComment": "/**\n * Hex color value of the line below the card, which should correspond to the document type. This should only be supplied when using the 'compact' card layout.\n *\n * Deprecated at v4.17.1, to be removed at \\>= v5.0.0.\n *\n * @deprecated\n *\n * To be removed at v5.0.0.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "accentColor?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "accentColor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardProps#children:member",
              "docComment": "/**\n * Child components to render within the card.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "children?: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ReactNode",
                  "canonicalReference": "@types/react!~React.ReactNode:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "children",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardProps#className:member",
              "docComment": "/**\n * Optional override class name\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "className?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "className",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardProps#componentRef:member",
              "docComment": "/**\n * Optional callback to access the IDocumentCard interface. Use this instead of ref for accessing the public methods and properties of the component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentRef?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRefObject",
                  "canonicalReference": "@fluentui/utilities!IRefObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDocumentCard",
                  "canonicalReference": "@fluentui/react!IDocumentCard:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "componentRef",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardProps#onClick:member",
              "docComment": "/**\n * Function to call when the card is clicked or keyboard Enter/Space is pushed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onClick?: "
                },
                {
                  "kind": "Content",
                  "text": "(ev?: "
                },
                {
                  "kind": "Reference",
                  "text": "React.SyntheticEvent",
                  "canonicalReference": "@types/react!~React.SyntheticEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onClick",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardProps#onClickHref:member",
              "docComment": "/**\n * A URL to navigate to when the card is clicked. If a function has also been provided, it will be used instead of the URL.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onClickHref?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onClickHref",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardProps#onClickTarget:member",
              "docComment": "/**\n * A target browser context for opening the link. If not specified, will open in the same tab/window.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onClickTarget?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onClickTarget",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardProps#role:member",
              "docComment": "/**\n * Aria role assigned to the documentCard (Eg. button, link). Use this to override the default assignment.\n *\n * @defaultvalue\n *\n * When `onClick` is provided, default role will be 'button'. When `onClickHref` is provided, default role will be 'link'.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "role?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "role",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardProps#styles:member",
              "docComment": "/**\n * Call to provide customized styling that will layer on top of the variant rules\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "styles?: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyleFunctionOrObject",
                  "canonicalReference": "@fluentui/merge-styles!IStyleFunctionOrObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDocumentCardStyleProps",
                  "canonicalReference": "@fluentui/react!IDocumentCardStyleProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "IDocumentCardStyles",
                  "canonicalReference": "@fluentui/react!IDocumentCardStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "styles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardProps#theme:member",
              "docComment": "/**\n * Theme provided by HOC.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "theme?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITheme",
                  "canonicalReference": "@fluentui/theme!ITheme:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "theme",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardProps#type:member",
              "docComment": "/**\n * The type of DocumentCard to display.\n *\n * @defaultvalue\n *\n * DocumentCardType.normal\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type?: "
                },
                {
                  "kind": "Reference",
                  "text": "DocumentCardType",
                  "canonicalReference": "@fluentui/react!DocumentCardType:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            },
            {
              "startIndex": 6,
              "endIndex": 10
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardStatus:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardStatus "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardStatus",
          "members": [],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardStatusProps:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardStatusProps extends "
            },
            {
              "kind": "Reference",
              "text": "React.Props",
              "canonicalReference": "@types/react!~React.Props:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DocumentCardStatusBase",
              "canonicalReference": "@fluentui/react!DocumentCardStatusBase:class"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardStatusProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardStatusProps#className:member",
              "docComment": "/**\n * Optional override class name\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "className?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "className",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardStatusProps#componentRef:member",
              "docComment": "/**\n * Gets the component ref.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentRef?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRefObject",
                  "canonicalReference": "@fluentui/utilities!IRefObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDocumentCardStatus",
                  "canonicalReference": "@fluentui/react!IDocumentCardStatus:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "componentRef",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardStatusProps#status:member",
              "docComment": "/**\n * Describe status information. Required field.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "status: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "status",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardStatusProps#statusIcon:member",
              "docComment": "/**\n * Describes DocumentCard status icon.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "statusIcon?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "statusIcon",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardStatusProps#styles:member",
              "docComment": "/**\n * Call to provide customized styling that will layer on top of the variant rules\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "styles?: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyleFunctionOrObject",
                  "canonicalReference": "@fluentui/merge-styles!IStyleFunctionOrObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDocumentCardStatusStyleProps",
                  "canonicalReference": "@fluentui/react!IDocumentCardStatusStyleProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "IDocumentCardStatusStyles",
                  "canonicalReference": "@fluentui/react!IDocumentCardStatusStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "styles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardStatusProps#theme:member",
              "docComment": "/**\n * Theme provided by HOC.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "theme?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITheme",
                  "canonicalReference": "@fluentui/theme!ITheme:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "theme",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardStatusStyleProps:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardStatusStyleProps "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardStatusStyleProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardStatusStyleProps#className:member",
              "docComment": "/**\n * Optional override class name\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "className?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "className",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardStatusStyleProps#theme:member",
              "docComment": "/**\n * Accept theme prop.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "theme: "
                },
                {
                  "kind": "Reference",
                  "text": "ITheme",
                  "canonicalReference": "@fluentui/theme!ITheme:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "theme",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardStatusStyles:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardStatusStyles "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardStatusStyles",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardStatusStyles#root:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "root: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "root",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardStyleProps:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardStyleProps "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardStyleProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardStyleProps#actionable:member",
              "docComment": "/**\n * True when the card has a click action.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "actionable?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "actionable",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardStyleProps#className:member",
              "docComment": "/**\n * Optional override class name\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "className?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "className",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardStyleProps#compact:member",
              "docComment": "/**\n * Compact variant of the card.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compact?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "compact",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardStyleProps#theme:member",
              "docComment": "/**\n * Accept theme prop.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "theme: "
                },
                {
                  "kind": "Reference",
                  "text": "ITheme",
                  "canonicalReference": "@fluentui/theme!ITheme:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "theme",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardStyles:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardStyles "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardStyles",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardStyles#root:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "root: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "root",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardTitle:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardTitle "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardTitle",
          "members": [],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardTitleProps:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardTitleProps extends "
            },
            {
              "kind": "Reference",
              "text": "React.ClassAttributes",
              "canonicalReference": "@types/react!~React.ClassAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DocumentCardTitleBase",
              "canonicalReference": "@fluentui/react!DocumentCardTitleBase:class"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardTitleProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardTitleProps#className:member",
              "docComment": "/**\n * Optional override class name\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "className?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "className",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardTitleProps#componentRef:member",
              "docComment": "/**\n * Gets the component ref.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentRef?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRefObject",
                  "canonicalReference": "@fluentui/utilities!IRefObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDocumentCardTitle",
                  "canonicalReference": "@fluentui/react!IDocumentCardTitle:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "componentRef",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardTitleProps#shouldTruncate:member",
              "docComment": "/**\n * Whether we truncate the title to fit within the box. May have a performance impact.\n *\n * @defaultvalue\n *\n * true\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "shouldTruncate?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "shouldTruncate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardTitleProps#showAsSecondaryTitle:member",
              "docComment": "/**\n * Whether show as title as secondary title style such as smaller font and lighter color.\n *\n * @defaultvalue\n *\n * false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "showAsSecondaryTitle?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "showAsSecondaryTitle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardTitleProps#styles:member",
              "docComment": "/**\n * Call to provide customized styling that will layer on top of the variant rules\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "styles?: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyleFunctionOrObject",
                  "canonicalReference": "@fluentui/merge-styles!IStyleFunctionOrObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDocumentCardTitleStyleProps",
                  "canonicalReference": "@fluentui/react!IDocumentCardTitleStyleProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "IDocumentCardTitleStyles",
                  "canonicalReference": "@fluentui/react!IDocumentCardTitleStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "styles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardTitleProps#theme:member",
              "docComment": "/**\n * Theme provided by HOC.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "theme?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITheme",
                  "canonicalReference": "@fluentui/theme!ITheme:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "theme",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardTitleProps#title:member",
              "docComment": "/**\n * Title text. If the card represents more than one document, this should be the title of one document and a \"+X\" string. For example, a collection of four documents would have a string of \"Document.docx +3\".\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "title: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "title",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardTitleStyleProps:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardTitleStyleProps "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardTitleStyleProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardTitleStyleProps#className:member",
              "docComment": "/**\n * Optional override class name\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "className?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "className",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardTitleStyleProps#showAsSecondaryTitle:member",
              "docComment": "/**\n * Is this a secondary title?\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "showAsSecondaryTitle?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "showAsSecondaryTitle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardTitleStyleProps#theme:member",
              "docComment": "/**\n * Accept theme prop.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "theme: "
                },
                {
                  "kind": "Reference",
                  "text": "ITheme",
                  "canonicalReference": "@fluentui/theme!ITheme:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "theme",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDocumentCardTitleStyles:interface",
          "docComment": "/**\n * {@docCategory DocumentCard}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDocumentCardTitleStyles "
            }
          ],
          "releaseTag": "Public",
          "name": "IDocumentCardTitleStyles",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDocumentCardTitleStyles#root:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "root: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "root",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDropdown:interface",
          "docComment": "/**\n * {@docCategory Dropdown}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDropdown "
            }
          ],
          "releaseTag": "Public",
          "name": "IDropdown",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdown#focus:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "focus: "
                },
                {
                  "kind": "Content",
                  "text": "(shouldOpenOnFocus?: boolean) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "focus",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdown#selectedOptions:member",
              "docComment": "/**\n * All selected options\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly selectedOptions: "
                },
                {
                  "kind": "Reference",
                  "text": "IDropdownOption",
                  "canonicalReference": "@fluentui/react!IDropdownOption:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "selectedOptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDropdownOption:interface",
          "docComment": "/**\n * {@docCategory Dropdown}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDropdownOption<T = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "ISelectableOption",
              "canonicalReference": "@fluentui/react-internal!ISelectableOption:interface"
            },
            {
              "kind": "Content",
              "text": "<T> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "IDropdownOption",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownOption#isSelected:member",
              "docComment": "/**\n * Deprecated at v.65.1, use `selected` instead.\n *\n * @deprecated\n *\n * Use `selected` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isSelected?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isSelected",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDropdownProps:interface",
          "docComment": "/**\n * {@docCategory Dropdown}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDropdownProps extends "
            },
            {
              "kind": "Reference",
              "text": "ISelectableDroppableTextProps",
              "canonicalReference": "@fluentui/react-internal!ISelectableDroppableTextProps:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDropdown",
              "canonicalReference": "@fluentui/react!IDropdown:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "React.RefAttributes",
              "canonicalReference": "@types/react!~React.RefAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "IDropdownProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownProps#defaultSelectedKeys:member",
              "docComment": "/**\n * Keys that will be initially used to set selected items. This prop is used for `multiSelect` scenarios. In other cases, `defaultSelectedKey` should be used.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "defaultSelectedKeys?: "
                },
                {
                  "kind": "Content",
                  "text": "string[] | number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "defaultSelectedKeys",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownProps#dropdownWidth:member",
              "docComment": "/**\n * Custom width for dropdown. If value is 0, width of the input field is used. If value is 'auto', width of the input field is used by default, and it can grow wider to fit the content.\n *\n * @defaultvalue\n *\n * 0\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dropdownWidth?: "
                },
                {
                  "kind": "Content",
                  "text": "number | 'auto'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dropdownWidth",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownProps#isDisabled:member",
              "docComment": "/**\n * Deprecated at v0.52.0, use `disabled` instead.\n *\n * @deprecated\n *\n * Use `disabled` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isDisabled?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isDisabled",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownProps#multiSelectDelimiter:member",
              "docComment": "/**\n * When multiple items are selected, this still will be used to separate values in the dropdown title.\n *\n * @defaultvalue\n *\n * \", \"\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "multiSelectDelimiter?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "multiSelectDelimiter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownProps#notifyOnReselect:member",
              "docComment": "/**\n * Optional preference to have onChanged still be called when an already selected item is clicked in single select mode. Default to false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "notifyOnReselect?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "notifyOnReselect",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownProps#onChange:member",
              "docComment": "/**\n * Callback issued when the selected option changes.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onChange?: "
                },
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Reference",
                  "text": "React.FormEvent",
                  "canonicalReference": "@types/react!~React.FormEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">, option?: "
                },
                {
                  "kind": "Reference",
                  "text": "IDropdownOption",
                  "canonicalReference": "@fluentui/react!IDropdownOption:interface"
                },
                {
                  "kind": "Content",
                  "text": ", index?: number) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownProps#onChanged:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `onChange` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onChanged?: "
                },
                {
                  "kind": "Content",
                  "text": "(option: "
                },
                {
                  "kind": "Reference",
                  "text": "IDropdownOption",
                  "canonicalReference": "@fluentui/react!IDropdownOption:interface"
                },
                {
                  "kind": "Content",
                  "text": ", index?: number) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onChanged",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownProps#onRenderCaretDown:member",
              "docComment": "/**\n * Optional custom renderer for chevron icon\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRenderCaretDown?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRenderFunction",
                  "canonicalReference": "@fluentui/utilities!IRenderFunction:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDropdownProps",
                  "canonicalReference": "@fluentui/react!IDropdownProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onRenderCaretDown",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownProps#onRenderLabel:member",
              "docComment": "/**\n * Custom render function for the label.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRenderLabel?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRenderFunction",
                  "canonicalReference": "@fluentui/utilities!IRenderFunction:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDropdownProps",
                  "canonicalReference": "@fluentui/react!IDropdownProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onRenderLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownProps#onRenderPlaceholder:member",
              "docComment": "/**\n * Optional custom renderer for placeholder text\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRenderPlaceholder?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRenderFunction",
                  "canonicalReference": "@fluentui/utilities!IRenderFunction:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDropdownProps",
                  "canonicalReference": "@fluentui/react!IDropdownProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onRenderPlaceholder",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownProps#onRenderPlaceHolder:member",
              "docComment": "/**\n * Optional custom renderer for placeholder text\n *\n * @deprecated\n *\n * Use `onRenderPlaceholder`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRenderPlaceHolder?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRenderFunction",
                  "canonicalReference": "@fluentui/utilities!IRenderFunction:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDropdownProps",
                  "canonicalReference": "@fluentui/react!IDropdownProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onRenderPlaceHolder",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownProps#onRenderTitle:member",
              "docComment": "/**\n * Optional custom renderer for selected option displayed in input\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRenderTitle?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRenderFunction",
                  "canonicalReference": "@fluentui/utilities!IRenderFunction:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDropdownOption",
                  "canonicalReference": "@fluentui/react!IDropdownOption:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onRenderTitle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownProps#options:member",
              "docComment": "/**\n * Options for the dropdown. If using `defaultSelectedKey` or `defaultSelectedKeys`, options must be pure for correct behavior.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "options: "
                },
                {
                  "kind": "Reference",
                  "text": "IDropdownOption",
                  "canonicalReference": "@fluentui/react!IDropdownOption:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "options",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownProps#placeHolder:member",
              "docComment": "/**\n * Input placeholder text. Displayed until option is selected.\n *\n * @deprecated\n *\n * Use `placeholder`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "placeHolder?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "placeHolder",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownProps#responsiveMode:member",
              "docComment": "/**\n * Pass in ResponsiveMode to manually overwrite the way the Dropdown renders. ResponsiveMode.large would, for instance, disable the behavior where Dropdown options get rendered into a Panel while ResponsiveMode.small would result in the Dropdown options always getting rendered in a Panel.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "responsiveMode?: "
                },
                {
                  "kind": "Reference",
                  "text": "ResponsiveMode",
                  "canonicalReference": "@fluentui/react-internal!ResponsiveMode:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "responsiveMode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownProps#selectedKeys:member",
              "docComment": "/**\n * Keys of the selected items. If you provide this, you must maintain selection state by observing onChange events and passing a new value in when changed. Passing null in will clear the selection. Mutually exclusive with `defaultSelectedKeys`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectedKeys?: "
                },
                {
                  "kind": "Content",
                  "text": "string[] | number[] | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "selectedKeys",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownProps#styles:member",
              "docComment": "/**\n * Call to provide customized styling that will layer on top of the variant rules.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "styles?: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyleFunctionOrObject",
                  "canonicalReference": "@fluentui/merge-styles!IStyleFunctionOrObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDropdownStyleProps",
                  "canonicalReference": "@fluentui/react!IDropdownStyleProps:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "IDropdownStyles",
                  "canonicalReference": "@fluentui/react!IDropdownStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "styles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownProps#theme:member",
              "docComment": "/**\n * Theme provided by higher order component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "theme?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITheme",
                  "canonicalReference": "@fluentui/theme!ITheme:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "theme",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 7
            },
            {
              "startIndex": 8,
              "endIndex": 12
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluentui/react!IDropdownStyleProps:type",
          "docComment": "/**\n * The props needed to construct styles. This represents the simplified set of immutable things which control the class names. {@docCategory Dropdown}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type IDropdownStyleProps = "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDropdownProps",
              "canonicalReference": "@fluentui/react!IDropdownProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'theme' | 'className' | 'disabled' | 'required'> & {\n    hasError: boolean;\n    hasLabel: boolean;\n    isOpen: boolean;\n    isRenderingPlaceholder: boolean;\n    panelClassName?: string;\n    calloutClassName?: string;\n    calloutRenderEdge?: "
            },
            {
              "kind": "Reference",
              "text": "RectangleEdge",
              "canonicalReference": "@fluentui/react-internal!RectangleEdge:enum"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "IDropdownStyleProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDropdownStyles:interface",
          "docComment": "/**\n * Represents the stylable areas of the control. {@docCategory Dropdown}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDropdownStyles "
            }
          ],
          "releaseTag": "Public",
          "name": "IDropdownStyles",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownStyles#callout:member",
              "docComment": "/**\n * Refers to the callout that hosts Dropdown options in larger viewports.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "callout: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "callout",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownStyles#caretDown:member",
              "docComment": "/**\n * Refers to the downward pointing caret icon users click on to expand the Dropdown.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "caretDown: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "caretDown",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownStyles#caretDownWrapper:member",
              "docComment": "/**\n * Refers to the wrapping container around the downward pointing caret users click on to expand the Dropdown.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "caretDownWrapper: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "caretDownWrapper",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownStyles#dropdown:member",
              "docComment": "/**\n * Refers to the actual Dropdown element.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dropdown: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dropdown",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownStyles#dropdownDivider:member",
              "docComment": "/**\n * Refers to the dropdown separator.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dropdownDivider: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dropdownDivider",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownStyles#dropdownItem:member",
              "docComment": "/**\n * Refers to the individual dropdown item.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dropdownItem: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dropdownItem",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownStyles#dropdownItemDisabled:member",
              "docComment": "/**\n * Style for a dropdown item when it is disabled.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dropdownItemDisabled: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dropdownItemDisabled",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownStyles#dropdownItemHeader:member",
              "docComment": "/**\n * Refers to the individual dropdown items that are being rendered as a header.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dropdownItemHeader: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dropdownItemHeader",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownStyles#dropdownItemHidden:member",
              "docComment": "/**\n * Style for a dropdown item when it is hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dropdownItemHidden: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dropdownItemHidden",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownStyles#dropdownItems:member",
              "docComment": "/**\n * Refers to the FocusZone wrapping the individual dropdown items.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dropdownItems: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dropdownItems",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownStyles#dropdownItemSelected:member",
              "docComment": "/**\n * Style for a dropdown item when it is being selected.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dropdownItemSelected: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dropdownItemSelected",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownStyles#dropdownItemSelectedAndDisabled:member",
              "docComment": "/**\n * Style for a dropdown item when it is both selected and disabled.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dropdownItemSelectedAndDisabled: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dropdownItemSelectedAndDisabled",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownStyles#dropdownItemsWrapper:member",
              "docComment": "/**\n * Refers to the element that wraps `dropdownItems`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dropdownItemsWrapper: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dropdownItemsWrapper",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownStyles#dropdownOptionText:member",
              "docComment": "/**\n * Refers to the text element that renders the actual dropdown item/option text. This would be wrapped by the element referred to by `dropdownItem`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dropdownOptionText: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dropdownOptionText",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownStyles#errorMessage:member",
              "docComment": "/**\n * Refers to the error message being rendered under the Dropdown (if any).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "errorMessage: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "errorMessage",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownStyles#label:member",
              "docComment": "/**\n * Refers to the label associated with the dropdown. This is enclosed by the root.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "label: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "label",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownStyles#panel:member",
              "docComment": "/**\n * Refers to the panel that hosts the Dropdown options in small viewports.\n *\n * @deprecated\n *\n * Use `subComponentStyles.panel` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "panel: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "panel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownStyles#root:member",
              "docComment": "/**\n * Root element of the Dropdown (includes Label and the actual Dropdown).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "root: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "root",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownStyles#subComponentStyles:member",
              "docComment": "/**\n * Subcomponent styles.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "subComponentStyles: "
                },
                {
                  "kind": "Reference",
                  "text": "IDropdownSubComponentStyles",
                  "canonicalReference": "@fluentui/react!IDropdownSubComponentStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "subComponentStyles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownStyles#title:member",
              "docComment": "/**\n * Refers to the primary title of the Dropdown (rendering the selected options/placeholder/etc.).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "title: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "title",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDropdownSubComponentStyles:interface",
          "docComment": "/**\n * {@docCategory Dropdown}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDropdownSubComponentStyles "
            }
          ],
          "releaseTag": "Public",
          "name": "IDropdownSubComponentStyles",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownSubComponentStyles#label:member",
              "docComment": "/**\n * Refers to the primary label for the Dropdown.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "label: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyleFunctionOrObject",
                  "canonicalReference": "@fluentui/merge-styles!IStyleFunctionOrObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ILabelStyleProps",
                  "canonicalReference": "@fluentui/react-internal!ILabelStyleProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "ILabelStyles",
                  "canonicalReference": "@fluentui/react-internal!ILabelStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "label",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownSubComponentStyles#multiSelectItem:member",
              "docComment": "/**\n * Refers to the individual dropdown item when the multiSelect prop is true.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "multiSelectItem: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyleFunctionOrObject",
                  "canonicalReference": "@fluentui/merge-styles!IStyleFunctionOrObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ICheckboxStyleProps",
                  "canonicalReference": "@fluentui/react-checkbox!ICheckboxStyleProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "ICheckboxStyles",
                  "canonicalReference": "@fluentui/react-checkbox!ICheckboxStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "multiSelectItem",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropdownSubComponentStyles#panel:member",
              "docComment": "/**\n * Refers to the panel that hosts the Dropdown options in small viewports.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "panel: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyleFunctionOrObject",
                  "canonicalReference": "@fluentui/merge-styles!IStyleFunctionOrObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IPanelStyleProps",
                  "canonicalReference": "@fluentui/react-internal!IPanelStyleProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "IPanelStyles",
                  "canonicalReference": "@fluentui/react-internal!IPanelStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "panel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IDropHintDetails:interface",
          "docComment": "/**\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDropHintDetails "
            }
          ],
          "releaseTag": "Public",
          "name": "IDropHintDetails",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropHintDetails#dropHintElementRef:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dropHintElementRef: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dropHintElementRef",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropHintDetails#endX:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "endX: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "endX",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropHintDetails#originX:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "originX: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "originX",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IDropHintDetails#startX:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "startX: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "startX",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IGroup:interface",
          "docComment": "/**\n * {@docCategory GroupedList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IGroup "
            }
          ],
          "releaseTag": "Public",
          "name": "IGroup",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroup#ariaLabel:member",
              "docComment": "/**\n * Optional accessibility label (aria-label) attribute that will be stamped on to the element. If none is specified, the arai-label attribute will contain the group name\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ariaLabel?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "ariaLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroup#children:member",
              "docComment": "/**\n * Nested groups, if any.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "children?: "
                },
                {
                  "kind": "Reference",
                  "text": "IGroup",
                  "canonicalReference": "@fluentui/react!IGroup:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "children",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroup#count:member",
              "docComment": "/**\n * How many items should be rendered within the group.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "count: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "count",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroup#data:member",
              "docComment": "/**\n * Arbitrary data required to be preserved by the caller.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "data?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroup#hasMoreData:member",
              "docComment": "/**\n * Optional flag to indicate the group has more data to load than the current group count indicated. This can be used to indicate that a plus should be rendered next to the group count in the header.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasMoreData?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "hasMoreData",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroup#isCollapsed:member",
              "docComment": "/**\n * If all the items in the group are collapsed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isCollapsed?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isCollapsed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroup#isDropEnabled:member",
              "docComment": "/**\n * If drag/drop is enabled for the group header.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isDropEnabled?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isDropEnabled",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroup#isSelected:member",
              "docComment": "/**\n * Deprecated at 1.0.0, selection state will be controled by the selection store only.\n *\n * @deprecated\n *\n * At 1.0.0, selection state wil be controlled by the selection store only.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isSelected?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isSelected",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroup#isShowingAll:member",
              "docComment": "/**\n * If the items within the group are summarized or showing all.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isShowingAll?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isShowingAll",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroup#key:member",
              "docComment": "/**\n * Unique identifier for the group.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "key",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroup#level:member",
              "docComment": "/**\n * Number indicating the level of nested groups.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "level?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "level",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroup#name:member",
              "docComment": "/**\n * Display name for the group, rendered on the header.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroup#startIndex:member",
              "docComment": "/**\n * Start index for the group within the given items.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "startIndex: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "startIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IGroupDividerProps:interface",
          "docComment": "/**\n * {@docCategory GroupedList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IGroupDividerProps "
            }
          ],
          "releaseTag": "Public",
          "name": "IGroupDividerProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupDividerProps#ariaColSpan:member",
              "docComment": "/**\n * Defines the number of columns a group header needs to span in the case of a grid or treegrid\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ariaColSpan?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "ariaColSpan",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupDividerProps#className:member",
              "docComment": "/**\n * Custom className\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "className?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "className",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupDividerProps#compact:member",
              "docComment": "/**\n * Boolean value to indicate if the component should render in compact mode. Set to false by default\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compact?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "compact",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupDividerProps#componentRef:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentRef?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRefObject",
                  "canonicalReference": "@fluentui/utilities!IRefObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<{}>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "componentRef",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupDividerProps#expandButtonProps:member",
              "docComment": "/**\n * Props for expand/collapse button\n *\n * @deprecated\n *\n * Use {@link IGroupHeaderProps.expandButtonProps} instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "expandButtonProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "React.HTMLAttributes",
                  "canonicalReference": "@types/react!~React.HTMLAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLButtonElement",
                  "canonicalReference": "!HTMLButtonElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "expandButtonProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupDividerProps#footerText:member",
              "docComment": "/**\n * Text to display for the group footer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "footerText?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "footerText",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupDividerProps#group:member",
              "docComment": "/**\n * The group to be rendered by the header.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "group?: "
                },
                {
                  "kind": "Reference",
                  "text": "IGroup",
                  "canonicalReference": "@fluentui/react!IGroup:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "group",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupDividerProps#groupIndex:member",
              "docComment": "/**\n * The index of the group.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "groupIndex?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "groupIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupDividerProps#groupLevel:member",
              "docComment": "/**\n * The indent level of the group.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "groupLevel?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "groupLevel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupDividerProps#groups:member",
              "docComment": "/**\n * Stores parent group's children.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "groups?: "
                },
                {
                  "kind": "Reference",
                  "text": "IGroup",
                  "canonicalReference": "@fluentui/react!IGroup:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "groups",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupDividerProps#indentWidth:member",
              "docComment": "/**\n * Width corresponding to a single level. This is multiplied by the groupLevel to get the full spacer width for the group.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "indentWidth?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "indentWidth",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupDividerProps#isCollapsedGroupSelectVisible:member",
              "docComment": "/**\n * Determines if the group selection check box is shown for collapsed groups.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isCollapsedGroupSelectVisible?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isCollapsedGroupSelectVisible",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupDividerProps#isGroupLoading:member",
              "docComment": "/**\n * Callback to determine if a group has missing items and needs to load them from the server.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isGroupLoading?: "
                },
                {
                  "kind": "Content",
                  "text": "(group: "
                },
                {
                  "kind": "Reference",
                  "text": "IGroup",
                  "canonicalReference": "@fluentui/react!IGroup:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isGroupLoading",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupDividerProps#isSelected:member",
              "docComment": "/**\n * Deprecated at v.65.1 and will be removed by v 1.0. Use `selected` instead.\n *\n * @deprecated\n *\n * Use `selected` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isSelected?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isSelected",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupDividerProps#loadingText:member",
              "docComment": "/**\n * Text shown on group headers to indicate the group is being loaded.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "loadingText?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "loadingText",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupDividerProps#onGroupHeaderClick:member",
              "docComment": "/**\n * Callback for when the group header is clicked.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onGroupHeaderClick?: "
                },
                {
                  "kind": "Content",
                  "text": "(group: "
                },
                {
                  "kind": "Reference",
                  "text": "IGroup",
                  "canonicalReference": "@fluentui/react!IGroup:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onGroupHeaderClick",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupDividerProps#onGroupHeaderKeyUp:member",
              "docComment": "/**\n * Callback for when the \"keyup\" event is fired on the group header.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onGroupHeaderKeyUp?: "
                },
                {
                  "kind": "Content",
                  "text": "(ev: "
                },
                {
                  "kind": "Reference",
                  "text": "React.KeyboardEvent",
                  "canonicalReference": "@types/react!~React.KeyboardEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">, group?: "
                },
                {
                  "kind": "Reference",
                  "text": "IGroup",
                  "canonicalReference": "@fluentui/react!IGroup:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onGroupHeaderKeyUp",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupDividerProps#onRenderTitle:member",
              "docComment": "/**\n * Override which allows the caller to provider a custom renderer for the GroupHeader title.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRenderTitle?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRenderFunction",
                  "canonicalReference": "@fluentui/utilities!IRenderFunction:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IGroupHeaderProps",
                  "canonicalReference": "@fluentui/react!IGroupHeaderProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onRenderTitle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupDividerProps#onToggleCollapse:member",
              "docComment": "/**\n * Callback for when the group is expanded or collapsed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onToggleCollapse?: "
                },
                {
                  "kind": "Content",
                  "text": "(group: "
                },
                {
                  "kind": "Reference",
                  "text": "IGroup",
                  "canonicalReference": "@fluentui/react!IGroup:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onToggleCollapse",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupDividerProps#onToggleSelectGroup:member",
              "docComment": "/**\n * Callback for when the group is selected.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onToggleSelectGroup?: "
                },
                {
                  "kind": "Content",
                  "text": "(group: "
                },
                {
                  "kind": "Reference",
                  "text": "IGroup",
                  "canonicalReference": "@fluentui/react!IGroup:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onToggleSelectGroup",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupDividerProps#onToggleSummarize:member",
              "docComment": "/**\n * Callback for when the group \"Show All\" link is clicked\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onToggleSummarize?: "
                },
                {
                  "kind": "Content",
                  "text": "(group: "
                },
                {
                  "kind": "Reference",
                  "text": "IGroup",
                  "canonicalReference": "@fluentui/react!IGroup:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onToggleSummarize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupDividerProps#selected:member",
              "docComment": "/**\n * If all items in the group are selected.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selected?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "selected",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupDividerProps#selectionMode:member",
              "docComment": "/**\n * The selection mode of the list the group lives within.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectionMode?: "
                },
                {
                  "kind": "Reference",
                  "text": "SelectionMode",
                  "canonicalReference": "@fluentui/utilities!SelectionMode:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "selectionMode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupDividerProps#showAllLinkText:member",
              "docComment": "/**\n * Text to display for the group \"Show All\" link.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "showAllLinkText?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "showAllLinkText",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupDividerProps#theme:member",
              "docComment": "/**\n * Theme provided by the Higher Order Component\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "theme?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITheme",
                  "canonicalReference": "@fluentui/theme!ITheme:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "theme",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupDividerProps#viewport:member",
              "docComment": "/**\n * A reference to the viewport in which the header is rendered.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "viewport?: "
                },
                {
                  "kind": "Reference",
                  "text": "IViewport",
                  "canonicalReference": "@fluentui/react-internal!IViewport:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "viewport",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IGroupedList:interface",
          "docComment": "/**\n * {@docCategory GroupedList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IGroupedList extends "
            },
            {
              "kind": "Reference",
              "text": "IList",
              "canonicalReference": "@fluentui/react-internal!IList:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IGroupedList",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedList#forceUpdate:member",
              "docComment": "/**\n * Ensures that the list content is updated. Call this in cases where the list props don't change, but the list still needs to be re-evaluated. For example, if a sizer bar is adjusted and causes the list width to change, you can call this to force a re-evaluation. Be aware that this can be an expensive operation and should be done sparingly.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forceUpdate: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "forceUpdate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedList#toggleCollapseAll:member",
              "docComment": "/**\n * Toggles the collapsed state of all the groups in the list.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toggleCollapseAll: "
                },
                {
                  "kind": "Content",
                  "text": "(allCollapsed: boolean) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "toggleCollapseAll",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IGroupedListProps:interface",
          "docComment": "/**\n * {@docCategory GroupedList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IGroupedListProps extends "
            },
            {
              "kind": "Reference",
              "text": "React.ClassAttributes",
              "canonicalReference": "@types/react!~React.ClassAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "GroupedListBase",
              "canonicalReference": "@fluentui/react!GroupedListBase:class"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "IGroupedListProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListProps#className:member",
              "docComment": "/**\n * Optional class name to add to the root element.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "className?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "className",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListProps#compact:member",
              "docComment": "/**\n * Boolean value to indicate if the component should render in compact mode. Set to false by default\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compact?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "compact",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListProps#componentRef:member",
              "docComment": "/**\n * Optional callback to access the IGroupedList interface. Use this instead of ref for accessing the public methods and properties of the component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentRef?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRefObject",
                  "canonicalReference": "@fluentui/utilities!IRefObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IGroupedList",
                  "canonicalReference": "@fluentui/react!IGroupedList:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "componentRef",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListProps#dragDropEvents:member",
              "docComment": "/**\n * Map of callback functions related to drag and drop functionality.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dragDropEvents?: "
                },
                {
                  "kind": "Reference",
                  "text": "IDragDropEvents",
                  "canonicalReference": "@fluentui/react-internal!IDragDropEvents:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dragDropEvents",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListProps#dragDropHelper:member",
              "docComment": "/**\n * helper to manage drag/drop across item and groups\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dragDropHelper?: "
                },
                {
                  "kind": "Reference",
                  "text": "IDragDropHelper",
                  "canonicalReference": "@fluentui/react-internal!IDragDropHelper:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dragDropHelper",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListProps#eventsToRegister:member",
              "docComment": "/**\n * Event names and corresponding callbacks that will be registered to groups and rendered elements\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "eventsToRegister?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        eventName: string;\n        callback: (context: "
                },
                {
                  "kind": "Reference",
                  "text": "IDragDropContext",
                  "canonicalReference": "@fluentui/react-internal!IDragDropContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ", event?: any) => void;\n    }[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "eventsToRegister",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListProps#focusZoneProps:member",
              "docComment": "/**\n * Optional properties to pass through to the FocusZone.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "focusZoneProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "IFocusZoneProps",
                  "canonicalReference": "@fluentui/react-focus!IFocusZoneProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "focusZoneProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListProps#getGroupHeight:member",
              "docComment": "/**\n * Optional function to override default group height calculation used by list virtualization.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getGroupHeight?: "
                },
                {
                  "kind": "Content",
                  "text": "(group: "
                },
                {
                  "kind": "Reference",
                  "text": "IGroup",
                  "canonicalReference": "@fluentui/react!IGroup:interface"
                },
                {
                  "kind": "Content",
                  "text": ", groupIndex: number) => number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "getGroupHeight",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListProps#groupProps:member",
              "docComment": "/**\n * Optional override properties to render groups.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "groupProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "IGroupRenderProps",
                  "canonicalReference": "@fluentui/react!IGroupRenderProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "groupProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListProps#groups:member",
              "docComment": "/**\n * Optional grouping instructions.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "groups?: "
                },
                {
                  "kind": "Reference",
                  "text": "IGroup",
                  "canonicalReference": "@fluentui/react!IGroup:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "groups",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListProps#items:member",
              "docComment": "/**\n * List of items to render.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "items: "
                },
                {
                  "kind": "Content",
                  "text": "any[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "items",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListProps#listProps:member",
              "docComment": "/**\n * Optional properties to pass through to the list components being rendered.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "IListProps",
                  "canonicalReference": "@fluentui/react-internal!IListProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "listProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListProps#onGroupExpandStateChanged:member",
              "docComment": "/**\n * Optional callback when the group expand state changes between all collapsed and at least one group is expanded.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onGroupExpandStateChanged?: "
                },
                {
                  "kind": "Content",
                  "text": "(isSomeGroupExpanded: boolean) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onGroupExpandStateChanged",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListProps#onRenderCell:member",
              "docComment": "/**\n * Rendering callback to render the group items.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRenderCell: "
                },
                {
                  "kind": "Content",
                  "text": "(nestingDepth?: number, item?: any, index?: number) => "
                },
                {
                  "kind": "Reference",
                  "text": "React.ReactNode",
                  "canonicalReference": "@types/react!~React.ReactNode:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onRenderCell",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListProps#onShouldVirtualize:member",
              "docComment": "/**\n * Optional callback to determine whether the list should be rendered in full, or virtualized. Virtualization will add and remove pages of items as the user scrolls them into the visible range. This benefits larger list scenarios by reducing the DOM on the screen, but can negatively affect performance for smaller lists. The default implementation will virtualize when this callback is not provided.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onShouldVirtualize?: "
                },
                {
                  "kind": "Content",
                  "text": "(props: "
                },
                {
                  "kind": "Reference",
                  "text": "IListProps",
                  "canonicalReference": "@fluentui/react-internal!IListProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onShouldVirtualize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListProps#role:member",
              "docComment": "/**\n * Override the default role for GroupedList.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "role?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "role",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListProps#rootListProps:member",
              "docComment": "/**\n * Optional properties to pass through to the root list component being rendered.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rootListProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "IListProps",
                  "canonicalReference": "@fluentui/react-internal!IListProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "rootListProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListProps#selection:member",
              "docComment": "/**\n * Optional selection model to track selection state.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selection?: "
                },
                {
                  "kind": "Reference",
                  "text": "ISelection",
                  "canonicalReference": "@fluentui/utilities!ISelection:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "selection",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListProps#selectionMode:member",
              "docComment": "/**\n * Controls how/if the list manages selection.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectionMode?: "
                },
                {
                  "kind": "Reference",
                  "text": "SelectionMode",
                  "canonicalReference": "@fluentui/utilities!SelectionMode:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "selectionMode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListProps#styles:member",
              "docComment": "/**\n * Style function to be passed in to override the themed or default styles\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "styles?: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyleFunctionOrObject",
                  "canonicalReference": "@fluentui/merge-styles!IStyleFunctionOrObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IGroupedListStyleProps",
                  "canonicalReference": "@fluentui/react!IGroupedListStyleProps:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "IGroupedListStyles",
                  "canonicalReference": "@fluentui/react!IGroupedListStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "styles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListProps#theme:member",
              "docComment": "/**\n * Theme that is passed in from Higher Order Component\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "theme?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITheme",
                  "canonicalReference": "@fluentui/theme!ITheme:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "theme",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListProps#usePageCache:member",
              "docComment": "/**\n * boolean to control if pages containing unchanged items should be cached, this is a perf optimization The same property in List.Props\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "usePageCache?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "usePageCache",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListProps#viewport:member",
              "docComment": "/**\n * Optional Viewport, provided by the parent component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "viewport?: "
                },
                {
                  "kind": "Reference",
                  "text": "IViewport",
                  "canonicalReference": "@fluentui/react-internal!IViewport:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "viewport",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IGroupedListSectionProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IGroupedListSectionProps extends "
            },
            {
              "kind": "Reference",
              "text": "React.ClassAttributes",
              "canonicalReference": "@types/react!~React.ClassAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "GroupedListSection",
              "canonicalReference": "@fluentui/react!GroupedListSection:class"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "IGroupedListSectionProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListSectionProps#compact:member",
              "docComment": "/**\n * Whether to render in compact mode\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compact?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "compact",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListSectionProps#componentRef:member",
              "docComment": "/**\n * Gets the component ref.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentRef?: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "componentRef",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListSectionProps#dragDropEvents:member",
              "docComment": "/**\n * Map of callback functions related to drag and drop functionality.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dragDropEvents?: "
                },
                {
                  "kind": "Reference",
                  "text": "IDragDropEvents",
                  "canonicalReference": "@fluentui/react-internal!IDragDropEvents:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dragDropEvents",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListSectionProps#dragDropHelper:member",
              "docComment": "/**\n * helper to manage drag/drop across item rows and groups\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dragDropHelper?: "
                },
                {
                  "kind": "Reference",
                  "text": "IDragDropHelper",
                  "canonicalReference": "@fluentui/react-internal!IDragDropHelper:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dragDropHelper",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListSectionProps#eventsToRegister:member",
              "docComment": "/**\n * Event names and corresponding callbacks that will be registered to the group and the rendered elements\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "eventsToRegister?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        eventName: string;\n        callback: (context: "
                },
                {
                  "kind": "Reference",
                  "text": "IDragDropContext",
                  "canonicalReference": "@fluentui/react-internal!IDragDropContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ", event?: any) => void;\n    }[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "eventsToRegister",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListSectionProps#footerProps:member",
              "docComment": "/**\n * Information to pass in to the group footer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "footerProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "IGroupFooterProps",
                  "canonicalReference": "@fluentui/react!IGroupFooterProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "footerProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListSectionProps#getGroupItemLimit:member",
              "docComment": "/**\n * Grouping item limit.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getGroupItemLimit?: "
                },
                {
                  "kind": "Content",
                  "text": "(group: "
                },
                {
                  "kind": "Reference",
                  "text": "IGroup",
                  "canonicalReference": "@fluentui/react!IGroup:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "getGroupItemLimit",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListSectionProps#group:member",
              "docComment": "/**\n * Optional grouping instructions.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "group?: "
                },
                {
                  "kind": "Reference",
                  "text": "IGroup",
                  "canonicalReference": "@fluentui/react!IGroup:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "group",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListSectionProps#groupedListClassNames:member",
              "docComment": "/**\n * GroupedList resolved class names\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "groupedListClassNames?: "
                },
                {
                  "kind": "Reference",
                  "text": "IProcessedStyleSet",
                  "canonicalReference": "@fluentui/merge-styles!IProcessedStyleSet:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IGroupedListStyles",
                  "canonicalReference": "@fluentui/react!IGroupedListStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "groupedListClassNames",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListSectionProps#groupIndex:member",
              "docComment": "/**\n * Optional grouping instructions.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "groupIndex?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "groupIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListSectionProps#groupNestingDepth:member",
              "docComment": "/**\n * Optional group nesting level.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "groupNestingDepth?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "groupNestingDepth",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListSectionProps#groupProps:member",
              "docComment": "/**\n * Optional override properties to render groups.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "groupProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "IGroupRenderProps",
                  "canonicalReference": "@fluentui/react!IGroupRenderProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "groupProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListSectionProps#groups:member",
              "docComment": "/**\n * Stores parent group's children.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "groups?: "
                },
                {
                  "kind": "Reference",
                  "text": "IGroup",
                  "canonicalReference": "@fluentui/react!IGroup:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "groups",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListSectionProps#headerProps:member",
              "docComment": "/**\n * Information to pass in to the group header.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "headerProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "IGroupHeaderProps",
                  "canonicalReference": "@fluentui/react!IGroupHeaderProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "headerProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListSectionProps#items:member",
              "docComment": "/**\n * List of items to render.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "items: "
                },
                {
                  "kind": "Content",
                  "text": "any[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "items",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListSectionProps#listProps:member",
              "docComment": "/**\n * Optional list props to pass to list renderer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "IListProps",
                  "canonicalReference": "@fluentui/react-internal!IListProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "listProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListSectionProps#onRenderCell:member",
              "docComment": "/**\n * Rendering callback to render the group items.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRenderCell: "
                },
                {
                  "kind": "Content",
                  "text": "(nestingDepth?: number, item?: any, index?: number) => "
                },
                {
                  "kind": "Reference",
                  "text": "React.ReactNode",
                  "canonicalReference": "@types/react!~React.ReactNode:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onRenderCell",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListSectionProps#onRenderGroupFooter:member",
              "docComment": "/**\n * Override for rendering the group footer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRenderGroupFooter?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRenderFunction",
                  "canonicalReference": "@fluentui/utilities!IRenderFunction:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IGroupFooterProps",
                  "canonicalReference": "@fluentui/react!IGroupFooterProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onRenderGroupFooter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListSectionProps#onRenderGroupHeader:member",
              "docComment": "/**\n * Override for rendering the group header.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRenderGroupHeader?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRenderFunction",
                  "canonicalReference": "@fluentui/utilities!IRenderFunction:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IGroupHeaderProps",
                  "canonicalReference": "@fluentui/react!IGroupHeaderProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onRenderGroupHeader",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListSectionProps#onRenderGroupShowAll:member",
              "docComment": "/**\n * Override for rendering the group Show All link.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRenderGroupShowAll?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRenderFunction",
                  "canonicalReference": "@fluentui/utilities!IRenderFunction:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IGroupShowAllProps",
                  "canonicalReference": "@fluentui/react!IGroupShowAllProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onRenderGroupShowAll",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListSectionProps#onShouldVirtualize:member",
              "docComment": "/**\n * Optional callback to determine whether the list should be rendered in full, or virtualized. Virtualization will add and remove pages of items as the user scrolls them into the visible range. This benefits larger list scenarios by reducing the DOM on the screen, but can negatively affect performance for smaller lists. The default implementation will virtualize when this callback is not provided.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onShouldVirtualize?: "
                },
                {
                  "kind": "Content",
                  "text": "(props: "
                },
                {
                  "kind": "Reference",
                  "text": "IListProps",
                  "canonicalReference": "@fluentui/react-internal!IListProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onShouldVirtualize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListSectionProps#selection:member",
              "docComment": "/**\n * Optional selection model to track selection state.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selection?: "
                },
                {
                  "kind": "Reference",
                  "text": "ISelection",
                  "canonicalReference": "@fluentui/utilities!ISelection:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "selection",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListSectionProps#selectionMode:member",
              "docComment": "/**\n * Controls how/if the details list manages selection.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectionMode?: "
                },
                {
                  "kind": "Reference",
                  "text": "SelectionMode",
                  "canonicalReference": "@fluentui/utilities!SelectionMode:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "selectionMode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListSectionProps#showAllProps:member",
              "docComment": "/**\n * Information to pass in to the group Show All footer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "showAllProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "IGroupShowAllProps",
                  "canonicalReference": "@fluentui/react!IGroupShowAllProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "showAllProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListSectionProps#viewport:member",
              "docComment": "/**\n * Optional Viewport, provided by the parent component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "viewport?: "
                },
                {
                  "kind": "Reference",
                  "text": "IViewport",
                  "canonicalReference": "@fluentui/react-internal!IViewport:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "viewport",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IGroupedListSectionState:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IGroupedListSectionState "
            }
          ],
          "releaseTag": "Public",
          "name": "IGroupedListSectionState",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListSectionState#isDropping:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isDropping?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isDropping",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListSectionState#isSelected:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isSelected?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isSelected",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IGroupedListState:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IGroupedListState "
            }
          ],
          "releaseTag": "Public",
          "name": "IGroupedListState",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListState#compact:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compact?: "
                },
                {
                  "kind": "Reference",
                  "text": "IGroupedListProps",
                  "canonicalReference": "@fluentui/react!IGroupedListProps:interface"
                },
                {
                  "kind": "Content",
                  "text": "['compact']"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "compact",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListState#groups:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "groups?: "
                },
                {
                  "kind": "Reference",
                  "text": "IGroup",
                  "canonicalReference": "@fluentui/react!IGroup:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "groups",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListState#items:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "items?: "
                },
                {
                  "kind": "Reference",
                  "text": "IGroupedListProps",
                  "canonicalReference": "@fluentui/react!IGroupedListProps:interface"
                },
                {
                  "kind": "Content",
                  "text": "['items']"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "items",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListState#listProps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "IGroupedListProps",
                  "canonicalReference": "@fluentui/react!IGroupedListProps:interface"
                },
                {
                  "kind": "Content",
                  "text": "['listProps']"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "listProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListState#selectionMode:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectionMode?: "
                },
                {
                  "kind": "Reference",
                  "text": "IGroupedListProps",
                  "canonicalReference": "@fluentui/react!IGroupedListProps:interface"
                },
                {
                  "kind": "Content",
                  "text": "['selectionMode']"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "selectionMode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListState#version:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "version: "
                },
                {
                  "kind": "Content",
                  "text": "{}"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "version",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluentui/react!IGroupedListStyleProps:type",
          "docComment": "/**\n * {@docCategory GroupedList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type IGroupedListStyleProps = "
            },
            {
              "kind": "Reference",
              "text": "Required",
              "canonicalReference": "!Required:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IGroupedListProps",
              "canonicalReference": "@fluentui/react!IGroupedListProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'theme'>> & "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IGroupedListProps",
              "canonicalReference": "@fluentui/react!IGroupedListProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'className'> & {\n    isCollapsed?: boolean;\n    compact?: boolean;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "IGroupedListStyleProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 11
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IGroupedListStyles:interface",
          "docComment": "/**\n * {@docCategory GroupedList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IGroupedListStyles "
            }
          ],
          "releaseTag": "Public",
          "name": "IGroupedListStyles",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListStyles#group:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "group: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "group",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListStyles#groupIsDropping:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "groupIsDropping: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "groupIsDropping",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupedListStyles#root:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "root: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "root",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IGroupFooterProps:interface",
          "docComment": "/**\n * {@docCategory GroupedList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IGroupFooterProps extends "
            },
            {
              "kind": "Reference",
              "text": "IGroupDividerProps",
              "canonicalReference": "@fluentui/react!IGroupDividerProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IGroupFooterProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupFooterProps#styles:member",
              "docComment": "/**\n * Style function to be passed in to override the themed or default styles\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "styles?: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyleFunctionOrObject",
                  "canonicalReference": "@fluentui/merge-styles!IStyleFunctionOrObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IGroupFooterStyleProps",
                  "canonicalReference": "@fluentui/react!IGroupFooterStyleProps:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "IGroupFooterStyles",
                  "canonicalReference": "@fluentui/react!IGroupFooterStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "styles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluentui/react!IGroupFooterStyleProps:type",
          "docComment": "/**\n * {@docCategory GroupedList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type IGroupFooterStyleProps = "
            },
            {
              "kind": "Reference",
              "text": "Required",
              "canonicalReference": "!Required:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IGroupFooterProps",
              "canonicalReference": "@fluentui/react!IGroupFooterProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'theme'>> & "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IGroupFooterProps",
              "canonicalReference": "@fluentui/react!IGroupFooterProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'selected' | 'className'> & {\n    isCollapsed?: boolean;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "IGroupFooterStyleProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 11
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IGroupFooterStyles:interface",
          "docComment": "/**\n * {@docCategory GroupedList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IGroupFooterStyles "
            }
          ],
          "releaseTag": "Public",
          "name": "IGroupFooterStyles",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupFooterStyles#root:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "root: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "root",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IGroupHeaderCheckboxProps:interface",
          "docComment": "/**\n * {@docCategory GroupedList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IGroupHeaderCheckboxProps "
            }
          ],
          "releaseTag": "Public",
          "name": "IGroupHeaderCheckboxProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupHeaderCheckboxProps#checked:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checked: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "checked",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupHeaderCheckboxProps#theme:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "theme?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITheme",
                  "canonicalReference": "@fluentui/theme!ITheme:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "theme",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IGroupHeaderProps:interface",
          "docComment": "/**\n * {@docCategory GroupedList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IGroupHeaderProps extends "
            },
            {
              "kind": "Reference",
              "text": "IGroupDividerProps",
              "canonicalReference": "@fluentui/react!IGroupDividerProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IGroupHeaderProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupHeaderProps#ariaPosInSet:member",
              "docComment": "/**\n * Defines an element's number or position in the current set of listitems or treeitems\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ariaPosInSet?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "ariaPosInSet",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupHeaderProps#ariaSetSize:member",
              "docComment": "/**\n * Defines the number of items in the current set of listitems or treeitems\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ariaSetSize?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "ariaSetSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupHeaderProps#expandButtonIcon:member",
              "docComment": "/**\n * Defines the name of a custom icon to be used for group headers. If not set, the default icon will be used\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "expandButtonIcon?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "expandButtonIcon",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupHeaderProps#expandButtonProps:member",
              "docComment": "/**\n * Native props for the GroupHeader expand and collapse button\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "expandButtonProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "React.HTMLAttributes",
                  "canonicalReference": "@types/react!~React.HTMLAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLButtonElement",
                  "canonicalReference": "!HTMLButtonElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "expandButtonProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupHeaderProps#groupedListId:member",
              "docComment": "/**\n * GroupedList id for aria-controls\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "groupedListId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "groupedListId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupHeaderProps#onRenderGroupHeaderCheckbox:member",
              "docComment": "/**\n * If provided, can be used to render a custom checkbox\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRenderGroupHeaderCheckbox?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRenderFunction",
                  "canonicalReference": "@fluentui/utilities!IRenderFunction:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IGroupHeaderCheckboxProps",
                  "canonicalReference": "@fluentui/react!IGroupHeaderCheckboxProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onRenderGroupHeaderCheckbox",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupHeaderProps#selectAllButtonProps:member",
              "docComment": "/**\n * Native props for the GroupHeader select all button\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectAllButtonProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "React.HTMLAttributes",
                  "canonicalReference": "@types/react!~React.HTMLAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLButtonElement",
                  "canonicalReference": "!HTMLButtonElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "selectAllButtonProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupHeaderProps#styles:member",
              "docComment": "/**\n * Style function to be passed in to override the themed or default styles\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "styles?: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyleFunctionOrObject",
                  "canonicalReference": "@fluentui/merge-styles!IStyleFunctionOrObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IGroupHeaderStyleProps",
                  "canonicalReference": "@fluentui/react!IGroupHeaderStyleProps:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "IGroupHeaderStyles",
                  "canonicalReference": "@fluentui/react!IGroupHeaderStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "styles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupHeaderProps#useFastIcons:member",
              "docComment": "/**\n * Whether to use fast icon and check components. The icons can't be targeted by customization but are still customizable via class names.\n *\n * @defaultvalue\n *\n * true\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "useFastIcons?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "useFastIcons",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluentui/react!IGroupHeaderStyleProps:type",
          "docComment": "/**\n * {@docCategory GroupedList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type IGroupHeaderStyleProps = "
            },
            {
              "kind": "Reference",
              "text": "Required",
              "canonicalReference": "!Required:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IGroupHeaderProps",
              "canonicalReference": "@fluentui/react!IGroupHeaderProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'theme'>> & "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IGroupHeaderProps",
              "canonicalReference": "@fluentui/react!IGroupHeaderProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'selected' | 'className'> & {\n    isCollapsed?: boolean;\n    compact?: boolean;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "IGroupHeaderStyleProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 11
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IGroupHeaderStyles:interface",
          "docComment": "/**\n * {@docCategory GroupedList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IGroupHeaderStyles "
            }
          ],
          "releaseTag": "Public",
          "name": "IGroupHeaderStyles",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupHeaderStyles#check:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "check: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "check",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupHeaderStyles#dropIcon:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dropIcon: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dropIcon",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupHeaderStyles#expand:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "expand: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "expand",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupHeaderStyles#expandIsCollapsed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "expandIsCollapsed: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "expandIsCollapsed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupHeaderStyles#groupHeaderContainer:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "groupHeaderContainer: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "groupHeaderContainer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupHeaderStyles#headerCount:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "headerCount: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "headerCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupHeaderStyles#root:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "root: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "root",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupHeaderStyles#title:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "title: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "title",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IGroupRenderProps:interface",
          "docComment": "/**\n * {@docCategory GroupedList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IGroupRenderProps "
            }
          ],
          "releaseTag": "Public",
          "name": "IGroupRenderProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupRenderProps#collapseAllVisibility:member",
              "docComment": "/**\n * Flag to indicate whether to ignore the collapsing icon on header.\n *\n * @defaultvalue\n *\n * CollapseAllVisibility.visible\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "collapseAllVisibility?: "
                },
                {
                  "kind": "Reference",
                  "text": "CollapseAllVisibility",
                  "canonicalReference": "@fluentui/react!CollapseAllVisibility:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "collapseAllVisibility",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupRenderProps#footerProps:member",
              "docComment": "/**\n * Information to pass in to the group footer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "footerProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "IGroupFooterProps",
                  "canonicalReference": "@fluentui/react!IGroupFooterProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "footerProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupRenderProps#getGroupItemLimit:member",
              "docComment": "/**\n * Grouping item limit.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getGroupItemLimit?: "
                },
                {
                  "kind": "Content",
                  "text": "(group: "
                },
                {
                  "kind": "Reference",
                  "text": "IGroup",
                  "canonicalReference": "@fluentui/react!IGroup:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "getGroupItemLimit",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupRenderProps#headerProps:member",
              "docComment": "/**\n * Information to pass in to the group header.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "headerProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "IGroupHeaderProps",
                  "canonicalReference": "@fluentui/react!IGroupHeaderProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "headerProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupRenderProps#isAllGroupsCollapsed:member",
              "docComment": "/**\n * Boolean indicating if all groups are in collapsed state.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isAllGroupsCollapsed?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isAllGroupsCollapsed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupRenderProps#onRenderFooter:member",
              "docComment": "/**\n * Override which allows the caller to provide a custom footer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRenderFooter?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRenderFunction",
                  "canonicalReference": "@fluentui/utilities!IRenderFunction:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IGroupFooterProps",
                  "canonicalReference": "@fluentui/react!IGroupFooterProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onRenderFooter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupRenderProps#onRenderHeader:member",
              "docComment": "/**\n * Override which allows the caller to provide a custom header.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRenderHeader?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRenderFunction",
                  "canonicalReference": "@fluentui/utilities!IRenderFunction:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IGroupHeaderProps",
                  "canonicalReference": "@fluentui/react!IGroupHeaderProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onRenderHeader",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupRenderProps#onRenderShowAll:member",
              "docComment": "/**\n * Override which allows the caller to provide a custom Show All link.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRenderShowAll?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRenderFunction",
                  "canonicalReference": "@fluentui/utilities!IRenderFunction:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IGroupShowAllProps",
                  "canonicalReference": "@fluentui/react!IGroupShowAllProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onRenderShowAll",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupRenderProps#onToggleCollapseAll:member",
              "docComment": "/**\n * Callback for when all groups are expanded or collapsed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onToggleCollapseAll?: "
                },
                {
                  "kind": "Content",
                  "text": "(isAllCollapsed: boolean) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onToggleCollapseAll",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupRenderProps#role:member",
              "docComment": "/**\n * Override which allows the caller to provide a custom aria role\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "role?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "role",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupRenderProps#showAllProps:member",
              "docComment": "/**\n * Information to pass in to the group Show all footer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "showAllProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "IGroupShowAllProps",
                  "canonicalReference": "@fluentui/react!IGroupShowAllProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "showAllProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupRenderProps#showEmptyGroups:member",
              "docComment": "/**\n * Boolean indicating if empty groups are shown\n *\n * @defaultvalue\n *\n * false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "showEmptyGroups?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "showEmptyGroups",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IGroupShowAllProps:interface",
          "docComment": "/**\n * {@docCategory GroupedList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IGroupShowAllProps extends "
            },
            {
              "kind": "Reference",
              "text": "IGroupDividerProps",
              "canonicalReference": "@fluentui/react!IGroupDividerProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IGroupShowAllProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupShowAllProps#showAllLinkText:member",
              "docComment": "/**\n * The Show All link text.\n *\n * @defaultvalue\n *\n * 'Show All'\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "showAllLinkText?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "showAllLinkText",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupShowAllProps#styles:member",
              "docComment": "/**\n * Style function to be passed in to override the themed or default styles\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "styles?: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyleFunctionOrObject",
                  "canonicalReference": "@fluentui/merge-styles!IStyleFunctionOrObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IGroupShowAllStyleProps",
                  "canonicalReference": "@fluentui/react!IGroupShowAllStyleProps:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "IGroupShowAllStyles",
                  "canonicalReference": "@fluentui/react!IGroupShowAllStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "styles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluentui/react!IGroupShowAllStyleProps:type",
          "docComment": "/**\n * {@docCategory GroupedList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type IGroupShowAllStyleProps = "
            },
            {
              "kind": "Reference",
              "text": "Required",
              "canonicalReference": "!Required:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IGroupShowAllProps",
              "canonicalReference": "@fluentui/react!IGroupShowAllProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'theme'>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "IGroupShowAllStyleProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IGroupShowAllStyles:interface",
          "docComment": "/**\n * {@docCategory GroupedList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IGroupShowAllStyles "
            }
          ],
          "releaseTag": "Public",
          "name": "IGroupShowAllStyles",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupShowAllStyles#root:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "root: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "root",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IGroupSpacerProps:interface",
          "docComment": "/**\n * {@docCategory GroupedList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IGroupSpacerProps "
            }
          ],
          "releaseTag": "Public",
          "name": "IGroupSpacerProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupSpacerProps#count:member",
              "docComment": "/**\n * Count of spacer(s)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "count: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "count",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupSpacerProps#indentWidth:member",
              "docComment": "/**\n * How much to indent\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "indentWidth?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "indentWidth",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupSpacerProps#role:member",
              "docComment": "/**\n * Override the default role (presentation)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "role?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "role",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupSpacerProps#styles:member",
              "docComment": "/**\n * Style function to be passed in to override the themed or default styles\n *\n * @deprecated\n *\n * unused, to be removed in 7.0\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "styles?: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyleFunctionOrObject",
                  "canonicalReference": "@fluentui/merge-styles!IStyleFunctionOrObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IGroupSpacerStyleProps",
                  "canonicalReference": "@fluentui/react!IGroupSpacerStyleProps:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "IGroupSpacerStyles",
                  "canonicalReference": "@fluentui/react!IGroupSpacerStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "styles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupSpacerProps#theme:member",
              "docComment": "/**\n * Theme from Higher Order Component\n *\n * @deprecated\n *\n * unused, to be removed in 7.0\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "theme?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITheme",
                  "canonicalReference": "@fluentui/theme!ITheme:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "theme",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluentui/react!IGroupSpacerStyleProps:type",
          "docComment": "/**\n * {@docCategory GroupedList}\n *\n * @deprecated\n *\n * unused, to be removed in 7.0. Use {@link IGroupSpacerProps.indentWidth}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type IGroupSpacerStyleProps = "
            },
            {
              "kind": "Reference",
              "text": "Required",
              "canonicalReference": "!Required:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IGroupSpacerProps",
              "canonicalReference": "@fluentui/react!IGroupSpacerProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'theme'>> & {\n    width?: number;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "IGroupSpacerStyleProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IGroupSpacerStyles:interface",
          "docComment": "/**\n * {@docCategory GroupedList}\n *\n * @deprecated\n *\n * unused, to be removed in 7.0.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IGroupSpacerStyles "
            }
          ],
          "releaseTag": "Public",
          "name": "IGroupSpacerStyles",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IGroupSpacerStyles#root:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "root: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "root",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IOnRenderComboBoxLabelProps:interface",
          "docComment": "/**\n * {@docCategory ComboBox}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IOnRenderComboBoxLabelProps "
            }
          ],
          "releaseTag": "Public",
          "name": "IOnRenderComboBoxLabelProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IOnRenderComboBoxLabelProps#multiselectAccessibleText:member",
              "docComment": "/**\n * Accessible text for label when ComboBox is multiselected.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "multiselectAccessibleText?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "multiselectAccessibleText",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IOnRenderComboBoxLabelProps#props:member",
              "docComment": "/**\n * Props to render the ComboBox.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "props: "
                },
                {
                  "kind": "Reference",
                  "text": "IComboBoxProps",
                  "canonicalReference": "@fluentui/react!IComboBoxProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "props",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluentui/react!IOverrideColumnRenderProps:type",
          "docComment": "/**\n * Extended column render props.\n *\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type IOverrideColumnRenderProps = "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDetailsListProps",
              "canonicalReference": "@fluentui/react!IDetailsListProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'onRenderItemColumn' | 'getCellValueKey'> & "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDetailsRowProps",
              "canonicalReference": "@fluentui/react!IDetailsRowProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'cellsByColumn'>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "IOverrideColumnRenderProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IShimmeredDetailsListProps:interface",
          "docComment": "/**\n * ShimmeredDetailsList props interface {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IShimmeredDetailsListProps extends "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDetailsListProps",
              "canonicalReference": "@fluentui/react!IDetailsListProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'styles'> "
            }
          ],
          "releaseTag": "Public",
          "name": "IShimmeredDetailsListProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IShimmeredDetailsListProps#ariaLabelForShimmer:member",
              "docComment": "/**\n * Aria label for shimmer. Set on grid while shimmer is enabled.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ariaLabelForShimmer?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "ariaLabelForShimmer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IShimmeredDetailsListProps#detailsListStyles:member",
              "docComment": "/**\n * DetailsList styles to pass through.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "detailsListStyles?: "
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsListProps",
                  "canonicalReference": "@fluentui/react!IDetailsListProps:interface"
                },
                {
                  "kind": "Content",
                  "text": "['styles']"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "detailsListStyles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IShimmeredDetailsListProps#enableShimmer:member",
              "docComment": "/**\n * Boolean flag to control when to render placeholders vs real items. It's up to the consumer app to know when fetching of the data is done to toggle this prop.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enableShimmer?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "enableShimmer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IShimmeredDetailsListProps#onRenderCustomPlaceholder:member",
              "docComment": "/**\n * Custom placeholder renderer to be used when in need to override the default placeholder of a DetailsRow. `rowProps` argument is passed to leverage the calculated column measurements done by DetailsList or you can use the optional arguments of item `index` and `defaultRender` to execute additional logic before rendering the default placeholder.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRenderCustomPlaceholder?: "
                },
                {
                  "kind": "Content",
                  "text": "(rowProps: "
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsRowProps",
                  "canonicalReference": "@fluentui/react!IDetailsRowProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ", index?: number, defaultRender?: (props: "
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsRowProps",
                  "canonicalReference": "@fluentui/react!IDetailsRowProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "React.ReactNode",
                  "canonicalReference": "@types/react!~React.ReactNode:type"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "React.ReactNode",
                  "canonicalReference": "@types/react!~React.ReactNode:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onRenderCustomPlaceholder",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IShimmeredDetailsListProps#removeFadingOverlay:member",
              "docComment": "/**\n * Determines whether to remove a fading out to bottom overlay over the shimmering items used to further emphasize the unknown number of items that will be fetched.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeFadingOverlay?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "removeFadingOverlay",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IShimmeredDetailsListProps#shimmerLines:member",
              "docComment": "/**\n * Number of shimmer placeholder lines to render.\n *\n * @defaultvalue\n *\n * 10\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "shimmerLines?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "shimmerLines",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IShimmeredDetailsListProps#shimmerOverlayStyles:member",
              "docComment": "/**\n * Custom styles to override the styles specific to the ShimmeredDetailsList root area.\n *\n * @deprecated\n *\n * Use `styles` prop instead. Any value provided will be ignored.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "shimmerOverlayStyles?: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyleFunctionOrObject",
                  "canonicalReference": "@fluentui/merge-styles!IStyleFunctionOrObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IShimmeredDetailsListStyleProps",
                  "canonicalReference": "@fluentui/react!IShimmeredDetailsListStyleProps:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "IShimmeredDetailsListStyles",
                  "canonicalReference": "@fluentui/react!IShimmeredDetailsListStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "shimmerOverlayStyles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IShimmeredDetailsListProps#styles:member",
              "docComment": "/**\n * Custom styles to override the styles specific to the ShimmeredDetailsList root area.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "styles?: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyleFunctionOrObject",
                  "canonicalReference": "@fluentui/merge-styles!IStyleFunctionOrObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IShimmeredDetailsListStyleProps",
                  "canonicalReference": "@fluentui/react!IShimmeredDetailsListStyleProps:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "IShimmeredDetailsListStyles",
                  "canonicalReference": "@fluentui/react!IShimmeredDetailsListStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "styles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluentui/react!IShimmeredDetailsListStyleProps:type",
          "docComment": "/**\n * Defines props needed to construct styles. This represents the simplified set of immutable things which control the class names. {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type IShimmeredDetailsListStyleProps = "
            },
            {
              "kind": "Reference",
              "text": "Required",
              "canonicalReference": "!Required:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IShimmeredDetailsListProps",
              "canonicalReference": "@fluentui/react!IShimmeredDetailsListProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'theme'>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "IShimmeredDetailsListStyleProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/react!IShimmeredDetailsListStyles:interface",
          "docComment": "/**\n * Represents the stylable areas of the control. {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IShimmeredDetailsListStyles "
            }
          ],
          "releaseTag": "Public",
          "name": "IShimmeredDetailsListStyles",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/react!IShimmeredDetailsListStyles#root:member",
              "docComment": "/**\n * Represents styles passed to the `List` component for creating a fade-out to the bottom overlay.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "root: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@fluentui/merge-styles!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "root",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "@fluentui/react!SelectAllVisibility:enum",
          "docComment": "/**\n * {@docCategory DetailsList}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum SelectAllVisibility "
            }
          ],
          "releaseTag": "Public",
          "name": "SelectAllVisibility",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluentui/react!SelectAllVisibility.hidden:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hidden = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "releaseTag": "Public",
              "name": "hidden",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluentui/react!SelectAllVisibility.none:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "none = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "releaseTag": "Public",
              "name": "none",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluentui/react!SelectAllVisibility.visible:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "visible = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "releaseTag": "Public",
              "name": "visible",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/react!ShimmeredDetailsList:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "ShimmeredDetailsList: "
            },
            {
              "kind": "Reference",
              "text": "React.FunctionComponent",
              "canonicalReference": "@types/react!~React.FunctionComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IShimmeredDetailsListProps",
              "canonicalReference": "@fluentui/react!IShimmeredDetailsListProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "releaseTag": "Public",
          "name": "ShimmeredDetailsList",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluentui/react!ShimmeredDetailsListBase:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ShimmeredDetailsListBase extends "
            },
            {
              "kind": "Reference",
              "text": "React.Component",
              "canonicalReference": "@types/react!~React.Component:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IShimmeredDetailsListProps",
              "canonicalReference": "@fluentui/react!IShimmeredDetailsListProps:interface"
            },
            {
              "kind": "Content",
              "text": ", {}> "
            }
          ],
          "releaseTag": "Public",
          "name": "ShimmeredDetailsListBase",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@fluentui/react!ShimmeredDetailsListBase:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `ShimmeredDetailsListBase` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(props: "
                },
                {
                  "kind": "Reference",
                  "text": "IShimmeredDetailsListProps",
                  "canonicalReference": "@fluentui/react!IShimmeredDetailsListProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!ShimmeredDetailsListBase#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(): "
                },
                {
                  "kind": "Reference",
                  "text": "JSX.Element",
                  "canonicalReference": "@types/react!~__global.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "render"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluentui/react!VirtualizedComboBox:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class VirtualizedComboBox extends "
            },
            {
              "kind": "Reference",
              "text": "React.Component",
              "canonicalReference": "@types/react!~React.Component:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IComboBoxProps",
              "canonicalReference": "@fluentui/react!IComboBoxProps:interface"
            },
            {
              "kind": "Content",
              "text": ", {}> "
            },
            {
              "kind": "Content",
              "text": "implements "
            },
            {
              "kind": "Reference",
              "text": "IComboBox",
              "canonicalReference": "@fluentui/react!IComboBox:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "VirtualizedComboBox",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@fluentui/react!VirtualizedComboBox#_onRenderList:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected _onRenderList: "
                },
                {
                  "kind": "Content",
                  "text": "(props: "
                },
                {
                  "kind": "Reference",
                  "text": "IComboBoxProps",
                  "canonicalReference": "@fluentui/react!IComboBoxProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "JSX.Element",
                  "canonicalReference": "@types/react!~__global.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "_onRenderList",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluentui/react!VirtualizedComboBox#_onScrollToItem:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected _onScrollToItem: "
                },
                {
                  "kind": "Content",
                  "text": "(itemIndex: number) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "_onScrollToItem",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@fluentui/react!VirtualizedComboBox:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `VirtualizedComboBox` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(props: "
                },
                {
                  "kind": "Reference",
                  "text": "IComboBoxProps",
                  "canonicalReference": "@fluentui/react!IComboBoxProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!VirtualizedComboBox#dismissMenu:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dismissMenu(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "dismissMenu"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!VirtualizedComboBox#focus:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "focus(shouldOpenOnFocus?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", useFocusAsync?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shouldOpenOnFocus",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "useFocusAsync",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "focus"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/react!VirtualizedComboBox#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(): "
                },
                {
                  "kind": "Reference",
                  "text": "JSX.Element",
                  "canonicalReference": "@types/react!~__global.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "render"
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluentui/react!VirtualizedComboBox#selectedOptions:member",
              "docComment": "/**\n * All selected options\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get selectedOptions(): "
                },
                {
                  "kind": "Reference",
                  "text": "IComboBoxOption",
                  "canonicalReference": "@fluentui/react!IComboBoxOption:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "selectedOptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 8
            }
          ]
        }
      ]
    }
  ]
}
