{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.7.1",
    "schemaVersion": 1003,
    "oldestForwardsCompatibleVersion": 1001
  },
  "kind": "Package",
  "canonicalReference": "@fluentui/utilities!",
  "docComment": "",
  "name": "@fluentui/utilities",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@fluentui/utilities!",
      "name": "",
      "members": [
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!addDirectionalKeyCode:function(1)",
          "docComment": "/**\n * Adds a keycode to the list of keys that, when pressed, should cause the focus outlines to be visible. This can be used to add global shortcut keys that directionally move from section to section within an app or between focus trap zones.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function addDirectionalKeyCode(which: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "which",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "addDirectionalKeyCode"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!addElementAtIndex:function(1)",
          "docComment": "/**\n * Given an array, this function returns a new array where an element has been inserted at the given index.\n *\n * @param array - The array to operate on\n *\n * @param index - The index where an element should be inserted\n *\n * @param itemToAdd - The element to insert\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function addElementAtIndex<T>(array: "
            },
            {
              "kind": "Content",
              "text": "T[]"
            },
            {
              "kind": "Content",
              "text": ", index: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", itemToAdd: "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "array",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "index",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "itemToAdd",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "addElementAtIndex"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/utilities!allowOverscrollOnElement:var",
          "docComment": "/**\n * Same as allowScrollOnElement but does not prevent overscrolling.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "allowOverscrollOnElement: "
            },
            {
              "kind": "Content",
              "text": "(element: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": " | null, events: "
            },
            {
              "kind": "Reference",
              "text": "EventGroup",
              "canonicalReference": "@fluentui/utilities!EventGroup:class"
            },
            {
              "kind": "Content",
              "text": ") => void"
            }
          ],
          "releaseTag": "Public",
          "name": "allowOverscrollOnElement",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/utilities!allowScrollOnElement:var",
          "docComment": "/**\n * Allows the user to scroll within a element, while preventing the user from scrolling the body\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "allowScrollOnElement: "
            },
            {
              "kind": "Content",
              "text": "(element: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": " | null, events: "
            },
            {
              "kind": "Reference",
              "text": "EventGroup",
              "canonicalReference": "@fluentui/utilities!EventGroup:class"
            },
            {
              "kind": "Content",
              "text": ") => void"
            }
          ],
          "releaseTag": "Public",
          "name": "allowScrollOnElement",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/utilities!anchorProperties:var",
          "docComment": "/**\n * An array of A tag properties and events.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "anchorProperties: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, number>"
            }
          ],
          "releaseTag": "Public",
          "name": "anchorProperties",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!appendFunction:function(1)",
          "docComment": "/**\n * Returns a single function which will call each of the given functions in the context of the parent.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function appendFunction(parent: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", ...functions: "
            },
            {
              "kind": "Content",
              "text": "any[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "() => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "parent",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "functions",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "appendFunction"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!arraysEqual:function(1)",
          "docComment": "/**\n * Returns a boolean indicating if the two given arrays are equal in length and values.\n *\n * @param array1 - First array to compare\n *\n * @param array2 - Second array to compare\n *\n * @returns True if the arrays are the same length and have the same values in the same positions, false otherwise.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function arraysEqual<T>(array1: "
            },
            {
              "kind": "Content",
              "text": "T[]"
            },
            {
              "kind": "Content",
              "text": ", array2: "
            },
            {
              "kind": "Content",
              "text": "T[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "array1",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "array2",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "arraysEqual"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!asAsync:function(1)",
          "docComment": "/**\n * Produces a component which internally loads the target component before first mount. The component passes all props through to the loaded component.\n *\n * This overload accepts a module with a default export for the component.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function asAsync<TProps>(options: "
            },
            {
              "kind": "Reference",
              "text": "IAsAsyncOptions",
              "canonicalReference": "@fluentui/utilities!IAsAsyncOptions:interface"
            },
            {
              "kind": "Content",
              "text": "<TProps>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "React.ForwardRefExoticComponent",
              "canonicalReference": "@types/react!~React.ForwardRefExoticComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "React.PropsWithoutRef",
              "canonicalReference": "@types/react!~React.PropsWithoutRef:type"
            },
            {
              "kind": "Content",
              "text": "<TProps & {\n    asyncPlaceholder?: \"symbol\" | \"object\" | \"text\" | \"table\" | \"ruby\" | \"small\" | \"input\" | \"progress\" | \"select\" | \"a\" | \"abbr\" | \"address\" | \"area\" | \"article\" | \"aside\" | \"audio\" | \"b\" | \"base\" | \"bdi\" | \"bdo\" | \"blockquote\" | \"body\" | \"br\" | \"button\" | \"canvas\" | \"caption\" | \"cite\" | \"code\" | \"col\" | \"colgroup\" | \"data\" | \"datalist\" | \"dd\" | \"del\" | \"details\" | \"dfn\" | \"dialog\" | \"div\" | \"dl\" | \"dt\" | \"em\" | \"embed\" | \"fieldset\" | \"figcaption\" | \"figure\" | \"footer\" | \"form\" | \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\" | \"head\" | \"header\" | \"hgroup\" | \"hr\" | \"html\" | \"i\" | \"iframe\" | \"img\" | \"ins\" | \"kbd\" | \"label\" | \"legend\" | \"li\" | \"link\" | \"main\" | \"map\" | \"mark\" | \"menu\" | \"meta\" | \"meter\" | \"nav\" | \"noscript\" | \"ol\" | \"optgroup\" | \"option\" | \"output\" | \"p\" | \"param\" | \"picture\" | \"pre\" | \"q\" | \"rp\" | \"rt\" | \"s\" | \"samp\" | \"script\" | \"section\" | \"slot\" | \"source\" | \"span\" | \"strong\" | \"style\" | \"sub\" | \"summary\" | \"sup\" | \"tbody\" | \"td\" | \"template\" | \"textarea\" | \"tfoot\" | \"th\" | \"thead\" | \"time\" | \"title\" | \"tr\" | \"track\" | \"u\" | \"ul\" | \"var\" | \"video\" | \"wbr\" | \"big\" | "
            },
            {
              "kind": "Reference",
              "text": "React.ComponentClass",
              "canonicalReference": "@types/react!~React.ComponentClass:interface"
            },
            {
              "kind": "Content",
              "text": "<any, any> | "
            },
            {
              "kind": "Reference",
              "text": "React.FunctionComponent",
              "canonicalReference": "@types/react!~React.FunctionComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<any> | \"keygen\" | \"menuitem\" | \"noindex\" | \"webview\" | \"svg\" | \"animate\" | \"animateMotion\" | \"animateTransform\" | \"circle\" | \"clipPath\" | \"defs\" | \"desc\" | \"ellipse\" | \"feBlend\" | \"feColorMatrix\" | \"feComponentTransfer\" | \"feComposite\" | \"feConvolveMatrix\" | \"feDiffuseLighting\" | \"feDisplacementMap\" | \"feDistantLight\" | \"feDropShadow\" | \"feFlood\" | \"feFuncA\" | \"feFuncB\" | \"feFuncG\" | \"feFuncR\" | \"feGaussianBlur\" | \"feImage\" | \"feMerge\" | \"feMergeNode\" | \"feMorphology\" | \"feOffset\" | \"fePointLight\" | \"feSpecularLighting\" | \"feSpotLight\" | \"feTile\" | \"feTurbulence\" | \"filter\" | \"foreignObject\" | \"g\" | \"image\" | \"line\" | \"linearGradient\" | \"marker\" | \"mask\" | \"metadata\" | \"mpath\" | \"path\" | \"pattern\" | \"polygon\" | \"polyline\" | \"radialGradient\" | \"rect\" | \"stop\" | \"switch\" | \"textPath\" | \"tspan\" | \"use\" | \"view\" | undefined;\n}> & "
            },
            {
              "kind": "Reference",
              "text": "React.RefAttributes",
              "canonicalReference": "@types/react!~React.RefAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "React.ElementType",
              "canonicalReference": "@types/react!~React.ElementType:type"
            },
            {
              "kind": "Content",
              "text": "<TProps>>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 16
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "TProps",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "asAsync"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!assertNever:function(1)",
          "docComment": "/**\n * AssertNever is a utility function that can be used for exhaustiveness checks in switch statements.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function assertNever(x: "
            },
            {
              "kind": "Content",
              "text": "never"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "never"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "x",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "assertNever"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!assign:function(1)",
          "docComment": "/**\n * Makes a resulting merge of a bunch of objects. Pass in the target object followed by 1 or more objects as arguments and they will be merged sequentially into the target. Note that this will shallow merge; it will not create new cloned values for target members.\n *\n * @param target - Target object to merge following object arguments into.\n *\n * @param args - One or more objects that will be mixed into the target in the order they are provided.\n *\n * @returns Resulting merged target.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function assign(target: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", ...args: "
            },
            {
              "kind": "Content",
              "text": "any[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "target",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "args",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "assign"
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluentui/utilities!Async:class",
          "docComment": "/**\n * Bugs often appear in async code when stuff gets disposed, but async operations don't get canceled. This Async helper class solves these issues by tying async code to the lifetime of a disposable object.\n *\n * Usage: Anything class extending from BaseModel can access this helper via this.async. Otherwise create a new instance of the class and remember to call dispose() during your code's dispose handler.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Async "
            }
          ],
          "releaseTag": "Public",
          "name": "Async",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Async#_logError:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected _logError(e: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "e",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "_logError"
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@fluentui/utilities!Async:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Async` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(parent?: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", onError?: "
                },
                {
                  "kind": "Content",
                  "text": "(e: any) => void"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "parent",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "onError",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Async#cancelAnimationFrame:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cancelAnimationFrame(id: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", targetElement?: "
                },
                {
                  "kind": "Reference",
                  "text": "Element",
                  "canonicalReference": "!Element:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "targetElement",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  }
                }
              ],
              "name": "cancelAnimationFrame"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Async#clearImmediate:member(1)",
              "docComment": "/**\n * Clears the immediate.\n *\n * @param id - Id to cancel.\n *\n * @param targetElement - Optional target element to use for identifying the correct window.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clearImmediate(id: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", targetElement?: "
                },
                {
                  "kind": "Reference",
                  "text": "Element",
                  "canonicalReference": "!Element:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "targetElement",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  }
                }
              ],
              "name": "clearImmediate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Async#clearInterval:member(1)",
              "docComment": "/**\n * Clears the interval.\n *\n * @param id - Id to cancel.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clearInterval(id: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "clearInterval"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Async#clearTimeout:member(1)",
              "docComment": "/**\n * Clears the timeout.\n *\n * @param id - Id to cancel.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clearTimeout(id: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "clearTimeout"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Async#debounce:member(1)",
              "docComment": "/**\n * Creates a function that will delay the execution of func until after wait milliseconds have elapsed since the last time it was invoked. Provide an options object to indicate that func should be invoked on the leading and/or trailing edge of the wait timeout. Subsequent calls to the debounced function will return the result of the last func call.\n *\n * Note: If leading and trailing options are true func will be called on the trailing edge of the timeout only if the debounced function is invoked more than once during the wait timeout.\n *\n * @param func - The function to debounce.\n *\n * @param wait - The number of milliseconds to delay.\n *\n * @param options - The options object.\n *\n * @returns The new debounced function.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "debounce<T extends "
                },
                {
                  "kind": "Content",
                  "text": "(...args: any[]) => any"
                },
                {
                  "kind": "Content",
                  "text": ">(func: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ", wait?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        leading?: boolean;\n        maxWait?: number;\n        trailing?: boolean;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ICancelable",
                  "canonicalReference": "@fluentui/utilities!ICancelable:type"
                },
                {
                  "kind": "Content",
                  "text": "<T> & T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "func",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "wait",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "debounce"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Async#dispose:member(1)",
              "docComment": "/**\n * Dispose function, clears all async operations.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dispose(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "dispose"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Async#requestAnimationFrame:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "requestAnimationFrame(callback: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ", targetElement?: "
                },
                {
                  "kind": "Reference",
                  "text": "Element",
                  "canonicalReference": "!Element:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "targetElement",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  }
                }
              ],
              "name": "requestAnimationFrame"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Async#setImmediate:member(1)",
              "docComment": "/**\n * SetImmediate override, which will auto cancel the immediate during dispose.\n *\n * @param callback - Callback to execute.\n *\n * @param targetElement - Optional target element to use for identifying the correct window.\n *\n * @returns The setTimeout id.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setImmediate(callback: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ", targetElement?: "
                },
                {
                  "kind": "Reference",
                  "text": "Element",
                  "canonicalReference": "!Element:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "targetElement",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  }
                }
              ],
              "name": "setImmediate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Async#setInterval:member(1)",
              "docComment": "/**\n * SetInterval override, which will auto cancel the timeout during dispose.\n *\n * @param callback - Callback to execute.\n *\n * @param duration - Duration in milliseconds.\n *\n * @returns The setTimeout id.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setInterval(callback: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ", duration: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "duration",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "setInterval"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Async#setTimeout:member(1)",
              "docComment": "/**\n * SetTimeout override, which will auto cancel the timeout during dispose.\n *\n * @param callback - Callback to execute.\n *\n * @param duration - Duration in milliseconds.\n *\n * @returns The setTimeout id.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setTimeout(callback: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ", duration: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "duration",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "setTimeout"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Async#throttle:member(1)",
              "docComment": "/**\n * Creates a function that, when executed, will only call the func function at most once per every wait milliseconds. Provide an options object to indicate that func should be invoked on the leading and/or trailing edge of the wait timeout. Subsequent calls to the throttled function will return the result of the last func call.\n *\n * Note: If leading and trailing options are true func will be called on the trailing edge of the timeout only if the throttled function is invoked more than once during the wait timeout.\n *\n * @param func - The function to throttle.\n *\n * @param wait - The number of milliseconds to throttle executions to. Defaults to 0.\n *\n * @param options - The options object.\n *\n * @returns The new throttled function.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "throttle<T extends "
                },
                {
                  "kind": "Content",
                  "text": "(...args: any[]) => any"
                },
                {
                  "kind": "Content",
                  "text": ">(func: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ", wait?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        leading?: boolean;\n        trailing?: boolean;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "func",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "wait",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "throttle"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/utilities!audioProperties:var",
          "docComment": "/**\n * An array of AUDIO tag properties and events.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "audioProperties: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, number>"
            }
          ],
          "releaseTag": "Public",
          "name": "audioProperties",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluentui/utilities!AutoScroll:class",
          "docComment": "/**\n * AutoScroll simply hooks up mouse events given a parent element, and scrolls the container up/down depending on how close the mouse is to the top/bottom of the container.\n *\n * Once you don't want autoscroll any more, just dispose the helper and it will unhook events.\n *\n * {@docCategory AutoScroll}\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class AutoScroll "
            }
          ],
          "releaseTag": "Public",
          "name": "AutoScroll",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@fluentui/utilities!AutoScroll:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `AutoScroll` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(element: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!AutoScroll#dispose:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dispose(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "dispose"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluentui/utilities!BaseComponent:class",
          "docComment": "/**\n * BaseComponent class, which provides basic helpers for all components.\n *\n * {@docCategory BaseComponent}\n *\n * @deprecated\n *\n * Do not use. We are moving away from class component.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class BaseComponent<TProps extends "
            },
            {
              "kind": "Reference",
              "text": "IBaseProps",
              "canonicalReference": "@fluentui/utilities!IBaseProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Content",
              "text": "{}"
            },
            {
              "kind": "Content",
              "text": ", TState = "
            },
            {
              "kind": "Content",
              "text": "{}"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "React.Component",
              "canonicalReference": "@types/react!~React.Component:class"
            },
            {
              "kind": "Content",
              "text": "<TProps, TState> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TProps",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            },
            {
              "typeParameterName": "TState",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              }
            }
          ],
          "name": "BaseComponent",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@fluentui/utilities!BaseComponent#_async:member",
              "docComment": "/**\n * Gets the async instance associated with the component, created on demand. The async instance gives subclasses a way to execute setTimeout/setInterval async calls safely, where the callbacks will be cleared/ignored automatically after unmounting. The helpers within the async object also preserve the this pointer so that you don't need to \"bind\" the callbacks.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected get _async(): "
                },
                {
                  "kind": "Reference",
                  "text": "Async",
                  "canonicalReference": "@fluentui/utilities!Async:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "_async",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluentui/utilities!BaseComponent#_disposables:member",
              "docComment": "/**\n * Allows subclasses to push things to this._disposables to be auto disposed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected get _disposables(): "
                },
                {
                  "kind": "Reference",
                  "text": "IDisposable",
                  "canonicalReference": "@fluentui/utilities!IDisposable:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "_disposables",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluentui/utilities!BaseComponent#_events:member",
              "docComment": "/**\n * Gets the event group instance assocaited with the component, created on demand. The event instance provides on/off methods for listening to DOM (or regular javascript object) events. The event callbacks will be automatically disconnected after unmounting. The helpers within the events object also preserve the this reference so that you don't need to \"bind\" the callbacks.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected get _events(): "
                },
                {
                  "kind": "Reference",
                  "text": "EventGroup",
                  "canonicalReference": "@fluentui/utilities!EventGroup:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "_events",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!BaseComponent#_resolveRef:member(1)",
              "docComment": "/**\n * Helper to return a memoized ref resolver function.\n *\n * @deprecated\n *\n * Use `createRef` from React.createRef.\n *\n * @param refName - Name of the member to assign the ref to.\n *\n * @returns A function instance keyed from the given refname.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected _resolveRef(refName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "(ref: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ReactNode",
                  "canonicalReference": "@types/react!~React.ReactNode:type"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "React.ReactNode",
                  "canonicalReference": "@types/react!~React.ReactNode:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "refName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "_resolveRef"
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluentui/utilities!BaseComponent#_skipComponentRefResolution:member",
              "docComment": "/**\n * Controls whether the componentRef prop will be resolved by this component instance. If you are implementing a passthrough (higher-order component), you would set this to false and pass through the props to the inner component, allowing it to resolve the componentRef.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected _skipComponentRefResolution: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "_skipComponentRefResolution",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!BaseComponent#_updateComponentRef:member(1)",
              "docComment": "/**\n * Updates the componentRef (by calling it with \"this\" when necessary.)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected _updateComponentRef(currentProps: "
                },
                {
                  "kind": "Reference",
                  "text": "IBaseProps",
                  "canonicalReference": "@fluentui/utilities!IBaseProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ", newProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "IBaseProps",
                  "canonicalReference": "@fluentui/utilities!IBaseProps:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "currentProps",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "newProps",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "_updateComponentRef"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!BaseComponent#_warnConditionallyRequiredProps:member(1)",
              "docComment": "/**\n * Warns when props are required if a condition is met.\n *\n * @param requiredProps - The name of the props that are required when the condition is met.\n *\n * @param conditionalPropName - The name of the prop that the condition is based on.\n *\n * @param condition - Whether the condition is met.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected _warnConditionallyRequiredProps(requiredProps: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ", conditionalPropName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", condition: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "requiredProps",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "conditionalPropName",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "condition",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "_warnConditionallyRequiredProps"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!BaseComponent#_warnDeprecations:member(1)",
              "docComment": "/**\n * Warns when a deprecated props are being used.\n *\n * @param deprecationMap - The map of deprecations, where key is the prop name and the value is either null or a replacement prop name.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected _warnDeprecations(deprecationMap: "
                },
                {
                  "kind": "Reference",
                  "text": "ISettingsMap",
                  "canonicalReference": "@fluentui/utilities!ISettingsMap:type"
                },
                {
                  "kind": "Content",
                  "text": "<TProps>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "deprecationMap",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ],
              "name": "_warnDeprecations"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!BaseComponent#_warnMutuallyExclusive:member(1)",
              "docComment": "/**\n * Warns when props which are mutually exclusive with each other are both used.\n *\n * @param mutuallyExclusiveMap - The map of mutually exclusive props.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected _warnMutuallyExclusive(mutuallyExclusiveMap: "
                },
                {
                  "kind": "Reference",
                  "text": "ISettingsMap",
                  "canonicalReference": "@fluentui/utilities!ISettingsMap:type"
                },
                {
                  "kind": "Content",
                  "text": "<TProps>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "mutuallyExclusiveMap",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ],
              "name": "_warnMutuallyExclusive"
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@fluentui/utilities!BaseComponent:constructor(1)",
              "docComment": "/**\n * BaseComponent constructor\n *\n * @param props - The props for the component.\n *\n * @param context - The context for the component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(props: "
                },
                {
                  "kind": "Content",
                  "text": "TProps"
                },
                {
                  "kind": "Content",
                  "text": ", context?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluentui/utilities!BaseComponent#className:member",
              "docComment": "/**\n * Gets the object's class name.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get className(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "className",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!BaseComponent#componentDidMount:member(1)",
              "docComment": "/**\n * When the component has mounted, update the componentRef.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentDidMount(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "componentDidMount"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!BaseComponent#componentDidUpdate:member(1)",
              "docComment": "/**\n * When the component receives props, make sure the componentRef is updated.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentDidUpdate(prevProps: "
                },
                {
                  "kind": "Content",
                  "text": "TProps"
                },
                {
                  "kind": "Content",
                  "text": ", prevState: "
                },
                {
                  "kind": "Content",
                  "text": "TState"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "prevProps",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "prevState",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "componentDidUpdate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!BaseComponent#componentWillUnmount:member(1)",
              "docComment": "/**\n * If we have disposables, dispose them automatically on unmount.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentWillUnmount(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "componentWillUnmount"
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluentui/utilities!BaseComponent.onError:member",
              "docComment": "/**\n * @deprecated\n *\n * Use React's error boundaries instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static onError: "
                },
                {
                  "kind": "Content",
                  "text": "(errorMessage?: string, ex?: any) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onError",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true
            }
          ],
          "extendsTokenRange": {
            "startIndex": 8,
            "endIndex": 10
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/utilities!baseElementEvents:var",
          "docComment": "/**\n * An array of events that are allowed on every html element type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "baseElementEvents: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, number>"
            }
          ],
          "releaseTag": "Public",
          "name": "baseElementEvents",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/utilities!baseElementProperties:var",
          "docComment": "/**\n * An array of element attributes which are allowed on every html element type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "baseElementProperties: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, number>"
            }
          ],
          "releaseTag": "Public",
          "name": "baseElementProperties",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/utilities!buttonProperties:var",
          "docComment": "/**\n * An array of BUTTON tag properties and events.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "buttonProperties: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, number>"
            }
          ],
          "releaseTag": "Public",
          "name": "buttonProperties",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!calculatePrecision:function(1)",
          "docComment": "/**\n * Calculates a number's precision based on the number of trailing zeros if the number does not have a decimal indicated by a negative precision. Otherwise, it calculates the number of digits after the decimal point indicated by a positive precision.\n *\n * @param value - the value to determine the precision of\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function calculatePrecision(value: "
            },
            {
              "kind": "Content",
              "text": "number | string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "calculatePrecision"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!classNamesFunction:function(1)",
          "docComment": "/**\n * Creates a getClassNames function which calls getStyles given the props, and injects them into mergeStyleSets.\n *\n * Note that the props you pass in on every render should be in the same order and immutable (numbers, strings, and booleans). This will allow the results to be memoized. Violating these will cause extra recalcs to occur.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function classNamesFunction<TStyleProps extends "
            },
            {
              "kind": "Content",
              "text": "{}"
            },
            {
              "kind": "Content",
              "text": ", TStyleSet extends "
            },
            {
              "kind": "Reference",
              "text": "IStyleSet",
              "canonicalReference": "@fluentui/merge-styles!IStyleSet:type"
            },
            {
              "kind": "Content",
              "text": "<TStyleSet>"
            },
            {
              "kind": "Content",
              "text": ">(options?: "
            },
            {
              "kind": "Reference",
              "text": "IClassNamesFunctionOptions",
              "canonicalReference": "@fluentui/utilities!IClassNamesFunctionOptions:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "(getStyles: "
            },
            {
              "kind": "Reference",
              "text": "IStyleFunctionOrObject",
              "canonicalReference": "@fluentui/merge-styles!IStyleFunctionOrObject:type"
            },
            {
              "kind": "Content",
              "text": "<TStyleProps, TStyleSet> | undefined, styleProps?: TStyleProps) => "
            },
            {
              "kind": "Reference",
              "text": "IProcessedStyleSet",
              "canonicalReference": "@fluentui/merge-styles!IProcessedStyleSet:type"
            },
            {
              "kind": "Content",
              "text": "<TStyleSet>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 8,
            "endIndex": 13
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "TStyleProps",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TStyleSet",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "classNamesFunction"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/utilities!colGroupProperties:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "colGroupProperties: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, number>"
            }
          ],
          "releaseTag": "Public",
          "name": "colGroupProperties",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/utilities!colProperties:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "colProperties: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, number>"
            }
          ],
          "releaseTag": "Public",
          "name": "colProperties",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!composeComponentAs:function(1)",
          "docComment": "/**\n * Composes two components which conform to the `IComponentAs` specification; that is, two components which accept a `defaultRender` prop, which is a 'default' implementation of a component which accepts the same overall props.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function composeComponentAs<TProps>(outer: "
            },
            {
              "kind": "Reference",
              "text": "IComponentAs",
              "canonicalReference": "@fluentui/utilities!IComponentAs:type"
            },
            {
              "kind": "Content",
              "text": "<TProps>"
            },
            {
              "kind": "Content",
              "text": ", inner: "
            },
            {
              "kind": "Reference",
              "text": "IComponentAs",
              "canonicalReference": "@fluentui/utilities!IComponentAs:type"
            },
            {
              "kind": "Content",
              "text": "<TProps>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IComponentAs",
              "canonicalReference": "@fluentui/utilities!IComponentAs:type"
            },
            {
              "kind": "Content",
              "text": "<TProps>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "outer",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "parameterName": "inner",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "TProps",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "composeComponentAs"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!composeRenderFunction:function(1)",
          "docComment": "/**\n * Composes two 'render functions' to produce a final render function that renders the outer function, passing the inner function as 'default render'. The inner function is then passed the original 'default render' prop.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function composeRenderFunction<TProps>(outer: "
            },
            {
              "kind": "Reference",
              "text": "IRenderFunction",
              "canonicalReference": "@fluentui/utilities!IRenderFunction:interface"
            },
            {
              "kind": "Content",
              "text": "<TProps>"
            },
            {
              "kind": "Content",
              "text": ", inner: "
            },
            {
              "kind": "Reference",
              "text": "IRenderFunction",
              "canonicalReference": "@fluentui/utilities!IRenderFunction:interface"
            },
            {
              "kind": "Content",
              "text": "<TProps>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IRenderFunction",
              "canonicalReference": "@fluentui/utilities!IRenderFunction:interface"
            },
            {
              "kind": "Content",
              "text": "<TProps>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "outer",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "parameterName": "inner",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "TProps",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "composeRenderFunction"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!createArray:function(1)",
          "docComment": "/**\n * Creates an array of a given size and helper method to populate.\n *\n * @param size - Size of array.\n *\n * @param getItem - Callback to populate given cell index.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createArray<T>(size: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", getItem: "
            },
            {
              "kind": "Content",
              "text": "(index: number) => T"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "size",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "getItem",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "createArray"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!createMemoizer:function(1)",
          "docComment": "/**\n * Creates a memoizer for a single-value function, backed by a WeakMap. With a WeakMap, the memoized values are only kept as long as the source objects, ensuring that there is no memory leak.\n *\n * This function assumes that the input values passed to the wrapped function will be `function` or `object` types. To memoize functions which accept other inputs, use `memoizeFunction`, which memoizes against arbitrary inputs using a lookup cache.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createMemoizer<F extends "
            },
            {
              "kind": "Content",
              "text": "(input: any) => any"
            },
            {
              "kind": "Content",
              "text": ">(getValue: "
            },
            {
              "kind": "Content",
              "text": "F"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "F"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "getValue",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "F",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "createMemoizer"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/utilities!createMergedRef:var",
          "docComment": "/**\n * Helper to merge refs from within class components.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "createMergedRef: "
            },
            {
              "kind": "Content",
              "text": "<TType, TValue = null>(value?: TValue | undefined) => (...newRefs: (((instance: TType | TValue | null) => void) | "
            },
            {
              "kind": "Reference",
              "text": "React.RefObject",
              "canonicalReference": "@types/react!~React.RefObject:interface"
            },
            {
              "kind": "Content",
              "text": "<TType | TValue | null> | null | undefined)[]) => (newValue: TType | TValue | null) => void"
            }
          ],
          "releaseTag": "Public",
          "name": "createMergedRef",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!css:function(1)",
          "docComment": "/**\n * Concatination helper, which can merge class names together. Skips over falsey values.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function css(...args: "
            },
            {
              "kind": "Reference",
              "text": "ICssInput",
              "canonicalReference": "@fluentui/utilities!ICssInput:type"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "args",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "name": "css"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!customizable:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function customizable(scope: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", fields: "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": ", concatStyles?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "<P>(ComposedComponent: "
            },
            {
              "kind": "Reference",
              "text": "React.ComponentType",
              "canonicalReference": "@types/react!~React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<P>) => any"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "scope",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "fields",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "concatStyles",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "name": "customizable"
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluentui/utilities!Customizations:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Customizations "
            }
          ],
          "releaseTag": "Public",
          "name": "Customizations",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Customizations.applyBatchedUpdates:member(1)",
              "docComment": "/**\n * Used to run some code that sets Customizations without triggering an update until the end. Useful for applying Customizations that don't affect anything currently rendered, or for applying many customizations at once.\n *\n * @param suppressUpdate - Do not raise the change event at the end, preventing all updates\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static applyBatchedUpdates(code: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ", suppressUpdate?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "code",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "suppressUpdate",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "applyBatchedUpdates"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Customizations.applyScopedSettings:member(1)",
              "docComment": "/**\n * Apply Customizations to a particular named scope, like a component.\n *\n * @example\n *\n * Customizations.applyScopedSettings('Nav', \\{ styles: () =\\> \\{\\} \\});\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static applyScopedSettings(scopeName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", settings: "
                },
                {
                  "kind": "Reference",
                  "text": "ISettings",
                  "canonicalReference": "@fluentui/utilities!ISettings:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scopeName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "settings",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "applyScopedSettings"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Customizations.applySettings:member(1)",
              "docComment": "/**\n * Apply global Customization settings.\n *\n * @example\n *\n * Customizations.applySettings(\\{ theme: \\{...\\} \\});\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static applySettings(settings: "
                },
                {
                  "kind": "Reference",
                  "text": "ISettings",
                  "canonicalReference": "@fluentui/utilities!ISettings:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "settings",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "applySettings"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Customizations.getSettings:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static getSettings(properties: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ", scopeName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", localSettings?: "
                },
                {
                  "kind": "Reference",
                  "text": "ICustomizations",
                  "canonicalReference": "@fluentui/utilities!ICustomizations:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "properties",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "scopeName",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "localSettings",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "getSettings"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Customizations.observe:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static observe(onChange: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "onChange",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "observe"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Customizations.reset:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static reset(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "reset"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Customizations.unobserve:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static unobserve(onChange: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "onChange",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "unobserve"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluentui/utilities!Customizer:class",
          "docComment": "/**\n * The Customizer component allows for default props to be mixed into components which are decorated with the customizable() decorator, or use the styled HOC. This enables injection scenarios like:\n *\n * 1. render svg icons instead of the icon font within all buttons 2. inject a custom theme object into a component\n *\n * Props are provided via the settings prop which should be one of the following: - A json map which contains 1 or more name/value pairs representing injectable props. - A function that receives the current settings and returns the new ones that apply to the scope\n *\n * @deprecated\n *\n * This component is deprecated for purpose of applying theme to components as of `@fluentui/react` version 8. Use `ThemeProvider` for applying theme instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Customizer extends "
            },
            {
              "kind": "Reference",
              "text": "React.Component",
              "canonicalReference": "@types/react!~React.Component:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ICustomizerProps",
              "canonicalReference": "@fluentui/utilities!ICustomizerProps:type"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "Customizer",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Customizer#componentDidMount:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentDidMount(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "componentDidMount"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Customizer#componentWillUnmount:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentWillUnmount(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "componentWillUnmount"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Customizer#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(): "
                },
                {
                  "kind": "Reference",
                  "text": "React.ReactElement",
                  "canonicalReference": "@types/react!~React.ReactElement:interface"
                },
                {
                  "kind": "Content",
                  "text": "<{}>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "render"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/utilities!CustomizerContext:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "CustomizerContext: "
            },
            {
              "kind": "Reference",
              "text": "React.Context",
              "canonicalReference": "@types/react!~React.Context:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ICustomizerContext",
              "canonicalReference": "@fluentui/utilities!ICustomizerContext:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "releaseTag": "Public",
          "name": "CustomizerContext",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/utilities!DATA_IS_SCROLLABLE_ATTRIBUTE:var",
          "docComment": "/**\n * Placing this attribute on scrollable divs optimizes detection to know if the div is scrollable or not (given we can avoid expensive operations like getComputedStyle.)\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DATA_IS_SCROLLABLE_ATTRIBUTE = \"data-is-scrollable\""
            }
          ],
          "releaseTag": "Public",
          "name": "DATA_IS_SCROLLABLE_ATTRIBUTE",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluentui/utilities!DelayedRender:class",
          "docComment": "/**\n * Utility component for delaying the render of a child component after a given delay. This component requires a single child component; don't pass in many components. Wrap multiple components in a DIV if necessary.\n *\n * {@docCategory DelayedRender}\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DelayedRender extends "
            },
            {
              "kind": "Reference",
              "text": "React.Component",
              "canonicalReference": "@types/react!~React.Component:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDelayedRenderProps",
              "canonicalReference": "@fluentui/utilities!IDelayedRenderProps:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "IDelayedRenderState",
              "canonicalReference": "@fluentui/utilities!IDelayedRenderState:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "DelayedRender",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@fluentui/utilities!DelayedRender:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `DelayedRender` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(props: "
                },
                {
                  "kind": "Reference",
                  "text": "IDelayedRenderProps",
                  "canonicalReference": "@fluentui/utilities!IDelayedRenderProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!DelayedRender#componentDidMount:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentDidMount(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "componentDidMount"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!DelayedRender#componentWillUnmount:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentWillUnmount(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "componentWillUnmount"
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluentui/utilities!DelayedRender.defaultProps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static defaultProps: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        delay: number;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "defaultProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!DelayedRender#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(): "
                },
                {
                  "kind": "Reference",
                  "text": "React.ReactElement",
                  "canonicalReference": "@types/react!~React.ReactElement:interface"
                },
                {
                  "kind": "Content",
                  "text": "<{}> | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "render"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!disableBodyScroll:function(1)",
          "docComment": "/**\n * Disables the body scrolling.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function disableBodyScroll(): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "disableBodyScroll"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/utilities!divProperties:var",
          "docComment": "/**\n * An array of DIV tag properties and events.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "divProperties: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, number>"
            }
          ],
          "releaseTag": "Public",
          "name": "divProperties",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!doesElementContainFocus:function(1)",
          "docComment": "/**\n * Determines if an element, or any of its children, contain focus.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function doesElementContainFocus(element: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "element",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "doesElementContainFocus"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!enableBodyScroll:function(1)",
          "docComment": "/**\n * Enables the body scrolling.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function enableBodyScroll(): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "enableBodyScroll"
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluentui/utilities!EventGroup:class",
          "docComment": "/**\n * An instance of EventGroup allows anything with a handle to it to trigger events on it. If the target is an HTMLElement, the event will be attached to the element and can be triggered as usual (like clicking for onClick). The event can be triggered by calling EventGroup.raise() here. If the target is an HTMLElement, the event gets raised and is handled by the browser. Otherwise, it gets handled here in EventGroup, and the handler is called in the context of the parent (which is passed in in the constructor).\n *\n * {@docCategory EventGroup}\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class EventGroup "
            }
          ],
          "releaseTag": "Public",
          "name": "EventGroup",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@fluentui/utilities!EventGroup:constructor(1)",
              "docComment": "/**\n * parent: the context in which events attached to non-HTMLElements are called\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(parent: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "parent",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!EventGroup#declare:member(1)",
              "docComment": "/**\n * Declare an event as being supported by this instance of EventGroup.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare(event: "
                },
                {
                  "kind": "Content",
                  "text": "string | string[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "declare"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!EventGroup#dispose:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dispose(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "dispose"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!EventGroup.isDeclared:member(1)",
              "docComment": "/**\n * Check to see if the target has declared support of the given event.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static isDeclared(target: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", eventName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "target",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "eventName",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "isDeclared"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!EventGroup.isObserved:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static isObserved(target: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", eventName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "target",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "eventName",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "isObserved"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!EventGroup#off:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "off(target?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", eventName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", callback?: "
                },
                {
                  "kind": "Content",
                  "text": "(args?: any) => void"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | "
                },
                {
                  "kind": "Reference",
                  "text": "AddEventListenerOptions",
                  "canonicalReference": "!AddEventListenerOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "target",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "eventName",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 9
                  }
                }
              ],
              "name": "off"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!EventGroup#on:member(1)",
              "docComment": "/**\n * On the target, attach an event whose handler will be called in the context of the parent of this instance of EventGroup.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "on(target: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", eventName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Content",
                  "text": "(args?: any) => void"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | "
                },
                {
                  "kind": "Reference",
                  "text": "AddEventListenerOptions",
                  "canonicalReference": "!AddEventListenerOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "target",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "eventName",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 9
                  }
                }
              ],
              "name": "on"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!EventGroup#onAll:member(1)",
              "docComment": "/**\n * On the target, attach a set of events, where the events object is a name to function mapping.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onAll(target: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", events: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: string]: (args?: any) => void;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ", useCapture?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "target",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "events",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "useCapture",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "onAll"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!EventGroup#raise:member(1)",
              "docComment": "/**\n * Trigger the given event in the context of this instance of EventGroup.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "raise(eventName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", eventArgs?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", bubbleEvent?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "eventName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "eventArgs",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "bubbleEvent",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "raise"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!EventGroup.raise:member(1)",
              "docComment": "/**\n * For IE8, bubbleEvent is ignored here and must be dealt with by the handler. Events raised here by default have bubbling set to false and cancelable set to true. This applies also to built-in events being raised manually here on HTMLElements, which may lead to unexpected behavior if it differs from the defaults.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static raise(target: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", eventName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", eventArgs?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", bubbleEvent?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "target",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "eventName",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "eventArgs",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "bubbleEvent",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                }
              ],
              "name": "raise"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!EventGroup.stopPropagation:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static stopPropagation(event: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "stopPropagation"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!extendComponent:function(1)",
          "docComment": "/**\n * Extends a component's lifetime methods by appending new functions to the existing lifetime functions.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function extendComponent<T extends "
            },
            {
              "kind": "Reference",
              "text": "React.Component",
              "canonicalReference": "@types/react!~React.Component:class"
            },
            {
              "kind": "Content",
              "text": ">(parent: "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ", methods: "
            },
            {
              "kind": "Content",
              "text": "{\n    [key in keyof T]?: T[key];\n}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "parent",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "methods",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "extendComponent"
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluentui/utilities!FabricPerformance:class",
          "docComment": "/**\n * Performance helper class for measuring things.\n *\n * {@docCategory FabricPerformance}\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class FabricPerformance "
            }
          ],
          "releaseTag": "Public",
          "name": "FabricPerformance",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!FabricPerformance.measure:member(1)",
              "docComment": "/**\n * Measures execution time of the given syncronous function. If the same logic is executed multiple times, each individual measurement will be collected as well the overall numbers.\n *\n * @param name - The name of this measurement\n *\n * @param func - The logic to be measured for execution time\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static measure(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", func: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "func",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "measure"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!FabricPerformance.reset:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static reset(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "reset"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!FabricPerformance.setPeriodicReset:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static setPeriodicReset(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "setPeriodicReset"
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluentui/utilities!FabricPerformance.summary:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static summary: "
                },
                {
                  "kind": "Reference",
                  "text": "IPerfSummary",
                  "canonicalReference": "@fluentui/utilities!IPerfSummary:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "summary",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!filteredAssign:function(1)",
          "docComment": "/**\n * Makes a resulting merge of a bunch of objects, but allows a filter function to be passed in to filter the resulting merges. This allows for scenarios where you want to merge \"everything except that one thing\" or \"properties that start with data-\". Note that this will shallow merge; it will not create new cloned values for target members.\n *\n * @param isAllowed - Callback to determine if the given propName is allowed in the result.\n *\n * @param target - Target object to merge following object arguments into.\n *\n * @param args - One or more objects that will be mixed into the target in the order they are provided.\n *\n * @returns Resulting merged target.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function filteredAssign(isAllowed: "
            },
            {
              "kind": "Content",
              "text": "(propName: string) => boolean"
            },
            {
              "kind": "Content",
              "text": ", target: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", ...args: "
            },
            {
              "kind": "Content",
              "text": "any[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "isAllowed",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "target",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "args",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "name": "filteredAssign"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!find:function(1)",
          "docComment": "/**\n * Helper to find the first item within an array that satisfies the callback.\n *\n * @param array - Array to search\n *\n * @param cb - Callback which returns true on matches\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function find<T>(array: "
            },
            {
              "kind": "Content",
              "text": "T[]"
            },
            {
              "kind": "Content",
              "text": ", cb: "
            },
            {
              "kind": "Content",
              "text": "(item: T, index: number) => boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T | undefined"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "array",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "cb",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "find"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!findIndex:function(1)",
          "docComment": "/**\n * Helper to find the index of an item within an array, using a callback to determine the match.\n *\n * @param array - Array to search.\n *\n * @param cb - Callback which returns true on matches.\n *\n * @param fromIndex - Optional index to start from (defaults to 0)\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function findIndex<T>(array: "
            },
            {
              "kind": "Content",
              "text": "T[]"
            },
            {
              "kind": "Content",
              "text": ", cb: "
            },
            {
              "kind": "Content",
              "text": "(item: T, index: number) => boolean"
            },
            {
              "kind": "Content",
              "text": ", fromIndex?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "array",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "cb",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "fromIndex",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "findIndex"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!findScrollableParent:function(1)",
          "docComment": "/**\n * Traverses up the DOM for the element with the data-is-scrollable=true attribute, or returns document.body.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function findScrollableParent(startingElement: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Window",
              "canonicalReference": "!Window:interface"
            },
            {
              "kind": "Content",
              "text": " | undefined | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "startingElement",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "name": "findScrollableParent"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!fitContentToBounds:function(1)",
          "docComment": "/**\n * Produces a proportionally-scaled version of an input content size when fit to a bounding size. Given a `contentSize` and a `boundsSize`, this function scales `contentSize` proportionally using either `contain` or `cover` fit behaviors. Use this function to pre-calculate the layout for the CSS `object-fit` and `background-fit` behaviors. With `contain`, the output size must be the largest it can be while completely within the `boundsSize`. With `cover`, the output size must be the smallest it can be while completely around the `boundsSize`. By default, there is a `maxScale` value of 1, which prevents the `contentSize` from being scaled larger.\n *\n * @param options - the options for the bounds fit operation\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function fitContentToBounds(options: "
            },
            {
              "kind": "Reference",
              "text": "IFitContentToBoundsOptions",
              "canonicalReference": "@fluentui/utilities!IFitContentToBoundsOptions:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "ISize",
              "canonicalReference": "@fluentui/utilities!ISize:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "fitContentToBounds"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluentui/utilities!FitMode:type",
          "docComment": "/**\n * The available fit modes. These should match the fit modes for CSS.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type FitMode = "
            },
            {
              "kind": "Content",
              "text": "'contain' | 'cover'"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "FitMode",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!flatten:function(1)",
          "docComment": "/**\n * Given an array where each element is of type T or T[], flatten it into an array of T\n *\n * @param array - The array where each element can optionally also be an array\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function flatten<T>(array: "
            },
            {
              "kind": "Content",
              "text": "(T | T[])[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "array",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "flatten"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!focusAsync:function(1)",
          "docComment": "/**\n * Sets focus to an element asynchronously. The focus will be set at the next browser repaint, meaning it won't cause any extra recalculations. If more than one focusAsync is called during one frame, only the latest called focusAsync element will actually be focused\n *\n * @param element - The element to focus\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function focusAsync(element: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": " | {\n    focus: () => void;\n} | undefined | null"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "element",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "name": "focusAsync"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!focusFirstChild:function(1)",
          "docComment": "/**\n * Attempts to focus the first focusable element that is a child or child's child of the rootElement.\n *\n * @param rootElement - Element to start the search for a focusable child.\n *\n * @returns True if focus was set, false if it was not.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function focusFirstChild(rootElement: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "rootElement",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "focusFirstChild"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/utilities!FocusRects:var",
          "docComment": "/**\n * Function Component wrapper which enables calling `useFocusRects` hook. Renders nothing.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "FocusRects: "
            },
            {
              "kind": "Reference",
              "text": "React.FunctionComponent",
              "canonicalReference": "@types/react!~React.FunctionComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<{\n    rootRef?: "
            },
            {
              "kind": "Reference",
              "text": "React.RefObject",
              "canonicalReference": "@types/react!~React.RefObject:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n}>"
            }
          ],
          "releaseTag": "Public",
          "name": "FocusRects",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!format:function(1)",
          "docComment": "/**\n * String format method, used for scenarios where at runtime you need to evaluate a formatted string given a tokenized string. This usually only is needed in localization scenarios.\n *\n * @example\n * ```tsx\n * \"I love {0} every {1}\".format(\"CXP\")\n * ```\n *\n * will result in a Debug Exception.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function format(s: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", ...values: "
            },
            {
              "kind": "Content",
              "text": "any[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "s",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "values",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "format"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/utilities!formProperties:var",
          "docComment": "/**\n * An array of FORM tag properties and events.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "formProperties: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, number>"
            }
          ],
          "releaseTag": "Public",
          "name": "formProperties",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!getDistanceBetweenPoints:function(1)",
          "docComment": "/**\n * Determines the distance between two points.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getDistanceBetweenPoints(point1: "
            },
            {
              "kind": "Reference",
              "text": "Point",
              "canonicalReference": "@fluentui/utilities!Point:interface"
            },
            {
              "kind": "Content",
              "text": ", point2: "
            },
            {
              "kind": "Reference",
              "text": "Point",
              "canonicalReference": "@fluentui/utilities!Point:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "point1",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "point2",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "getDistanceBetweenPoints"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!getDocument:function(1)",
          "docComment": "/**\n * Helper to get the document object. Note that in popup window cases, document might be the wrong document, which is why we look at ownerDocument for the truth. Also note that the SSR flag is used to test ssr scenarios even if document is defined (from JSDOM for example.)\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getDocument(rootElement?: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "!Document:interface"
            },
            {
              "kind": "Content",
              "text": " | undefined"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "rootElement",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "name": "getDocument"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!getElementIndexPath:function(1)",
          "docComment": "/**\n * Finds the element index path from a parent element to a child element.\n *\n * If you had this node structure: \"A has children [B, C] and C has child D\", the index path from A to D would be [1, 0], or `parent.chidren[1].children[0]`.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getElementIndexPath(fromElement: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": ", toElement: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "fromElement",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "toElement",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "getElementIndexPath"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!getFirstFocusable:function(1)",
          "docComment": "/**\n * Gets the first focusable element.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getFirstFocusable(rootElement: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": ", currentElement: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": ", includeElementsInFocusZones?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "rootElement",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "currentElement",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "includeElementsInFocusZones",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "name": "getFirstFocusable"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!getFirstTabbable:function(1)",
          "docComment": "/**\n * Gets the first tabbable element. (The difference between focusable and tabbable is that tabbable elements are focusable elements that also have tabIndex != -1.)\n *\n * @param rootElement - The parent element to search beneath.\n *\n * @param currentElement - The descendant of rootElement to start the search at. This element is the first one checked, and iteration continues forward. Typical use passes rootElement.firstChild.\n *\n * @param includeElementsInFocusZones - true if traversal should go into FocusZone descendants.\n *\n * @param checkNode - Include currentElement in search when true. Defaults to true.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getFirstTabbable(rootElement: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": ", currentElement: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": ", includeElementsInFocusZones?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ", checkNode?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 11
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "rootElement",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "currentElement",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "includeElementsInFocusZones",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            },
            {
              "parameterName": "checkNode",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              }
            }
          ],
          "name": "getFirstTabbable"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!getFocusableByIndexPath:function(1)",
          "docComment": "/**\n * Finds the closest focusable element via an index path from a parent. See `getElementIndexPath` for getting an index path from an element to a child.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getFocusableByIndexPath(parent: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": ", path: "
            },
            {
              "kind": "Content",
              "text": "number[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": " | undefined"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "parent",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "path",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "getFocusableByIndexPath"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!getId:function(1)",
          "docComment": "/**\n * Generates a unique id in the global scope (this spans across duplicate copies of the same library.)\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getId(prefix?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "prefix",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "getId"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!getInitials:function(1)",
          "docComment": "/**\n * Get (up to 2 characters) initials based on display name of the persona.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getInitials(displayName: "
            },
            {
              "kind": "Content",
              "text": "string | undefined | null"
            },
            {
              "kind": "Content",
              "text": ", isRtl: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ", allowPhoneInitials?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "displayName",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "isRtl",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "allowPhoneInitials",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "name": "getInitials"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!getLanguage:function(1)",
          "docComment": "/**\n * Gets the language set for the page.\n *\n * @param persistenceType - Where to persist the value. Default is `sessionStorage` if available.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getLanguage(persistenceType?: "
            },
            {
              "kind": "Content",
              "text": "'localStorage' | 'sessionStorage' | 'none'"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "persistenceType",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "getLanguage"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!getLastFocusable:function(1)",
          "docComment": "/**\n * Gets the last focusable element.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getLastFocusable(rootElement: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": ", currentElement: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": ", includeElementsInFocusZones?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "rootElement",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "currentElement",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "includeElementsInFocusZones",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "name": "getLastFocusable"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!getLastTabbable:function(1)",
          "docComment": "/**\n * Gets the last tabbable element. (The difference between focusable and tabbable is that tabbable elements are focusable elements that also have tabIndex != -1.)\n *\n * @param rootElement - The parent element to search beneath.\n *\n * @param currentElement - The descendant of rootElement to start the search at. This element is the first one checked, and iteration continues in reverse. Typical use passes rootElement.lastChild.\n *\n * @param includeElementsInFocusZones - true if traversal should go into FocusZone descendants.\n *\n * @param checkNode - Include currentElement in search when true. Defaults to true.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getLastTabbable(rootElement: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": ", currentElement: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": ", includeElementsInFocusZones?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ", checkNode?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 11
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "rootElement",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "currentElement",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "includeElementsInFocusZones",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            },
            {
              "parameterName": "checkNode",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              }
            }
          ],
          "name": "getLastTabbable"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!getNativeElementProps:function(1)",
          "docComment": "/**\n * Given an element tagname and user props, filters the props to only allowed props for the given element type.\n *\n * @param tagName - Tag name (e.g. \"div\")\n *\n * @param props - Props object\n *\n * @param excludedPropNames - List of props to disallow\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getNativeElementProps<TAttributes extends "
            },
            {
              "kind": "Reference",
              "text": "React.HTMLAttributes",
              "canonicalReference": "@types/react!~React.HTMLAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": ">(tagName: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", props: "
            },
            {
              "kind": "Content",
              "text": "{}"
            },
            {
              "kind": "Content",
              "text": ", excludedPropNames?: "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "TAttributes"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 10,
            "endIndex": 11
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "tagName",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            },
            {
              "parameterName": "props",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              }
            },
            {
              "parameterName": "excludedPropNames",
              "parameterTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "TAttributes",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "getNativeElementProps"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!getNativeProps:function(1)",
          "docComment": "/**\n * Gets native supported props for an html element provided the allowance set. Use one of the property sets defined (divProperties, buttonPropertes, etc) to filter out supported properties from a given props set. Note that all data- and aria- prefixed attributes will be allowed. NOTE: getNativeProps should always be applied first when adding props to a react component. The non-native props should be applied second. This will prevent getNativeProps from overriding your custom props. For example, if props passed to getNativeProps has an onClick function and getNativeProps is added to the component after an onClick function is added, then the getNativeProps onClick will override it.\n *\n * @param props - The unfiltered input props\n *\n * @param allowedPropsNames - The array or record of allowed prop names.\n *\n * @returns The filtered props\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getNativeProps<T extends "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, any>"
            },
            {
              "kind": "Content",
              "text": ">(props: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, any>"
            },
            {
              "kind": "Content",
              "text": ", allowedPropNames: "
            },
            {
              "kind": "Content",
              "text": "string[] | "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, number>"
            },
            {
              "kind": "Content",
              "text": ", excludedPropNames?: "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 13,
            "endIndex": 14
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "props",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              }
            },
            {
              "parameterName": "allowedPropNames",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 10
              }
            },
            {
              "parameterName": "excludedPropNames",
              "parameterTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "getNativeProps"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!getNextElement:function(1)",
          "docComment": "/**\n * Traverse to find the next focusable element. If tabbable is true, the element must have tabIndex != -1.\n *\n * @param checkNode - Include currentElement in search when true.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getNextElement(rootElement: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": ", currentElement: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": ", checkNode?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ", suppressParentTraversal?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ", suppressChildTraversal?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ", includeElementsInFocusZones?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ", allowFocusRoot?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ", tabbable?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 18,
            "endIndex": 20
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "rootElement",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "currentElement",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              }
            },
            {
              "parameterName": "checkNode",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              }
            },
            {
              "parameterName": "suppressParentTraversal",
              "parameterTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              }
            },
            {
              "parameterName": "suppressChildTraversal",
              "parameterTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              }
            },
            {
              "parameterName": "includeElementsInFocusZones",
              "parameterTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              }
            },
            {
              "parameterName": "allowFocusRoot",
              "parameterTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 15
              }
            },
            {
              "parameterName": "tabbable",
              "parameterTypeTokenRange": {
                "startIndex": 16,
                "endIndex": 17
              }
            }
          ],
          "name": "getNextElement"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!getPreviousElement:function(1)",
          "docComment": "/**\n * Traverse to find the previous element. If tabbable is true, the element must have tabIndex != -1.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getPreviousElement(rootElement: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": ", currentElement: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": ", checkNode?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ", suppressParentTraversal?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ", traverseChildren?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ", includeElementsInFocusZones?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ", allowFocusRoot?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ", tabbable?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 18,
            "endIndex": 20
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "rootElement",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "currentElement",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              }
            },
            {
              "parameterName": "checkNode",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              }
            },
            {
              "parameterName": "suppressParentTraversal",
              "parameterTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              }
            },
            {
              "parameterName": "traverseChildren",
              "parameterTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              }
            },
            {
              "parameterName": "includeElementsInFocusZones",
              "parameterTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              }
            },
            {
              "parameterName": "allowFocusRoot",
              "parameterTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 15
              }
            },
            {
              "parameterName": "tabbable",
              "parameterTypeTokenRange": {
                "startIndex": 16,
                "endIndex": 17
              }
            }
          ],
          "name": "getPreviousElement"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!getPropsWithDefaults:function(1)",
          "docComment": "/**\n * Function to apply default values to a component props object. This function is intended for function components, to maintain parity with the `defaultProps` feature of class components. It accounts for properties that are specified, but undefined.\n *\n * @param defaultProps - An object with default values for various properties\n *\n * @param propsWithoutDefaults - The props object passed into the component\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getPropsWithDefaults<TProps extends "
            },
            {
              "kind": "Content",
              "text": "{}"
            },
            {
              "kind": "Content",
              "text": ">(defaultProps: "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<TProps>"
            },
            {
              "kind": "Content",
              "text": ", propsWithoutDefaults: "
            },
            {
              "kind": "Content",
              "text": "TProps"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "TProps"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 8,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "defaultProps",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              }
            },
            {
              "parameterName": "propsWithoutDefaults",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "TProps",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "getPropsWithDefaults"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!getRect:function(1)",
          "docComment": "/**\n * Helper to get bounding client rect. Passing in window will get the window size.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getRect(element: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Window",
              "canonicalReference": "!Window:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IRectangle",
              "canonicalReference": "@fluentui/utilities!IRectangle:interface"
            },
            {
              "kind": "Content",
              "text": " | undefined"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "element",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            }
          ],
          "name": "getRect"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!getResourceUrl:function(1)",
          "docComment": "/**\n * Sets the current base url used for fetching images.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getResourceUrl(url: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "url",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "getResourceUrl"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!getRTL:function(1)",
          "docComment": "/**\n * Gets the rtl state of the page (returns true if in rtl.)\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getRTL(theme?: "
            },
            {
              "kind": "Content",
              "text": "{\n    rtl?: boolean;\n}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "theme",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "getRTL"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!getRTLSafeKeyCode:function(1)",
          "docComment": "/**\n * Returns the given key, but flips right/left arrows if necessary.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getRTLSafeKeyCode(key: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", theme?: "
            },
            {
              "kind": "Content",
              "text": "{\n    rtl?: boolean;\n}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "key",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "theme",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "getRTLSafeKeyCode"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!getScrollbarWidth:function(1)",
          "docComment": "/**\n * Calculates the width of a scrollbar for the browser/os.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getScrollbarWidth(): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "getScrollbarWidth"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!getWindow:function(1)",
          "docComment": "/**\n * Helper to get the window object. The helper will make sure to use a cached variable of \"window\", to avoid overhead and memory leaks in IE11. Note that in popup scenarios the window object won't match the \"global\" window object, and for these scenarios, you should pass in an element hosted within the popup.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getWindow(rootElement?: "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Window",
              "canonicalReference": "!Window:interface"
            },
            {
              "kind": "Content",
              "text": " | undefined"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "rootElement",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "name": "getWindow"
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluentui/utilities!GlobalSettings:class",
          "docComment": "/**\n * Global settings helper, which stores settings in the global (window) namespace. If window is not provided, it will store settings in module scope. Provides a way to observe changes as well when their values change.\n *\n * {@docCategory GlobalSettings}\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class GlobalSettings "
            }
          ],
          "releaseTag": "Public",
          "name": "GlobalSettings",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!GlobalSettings.addChangeListener:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static addChangeListener(cb: "
                },
                {
                  "kind": "Reference",
                  "text": "IChangeEventCallback",
                  "canonicalReference": "@fluentui/utilities!IChangeEventCallback:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "cb",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "addChangeListener"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!GlobalSettings.getValue:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static getValue<T>(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", defaultValue?: "
                },
                {
                  "kind": "Content",
                  "text": "T | (() => T)"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "defaultValue",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "getValue"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!GlobalSettings.removeChangeListener:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static removeChangeListener(cb: "
                },
                {
                  "kind": "Reference",
                  "text": "IChangeEventCallback",
                  "canonicalReference": "@fluentui/utilities!IChangeEventCallback:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "cb",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "removeChangeListener"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!GlobalSettings.setValue:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static setValue<T>(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", value: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "setValue"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!hasHorizontalOverflow:function(1)",
          "docComment": "/**\n * Detects whether an element's content has horizontal overflow\n *\n * @param element - Element to check for overflow\n *\n * @returns True if element's content overflows\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function hasHorizontalOverflow(element: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "element",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "hasHorizontalOverflow"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!hasOverflow:function(1)",
          "docComment": "/**\n * Detects whether an element's content has overflow in any direction\n *\n * @param element - Element to check for overflow\n *\n * @returns True if element's content overflows\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function hasOverflow(element: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "element",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "hasOverflow"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!hasVerticalOverflow:function(1)",
          "docComment": "/**\n * Detects whether an element's content has vertical overflow\n *\n * @param element - Element to check for overflow\n *\n * @returns True if element's content overflows\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function hasVerticalOverflow(element: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "element",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "hasVerticalOverflow"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!hoistMethods:function(1)",
          "docComment": "/**\n * Allows you to hoist methods, except those in an exclusion set from a source object into a destination object.\n *\n * @param destination - The instance of the object to hoist the methods onto.\n *\n * @param source - The instance of the object where the methods are hoisted from.\n *\n * @param exclusions - (Optional) What methods to exclude from being hoisted.\n *\n * @returns An array of names of methods that were hoisted.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function hoistMethods(destination: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", source: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", exclusions?: "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "destination",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "source",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "exclusions",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "name": "hoistMethods"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!hoistStatics:function(1)",
          "docComment": "/**\n * Allows you to hoist static functions in components. Created for the purpose of fixing broken static functions in classes that utilize decorators.\n *\n * @param source - The object where the methods are hoisted from.\n *\n * @param dest - The object to hoist the methods onto.\n *\n * @returns The dest object with methods added\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function hoistStatics<TSource extends "
            },
            {
              "kind": "Reference",
              "text": "Object",
              "canonicalReference": "!Object:interface"
            },
            {
              "kind": "Content",
              "text": ", TDest>(source: "
            },
            {
              "kind": "Content",
              "text": "TSource"
            },
            {
              "kind": "Content",
              "text": ", dest: "
            },
            {
              "kind": "Content",
              "text": "TDest"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "TDest"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "source",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "dest",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "TSource",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TDest",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "hoistStatics"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/utilities!htmlElementProperties:var",
          "docComment": "/**\n * An array of HTML element properties and events.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "htmlElementProperties: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, number>"
            }
          ],
          "releaseTag": "Public",
          "name": "htmlElementProperties",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/utilities!IAsAsyncOptions:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IAsAsyncOptions<TProps> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TProps",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "IAsAsyncOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!IAsAsyncOptions#load:member",
              "docComment": "/**\n * Callback which returns a promise resolving an object which exports the component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "load: "
                },
                {
                  "kind": "Content",
                  "text": "() => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "React.ElementType",
                  "canonicalReference": "@types/react!~React.ElementType:type"
                },
                {
                  "kind": "Content",
                  "text": "<TProps>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "load",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!IAsAsyncOptions#onError:member",
              "docComment": "/**\n * Callback when async loading fails.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onError?: "
                },
                {
                  "kind": "Content",
                  "text": "(error: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onError",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!IAsAsyncOptions#onLoad:member",
              "docComment": "/**\n * Callback executed when async loading is complete.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onLoad?: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onLoad",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/utilities!IBaseProps:interface",
          "docComment": "/**\n * BaseProps interface.\n *\n * {@docCategory IBaseProps}\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IBaseProps<T = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "IBaseProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!IBaseProps#componentRef:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentRef?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRefObject",
                  "canonicalReference": "@fluentui/utilities!IRefObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "componentRef",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluentui/utilities!ICancelable:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ICancelable<T extends "
            },
            {
              "kind": "Content",
              "text": "(...args: any[]) => any"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    flush: () => "
            },
            {
              "kind": "Reference",
              "text": "ReturnType",
              "canonicalReference": "!ReturnType:type"
            },
            {
              "kind": "Content",
              "text": "<T>;\n    cancel: () => void;\n    pending: () => boolean;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ICancelable",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 6
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/utilities!IChangeDescription:interface",
          "docComment": "/**\n * Change description used for change callbacks in GlobalSettings.\n *\n * {@docCategory IChangeDescription}\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IChangeDescription "
            }
          ],
          "releaseTag": "Public",
          "name": "IChangeDescription",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!IChangeDescription#key:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "key",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!IChangeDescription#oldValue:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "oldValue: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "oldValue",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!IChangeDescription#value:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "value: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/utilities!IChangeEventCallback:interface",
          "docComment": "/**\n * Change event callback.\n *\n * {@docCategory IChangeEventCallback}\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IChangeEventCallback "
            }
          ],
          "releaseTag": "Public",
          "name": "IChangeEventCallback",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!IChangeEventCallback#__id__:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "__id__?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "__id__",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "@fluentui/utilities!IChangeEventCallback:call(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(changeDescription?: "
                },
                {
                  "kind": "Reference",
                  "text": "IChangeDescription",
                  "canonicalReference": "@fluentui/utilities!IChangeDescription:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "changeDescription",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluentui/utilities!IClassNames:type",
          "docComment": "/**\n * @deprecated\n *\n * Use `IProcessedStyleSet` from `@fluentui/style-utilities` or `@fluentui/merge-styles` instead.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type IClassNames<T> = "
            },
            {
              "kind": "Content",
              "text": "{\n    [key in keyof T]: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "IClassNames",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/utilities!IClassNamesFunctionOptions:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IClassNamesFunctionOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "IClassNamesFunctionOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!IClassNamesFunctionOptions#cacheSize:member",
              "docComment": "/**\n * Size of the cache. It overwrites default cache size when defined.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cacheSize?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "cacheSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!IClassNamesFunctionOptions#disableCaching:member",
              "docComment": "/**\n * Disables class caching for scenarios where styleProp parts mutate frequently.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "disableCaching?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "disableCaching",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!IClassNamesFunctionOptions#useStaticStyles:member",
              "docComment": "/**\n * Set to true if component base styles are implemented in scss instead of css-in-js.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "useStaticStyles?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "useStaticStyles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluentui/utilities!IComponentAs:type",
          "docComment": "/**\n * Render function interface for providing overrideable render callbacks.\n *\n * {@docCategory IComponentAs}\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type IComponentAs<T> = "
            },
            {
              "kind": "Reference",
              "text": "React.ComponentType",
              "canonicalReference": "@types/react!~React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IComponentAsProps",
              "canonicalReference": "@fluentui/utilities!IComponentAsProps:type"
            },
            {
              "kind": "Content",
              "text": "<T>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "IComponentAs",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluentui/utilities!IComponentAsProps:type",
          "docComment": "/**\n * Properties used by render function interface for providing overrideable render callbacks.\n *\n * {@docCategory IComponentAsProps}\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type IComponentAsProps<T> = "
            },
            {
              "kind": "Content",
              "text": "T & {\n    defaultRender?: "
            },
            {
              "kind": "Reference",
              "text": "React.ComponentType",
              "canonicalReference": "@types/react!~React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<T>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "IComponentAsProps",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/utilities!ICustomizableProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ICustomizableProps "
            }
          ],
          "releaseTag": "Public",
          "name": "ICustomizableProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!ICustomizableProps#fields:member",
              "docComment": "/**\n * List of fields which can be customized.\n *\n * @defaultvalue\n *\n * [ 'theme', 'styles' ]\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fields?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "fields",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!ICustomizableProps#scope:member",
              "docComment": "/**\n * Name of scope, which can be targeted using the Customizer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scope: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "scope",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/utilities!ICustomizations:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ICustomizations "
            }
          ],
          "releaseTag": "Public",
          "name": "ICustomizations",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!ICustomizations#inCustomizerContext:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inCustomizerContext?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "inCustomizerContext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!ICustomizations#scopedSettings:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scopedSettings: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "ISettings",
                  "canonicalReference": "@fluentui/utilities!ISettings:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "scopedSettings",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!ICustomizations#settings:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "settings: "
                },
                {
                  "kind": "Reference",
                  "text": "ISettings",
                  "canonicalReference": "@fluentui/utilities!ISettings:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "settings",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/utilities!ICustomizerContext:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ICustomizerContext "
            }
          ],
          "releaseTag": "Public",
          "name": "ICustomizerContext",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!ICustomizerContext#customizations:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "customizations: "
                },
                {
                  "kind": "Reference",
                  "text": "ICustomizations",
                  "canonicalReference": "@fluentui/utilities!ICustomizations:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "customizations",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluentui/utilities!ICustomizerProps:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ICustomizerProps = "
            },
            {
              "kind": "Reference",
              "text": "IBaseProps",
              "canonicalReference": "@fluentui/utilities!IBaseProps:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    settings: "
            },
            {
              "kind": "Reference",
              "text": "ISettings",
              "canonicalReference": "@fluentui/utilities!ISettings:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ISettingsFunction",
              "canonicalReference": "@fluentui/utilities!ISettingsFunction:type"
            },
            {
              "kind": "Content",
              "text": ";\n    scopedSettings: "
            },
            {
              "kind": "Reference",
              "text": "ISettings",
              "canonicalReference": "@fluentui/utilities!ISettings:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ISettingsFunction",
              "canonicalReference": "@fluentui/utilities!ISettingsFunction:type"
            },
            {
              "kind": "Content",
              "text": ";\n}> & {\n    contextTransform?: (context: "
            },
            {
              "kind": "Reference",
              "text": "Readonly",
              "canonicalReference": "!Readonly:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ICustomizerContext",
              "canonicalReference": "@fluentui/utilities!ICustomizerContext:interface"
            },
            {
              "kind": "Content",
              "text": ">) => "
            },
            {
              "kind": "Reference",
              "text": "ICustomizerContext",
              "canonicalReference": "@fluentui/utilities!ICustomizerContext:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ICustomizerProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 19
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/utilities!IDelayedRenderProps:interface",
          "docComment": "/**\n * DelayedRender component props.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDelayedRenderProps extends "
            },
            {
              "kind": "Reference",
              "text": "React.Props",
              "canonicalReference": "@types/react!~React.Props:interface"
            },
            {
              "kind": "Content",
              "text": "<{}> "
            }
          ],
          "releaseTag": "Public",
          "name": "IDelayedRenderProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!IDelayedRenderProps#delay:member",
              "docComment": "/**\n * Number of milliseconds to delay rendering children.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "delay?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "delay",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/utilities!IDisposable:interface",
          "docComment": "/**\n * Disposable interface.\n *\n * {@docCategory IDisposable}\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDisposable "
            }
          ],
          "releaseTag": "Public",
          "name": "IDisposable",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!IDisposable#dispose:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dispose: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dispose",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/utilities!IFitContentToBoundsOptions:interface",
          "docComment": "/**\n * Options for fitting content sizes into bounding sizes.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IFitContentToBoundsOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "IFitContentToBoundsOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!IFitContentToBoundsOptions#boundsSize:member",
              "docComment": "/**\n * The size of the bounds.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "boundsSize: "
                },
                {
                  "kind": "Reference",
                  "text": "ISize",
                  "canonicalReference": "@fluentui/utilities!ISize:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "boundsSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!IFitContentToBoundsOptions#contentSize:member",
              "docComment": "/**\n * The size of the content to fit to the bounds. The output will be proportional to this value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "contentSize: "
                },
                {
                  "kind": "Reference",
                  "text": "ISize",
                  "canonicalReference": "@fluentui/utilities!ISize:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "contentSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!IFitContentToBoundsOptions#maxScale:member",
              "docComment": "/**\n * An optional maximum scale factor to apply. The default is 1. Use Infinity for an unbounded resize.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxScale?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "maxScale",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!IFitContentToBoundsOptions#mode:member",
              "docComment": "/**\n * The fit mode to apply, either 'contain' or 'cover'.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mode: "
                },
                {
                  "kind": "Reference",
                  "text": "FitMode",
                  "canonicalReference": "@fluentui/utilities!FitMode:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "mode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/utilities!iframeProperties:var",
          "docComment": "/**\n * An array of IFRAME tag properties and events.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "iframeProperties: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, number>"
            }
          ],
          "releaseTag": "Public",
          "name": "iframeProperties",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/utilities!imageProperties:var",
          "docComment": "/**\n * @deprecated\n *\n * Use imgProperties for img elements.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "imageProperties: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, number>"
            }
          ],
          "releaseTag": "Public",
          "name": "imageProperties",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/utilities!imgProperties:var",
          "docComment": "/**\n * An array of IMAGE tag properties and events.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "imgProperties: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, number>"
            }
          ],
          "releaseTag": "Public",
          "name": "imgProperties",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!initializeComponentRef:function(1)",
          "docComment": "/**\n * Helper to manage componentRef resolution. Internally appends logic to lifetime methods to resolve componentRef to the passed in object.\n *\n * Usage: call initializeComponentRef(this) in the constructor,\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function initializeComponentRef<TProps extends "
            },
            {
              "kind": "Reference",
              "text": "IBaseProps",
              "canonicalReference": "@fluentui/utilities!IBaseProps:interface"
            },
            {
              "kind": "Content",
              "text": ", TState>(obj: "
            },
            {
              "kind": "Reference",
              "text": "React.Component",
              "canonicalReference": "@types/react!~React.Component:class"
            },
            {
              "kind": "Content",
              "text": "<TProps, TState>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "obj",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "TProps",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TState",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "initializeComponentRef"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!initializeFocusRects:function(1)",
          "docComment": "/**\n * Initializes the logic which:\n *\n * 1. Subscribes keydown and mousedown events. (It will only do it once per window, so it's safe to call this method multiple times.) 2. When the user presses directional keyboard keys, adds the 'ms-Fabric--isFocusVisible' classname to the document body, removes the 'ms-Fabric-isFocusHidden' classname. 3. When the user clicks a mouse button, adds the 'ms-Fabric-isFocusHidden' classname to the document body, removes the 'ms-Fabric--isFocusVisible' classname.\n *\n * This logic allows components on the page to conditionally render focus treatments based on the existence of global classnames, which simplifies logic overall.\n *\n * @deprecated\n *\n * Use useFocusRects hook or FocusRects component instead.\n *\n * @param window - the window used to add the event listeners\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function initializeFocusRects(window?: "
            },
            {
              "kind": "Reference",
              "text": "Window",
              "canonicalReference": "!Window:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "window",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "initializeFocusRects"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/utilities!inputProperties:var",
          "docComment": "/**\n * An array of INPUT tag properties and events.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "inputProperties: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, number>"
            }
          ],
          "releaseTag": "Public",
          "name": "inputProperties",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/utilities!IObjectWithKey:interface",
          "docComment": "/**\n * {@docCategory Selection}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IObjectWithKey "
            }
          ],
          "releaseTag": "Public",
          "name": "IObjectWithKey",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!IObjectWithKey#key:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "key?: "
                },
                {
                  "kind": "Content",
                  "text": "string | number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "key",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/utilities!IPoint:interface",
          "docComment": "/**\n * Point interface.\n *\n * @deprecated\n *\n * Use `Point` instead. {@docCategory Point}\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IPoint extends "
            },
            {
              "kind": "Reference",
              "text": "Point",
              "canonicalReference": "@fluentui/utilities!Point:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IPoint",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/utilities!IPropsWithStyles:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IPropsWithStyles<TStyleProps, TStyleSet extends "
            },
            {
              "kind": "Reference",
              "text": "IStyleSet",
              "canonicalReference": "@fluentui/merge-styles!IStyleSet:type"
            },
            {
              "kind": "Content",
              "text": "<TStyleSet>"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TStyleProps",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TStyleSet",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "IPropsWithStyles",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!IPropsWithStyles#styles:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "styles?: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyleFunctionOrObject",
                  "canonicalReference": "@fluentui/merge-styles!IStyleFunctionOrObject:type"
                },
                {
                  "kind": "Content",
                  "text": "<TStyleProps, TStyleSet>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "styles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/utilities!IRectangle:interface",
          "docComment": "/**\n * Rectangle interface.\n *\n * {@docCategory IRectangle}\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IRectangle "
            }
          ],
          "releaseTag": "Public",
          "name": "IRectangle",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!IRectangle#bottom:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bottom?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "bottom",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!IRectangle#height:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "height: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "height",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!IRectangle#left:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "left: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "left",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!IRectangle#right:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "right?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "right",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!IRectangle#top:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "top: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "top",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!IRectangle#width:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "width: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "width",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluentui/utilities!IRefObject:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type IRefObject<T> = "
            },
            {
              "kind": "Reference",
              "text": "React.RefObject",
              "canonicalReference": "@types/react!~React.RefObject:interface"
            },
            {
              "kind": "Content",
              "text": "<T> | "
            },
            {
              "kind": "Reference",
              "text": "RefObject",
              "canonicalReference": "@fluentui/utilities!RefObject:type"
            },
            {
              "kind": "Content",
              "text": "<T> | ((ref: T | null) => void)"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "IRefObject",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/utilities!IRenderComponent:interface",
          "docComment": "/**\n * An interface representing a component that will not output any DOM, will just render its children and pass through items to modify the children.\n *\n * {@docCategory IRenderComponent}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IRenderComponent<TProps> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TProps",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "IRenderComponent",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!IRenderComponent#children:member",
              "docComment": "/**\n * JSX.Element to return in this component's render() function.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "children: "
                },
                {
                  "kind": "Content",
                  "text": "(props: TProps) => "
                },
                {
                  "kind": "Reference",
                  "text": "JSX.Element",
                  "canonicalReference": "@types/react!~__global.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "children",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/utilities!IRenderFunction:interface",
          "docComment": "/**\n * Render function interface for providing overrideable render callbacks.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IRenderFunction<P> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "P",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "IRenderFunction",
          "members": [
            {
              "kind": "CallSignature",
              "canonicalReference": "@fluentui/utilities!IRenderFunction:call(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(props?: "
                },
                {
                  "kind": "Content",
                  "text": "P"
                },
                {
                  "kind": "Content",
                  "text": ", defaultRender?: "
                },
                {
                  "kind": "Content",
                  "text": "(props?: P) => "
                },
                {
                  "kind": "Reference",
                  "text": "JSX.Element",
                  "canonicalReference": "@types/react!~__global.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "JSX.Element",
                  "canonicalReference": "@types/react!~__global.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "defaultRender",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  }
                }
              ]
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!isControlled:function(1)",
          "docComment": "/**\n * Determines whether a component is controlled.\n *\n * @param props - Component props\n *\n * @param valueProp - Prop containing the controlled value\n *\n * @returns true if controlled, false if uncontrolled\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isControlled<P>(props: "
            },
            {
              "kind": "Content",
              "text": "P"
            },
            {
              "kind": "Content",
              "text": ", valueProp: "
            },
            {
              "kind": "Content",
              "text": "keyof P"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "props",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "valueProp",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "P",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "isControlled"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!isDirectionalKeyCode:function(1)",
          "docComment": "/**\n * Returns true if the keycode is a directional keyboard key.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isDirectionalKeyCode(which: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "which",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "isDirectionalKeyCode"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/utilities!ISelection:interface",
          "docComment": "/**\n * {@docCategory Selection}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ISelection<TItem = "
            },
            {
              "kind": "Reference",
              "text": "IObjectWithKey",
              "canonicalReference": "@fluentui/utilities!IObjectWithKey:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TItem",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "ISelection",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!ISelection#canSelectItem:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "canSelectItem: "
                },
                {
                  "kind": "Content",
                  "text": "(item: TItem, index?: number) => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "canSelectItem",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!ISelection#count:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "count: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "count",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluentui/utilities!ISelection#getItems:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getItems(): "
                },
                {
                  "kind": "Content",
                  "text": "TItem[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getItems"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluentui/utilities!ISelection#getSelectedCount:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSelectedCount(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getSelectedCount"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluentui/utilities!ISelection#getSelectedIndices:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSelectedIndices(): "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getSelectedIndices"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluentui/utilities!ISelection#getSelection:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSelection(): "
                },
                {
                  "kind": "Content",
                  "text": "TItem[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getSelection"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluentui/utilities!ISelection#isAllSelected:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isAllSelected(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "isAllSelected"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluentui/utilities!ISelection#isIndexSelected:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isIndexSelected(index: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "index",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "isIndexSelected"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluentui/utilities!ISelection#isKeySelected:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isKeySelected(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "isKeySelected"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluentui/utilities!ISelection#isModal:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isModal?(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "isModal"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluentui/utilities!ISelection#isRangeSelected:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isRangeSelected(fromIndex: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", count: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fromIndex",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "count",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "isRangeSelected"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!ISelection#mode:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mode: "
                },
                {
                  "kind": "Reference",
                  "text": "SelectionMode",
                  "canonicalReference": "@fluentui/utilities!SelectionMode:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "mode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluentui/utilities!ISelection#selectToIndex:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectToIndex(index: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", clearSelection?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "index",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "clearSelection",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "selectToIndex"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluentui/utilities!ISelection#selectToKey:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectToKey(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", clearSelection?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "clearSelection",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "selectToKey"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluentui/utilities!ISelection#setAllSelected:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setAllSelected(isAllSelected: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "isAllSelected",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "setAllSelected"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluentui/utilities!ISelection#setChangeEvents:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setChangeEvents(isEnabled: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", suppressChange?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "isEnabled",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "suppressChange",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "setChangeEvents"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluentui/utilities!ISelection#setIndexSelected:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setIndexSelected(index: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", isSelected: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", shouldAnchor: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "index",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "isSelected",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "shouldAnchor",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "setIndexSelected"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluentui/utilities!ISelection#setItems:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setItems(items: "
                },
                {
                  "kind": "Content",
                  "text": "TItem[]"
                },
                {
                  "kind": "Content",
                  "text": ", shouldClear: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "items",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "shouldClear",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "setItems"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluentui/utilities!ISelection#setKeySelected:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setKeySelected(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", isSelected: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", shouldAnchor: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "isSelected",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "shouldAnchor",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "setKeySelected"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluentui/utilities!ISelection#setModal:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setModal?(isModal: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "isModal",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "setModal"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluentui/utilities!ISelection#toggleAllSelected:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toggleAllSelected(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "toggleAllSelected"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluentui/utilities!ISelection#toggleIndexSelected:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toggleIndexSelected(index: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "index",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "toggleIndexSelected"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluentui/utilities!ISelection#toggleKeySelected:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toggleKeySelected(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "toggleKeySelected"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@fluentui/utilities!ISelection#toggleRangeSelected:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toggleRangeSelected(fromIndex: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", count: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fromIndex",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "count",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "toggleRangeSelected"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/utilities!ISelectionOptions:interface",
          "docComment": "/**\n * {@docCategory Selection}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ISelectionOptions<TItem = "
            },
            {
              "kind": "Reference",
              "text": "IObjectWithKey",
              "canonicalReference": "@fluentui/utilities!IObjectWithKey:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TItem",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "ISelectionOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!ISelectionOptions#canSelectItem:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "canSelectItem?: "
                },
                {
                  "kind": "Content",
                  "text": "(item: TItem, index?: number) => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "canSelectItem",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!ISelectionOptions#getKey:member",
              "docComment": "/**\n * Custom logic to generate item keys. Required if `TItem` does not have a `key` property.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getKey?: "
                },
                {
                  "kind": "Content",
                  "text": "(item: TItem, index?: number) => string | number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "getKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!ISelectionOptions#items:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "items?: "
                },
                {
                  "kind": "Content",
                  "text": "TItem[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "items",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!ISelectionOptions#onSelectionChanged:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onSelectionChanged?: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onSelectionChanged",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!ISelectionOptions#selectionMode:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectionMode?: "
                },
                {
                  "kind": "Reference",
                  "text": "SelectionMode",
                  "canonicalReference": "@fluentui/utilities!SelectionMode:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "selectionMode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluentui/utilities!ISelectionOptionsWithRequiredGetKey:type",
          "docComment": "/**\n * Selection options with required `getKey` property. {@docCategory Selection}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ISelectionOptionsWithRequiredGetKey<TItem> = "
            },
            {
              "kind": "Reference",
              "text": "ISelectionOptions",
              "canonicalReference": "@fluentui/utilities!ISelectionOptions:interface"
            },
            {
              "kind": "Content",
              "text": "<TItem> & "
            },
            {
              "kind": "Reference",
              "text": "Required",
              "canonicalReference": "!Required:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ISelectionOptions",
              "canonicalReference": "@fluentui/utilities!ISelectionOptions:interface"
            },
            {
              "kind": "Content",
              "text": "<TItem>, 'getKey'>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ISelectionOptionsWithRequiredGetKey",
          "typeParameters": [
            {
              "typeParameterName": "TItem",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!isElementFocusSubZone:function(1)",
          "docComment": "/**\n * Determines if a given element is a focus sub zone.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isElementFocusSubZone(element?: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "element",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "isElementFocusSubZone"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!isElementFocusZone:function(1)",
          "docComment": "/**\n * Determines if a given element is a focus zone.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isElementFocusZone(element?: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "element",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "isElementFocusZone"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!isElementTabbable:function(1)",
          "docComment": "/**\n * Determines if an element can receive focus programmatically or via a mouse click. If checkTabIndex is true, additionally checks to ensure the element can be focused with the tab key, meaning tabIndex != -1.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isElementTabbable(element: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": ", checkTabIndex?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "element",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "checkTabIndex",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "isElementTabbable"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!isElementVisible:function(1)",
          "docComment": "/**\n * Determines if an element is visible.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isElementVisible(element: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": " | undefined | null"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "element",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "name": "isElementVisible"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluentui/utilities!ISettings:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ISettings = "
            },
            {
              "kind": "Content",
              "text": "{\n    [key: string]: any;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ISettings",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluentui/utilities!ISettingsFunction:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ISettingsFunction = "
            },
            {
              "kind": "Content",
              "text": "(settings: "
            },
            {
              "kind": "Reference",
              "text": "ISettings",
              "canonicalReference": "@fluentui/utilities!ISettings:type"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "ISettings",
              "canonicalReference": "@fluentui/utilities!ISettings:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ISettingsFunction",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluentui/utilities!ISettingsMap:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ISettingsMap<T> = "
            },
            {
              "kind": "Content",
              "text": "{\n    [P in keyof T]?: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ISettingsMap",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/utilities!IsFocusVisibleClassName:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "IsFocusVisibleClassName = \"ms-Fabric--isFocusVisible\""
            }
          ],
          "releaseTag": "Public",
          "name": "IsFocusVisibleClassName",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/utilities!isIE11:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isIE11: "
            },
            {
              "kind": "Content",
              "text": "() => boolean"
            }
          ],
          "releaseTag": "Public",
          "name": "isIE11",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/utilities!isIOS:var",
          "docComment": "/**\n * Returns true if and only if the user is on a iOS device. Used to determine whether iOS-specific behavior should be applied.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isIOS: "
            },
            {
              "kind": "Content",
              "text": "() => boolean"
            }
          ],
          "releaseTag": "Public",
          "name": "isIOS",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/utilities!ISize:interface",
          "docComment": "/**\n * {@docCategory ISize}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ISize "
            }
          ],
          "releaseTag": "Public",
          "name": "ISize",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!ISize#height:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "height: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "height",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!ISize#width:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "width: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "width",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!isMac:function(1)",
          "docComment": "/**\n * Returns true if the user is on a Mac. Caches the result value.\n *\n * @param reset - Reset the cached result value (mainly for testing).\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isMac(reset?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "reset",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "isMac"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/utilities!IWarnControlledUsageParams:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IWarnControlledUsageParams<P> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "P",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "IWarnControlledUsageParams",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!IWarnControlledUsageParams#componentId:member",
              "docComment": "/**\n * ID of the component instance. Used to prevent showing warnings repeatedly.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "componentId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!IWarnControlledUsageParams#componentName:member",
              "docComment": "/**\n * Name of the component class.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "componentName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!IWarnControlledUsageParams#defaultValueProp:member",
              "docComment": "/**\n * Name of the prop for the uncontrolled initial value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "defaultValueProp: "
                },
                {
                  "kind": "Content",
                  "text": "keyof P"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "defaultValueProp",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!IWarnControlledUsageParams#oldProps:member",
              "docComment": "/**\n * Previous props to evaluate (undefined if called in the constructor).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "oldProps?: "
                },
                {
                  "kind": "Content",
                  "text": "P"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "oldProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!IWarnControlledUsageParams#onChangeProp:member",
              "docComment": "/**\n * Name of the change handler prop.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onChangeProp: "
                },
                {
                  "kind": "Content",
                  "text": "keyof P"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onChangeProp",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!IWarnControlledUsageParams#props:member",
              "docComment": "/**\n * Current props to evaluate.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "props: "
                },
                {
                  "kind": "Content",
                  "text": "P"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "props",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!IWarnControlledUsageParams#readOnlyProp:member",
              "docComment": "/**\n * Name of the read-only prop.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readOnlyProp?: "
                },
                {
                  "kind": "Content",
                  "text": "keyof P"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "readOnlyProp",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!IWarnControlledUsageParams#valueProp:member",
              "docComment": "/**\n * Name of the prop for the controlled value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "valueProp: "
                },
                {
                  "kind": "Content",
                  "text": "keyof P"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "valueProp",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluentui/utilities!KeyCodes:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type KeyCodes = "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "KeyCodes",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/utilities!KeyCodes:var",
          "docComment": "/**\n * Simulated enum for keycodes. These will get inlined by uglify when used much like an enum\n *\n * {@docCategory KeyCodes}\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "KeyCodes: "
            },
            {
              "kind": "Content",
              "text": "{\n    backspace: 8;\n    tab: 9;\n    enter: 13;\n    shift: 16;\n    ctrl: 17;\n    alt: 18;\n    pauseBreak: 19;\n    capslock: 20;\n    escape: 27;\n    space: 32;\n    pageUp: 33;\n    pageDown: 34;\n    end: 35;\n    home: 36;\n    left: 37;\n    up: 38;\n    right: 39;\n    down: 40;\n    insert: 45;\n    del: 46;\n    zero: 48;\n    one: 49;\n    two: 50;\n    three: 51;\n    four: 52;\n    five: 53;\n    six: 54;\n    seven: 55;\n    eight: 56;\n    nine: 57;\n    a: 65;\n    b: 66;\n    c: 67;\n    d: 68;\n    e: 69;\n    f: 70;\n    g: 71;\n    h: 72;\n    i: 73;\n    j: 74;\n    k: 75;\n    l: 76;\n    m: 77;\n    n: 78;\n    o: 79;\n    p: 80;\n    q: 81;\n    r: 82;\n    s: 83;\n    t: 84;\n    u: 85;\n    v: 86;\n    w: 87;\n    x: 88;\n    y: 89;\n    z: 90;\n    leftWindow: 91;\n    rightWindow: 92;\n    select: 93;\n    zero_numpad: 96;\n    one_numpad: 97;\n    two_numpad: 98;\n    three_numpad: 99;\n    four_numpad: 100;\n    five_numpad: 101;\n    six_numpad: 102;\n    seven_numpad: 103;\n    eight_numpad: 104;\n    nine_numpad: 105;\n    multiply: 106;\n    add: 107;\n    subtract: 109;\n    decimalPoint: 110;\n    divide: 111;\n    f1: 112;\n    f2: 113;\n    f3: 114;\n    f4: 115;\n    f5: 116;\n    f6: 117;\n    f7: 118;\n    f8: 119;\n    f9: 120;\n    f10: 121;\n    f11: 122;\n    f12: 123;\n    numlock: 144;\n    scrollLock: 145;\n    semicolon: 186;\n    equalSign: 187;\n    comma: 188;\n    dash: 189;\n    period: 190;\n    forwardSlash: 191;\n    graveAccent: 192;\n    openBracket: 219;\n    backSlash: 220;\n    closeBracket: 221;\n    singleQuote: 222;\n}"
            }
          ],
          "releaseTag": "Public",
          "name": "KeyCodes",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/utilities!labelProperties:var",
          "docComment": "/**\n * An array of LABEL tag properties and events.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "labelProperties: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, number>"
            }
          ],
          "releaseTag": "Public",
          "name": "labelProperties",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/utilities!liProperties:var",
          "docComment": "/**\n * An array of LI tag properties and events.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "liProperties: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, number>"
            }
          ],
          "releaseTag": "Public",
          "name": "liProperties",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!mapEnumByName:function(1)",
          "docComment": "/**\n * Takes an enum and iterates over each value of the enum (as a string), running the callback on each, returning a mapped array.\n *\n * @param theEnum - Enum to iterate over\n *\n * @param callback - The first parameter the name of the entry, and the second parameter is the value of that entry, which is the value you'd normally use when using the enum (usually a number).\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function mapEnumByName<T>(theEnum: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", callback: "
            },
            {
              "kind": "Content",
              "text": "(name?: string, value?: string | number) => T | undefined"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "(T | undefined)[] | undefined"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "theEnum",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "callback",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "mapEnumByName"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!memoize:function(1)",
          "docComment": "/**\n * Memoize decorator to be used on class methods. WARNING: the `this` reference will be inaccessible within a memoized method, given that a cached method's `this` would not be instance-specific.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function memoize<T extends "
            },
            {
              "kind": "Reference",
              "text": "Function",
              "canonicalReference": "!Function:interface"
            },
            {
              "kind": "Content",
              "text": ">(target: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", key: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", descriptor: "
            },
            {
              "kind": "Reference",
              "text": "TypedPropertyDescriptor",
              "canonicalReference": "!TypedPropertyDescriptor:interface"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "{\n    configurable: boolean;\n    get(): T;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 10,
            "endIndex": 11
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "target",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "key",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            },
            {
              "parameterName": "descriptor",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "memoize"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!memoizeFunction:function(1)",
          "docComment": "/**\n * Memoizes a function; when you pass in the same parameters multiple times, it returns a cached result. Be careful when passing in objects, you need to pass in the same INSTANCE for caching to work. Otherwise it will grow the cache unnecessarily. Also avoid using default values that evaluate functions; passing in undefined for a value and relying on a default function will execute it the first time, but will not re-evaluate subsequent times which may have been unexpected.\n *\n * By default, the cache will reset after 100 permutations, to avoid abuse cases where the function is unintendedly called with unique objects. Without a reset, the cache could grow infinitely, so we safeguard by resetting. To override this behavior, pass a value of 0 to the maxCacheSize parameter.\n *\n * @param cb - The function to memoize.\n *\n * @param maxCacheSize - Max results to cache. If the cache exceeds this value, it will reset on the next call.\n *\n * @param ignoreNullOrUndefinedResult - Flag to decide whether to cache callback result if it is undefined/null. If the flag is set to true, the callback result is recomputed every time till the callback result is not undefined/null for the first time, and then the non-undefined/null version gets cached.\n *\n * @returns A memoized version of the function.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function memoizeFunction<T extends "
            },
            {
              "kind": "Content",
              "text": "(...args: any[]) => RetType"
            },
            {
              "kind": "Content",
              "text": ", RetType>(cb: "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ", maxCacheSize?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", ignoreNullOrUndefinedResult?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "cb",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "maxCacheSize",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            },
            {
              "parameterName": "ignoreNullOrUndefinedResult",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "RetType",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "memoizeFunction"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!merge:function(1)",
          "docComment": "/**\n * Simple deep merge function. Takes all arguments and returns a deep copy of the objects merged together in the order provided. If an object creates a circular reference, it will assign the original reference.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function merge<T = "
            },
            {
              "kind": "Content",
              "text": "{}"
            },
            {
              "kind": "Content",
              "text": ">(target: "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ", ...args: "
            },
            {
              "kind": "Content",
              "text": "("
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<T> | null | undefined | false)[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 10,
            "endIndex": 11
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "target",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              }
            },
            {
              "parameterName": "args",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 9
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "merge"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!mergeAriaAttributeValues:function(1)",
          "docComment": "/**\n * ARIA helper to concatenate attributes, returning undefined if all attributes are undefined. (Empty strings are not a valid ARIA attribute value.)\n *\n * @param ariaAttributes - ARIA attributes to merge\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function mergeAriaAttributeValues(...ariaAttributes: "
            },
            {
              "kind": "Content",
              "text": "(string | undefined | false)[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string | undefined"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "ariaAttributes",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "mergeAriaAttributeValues"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!mergeCustomizations:function(1)",
          "docComment": "/**\n * Merge props and customizations giving priority to props over context. NOTE: This function will always perform multiple merge operations. Use with caution.\n *\n * @param props - New settings to merge in.\n *\n * @param parentContext - Context containing current settings.\n *\n * @returns Merged customizations.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function mergeCustomizations(props: "
            },
            {
              "kind": "Reference",
              "text": "ICustomizerProps",
              "canonicalReference": "@fluentui/utilities!ICustomizerProps:type"
            },
            {
              "kind": "Content",
              "text": ", parentContext: "
            },
            {
              "kind": "Reference",
              "text": "ICustomizerContext",
              "canonicalReference": "@fluentui/utilities!ICustomizerContext:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "ICustomizerContext",
              "canonicalReference": "@fluentui/utilities!ICustomizerContext:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "props",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "parentContext",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "mergeCustomizations"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!mergeScopedSettings:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function mergeScopedSettings(oldSettings?: "
            },
            {
              "kind": "Reference",
              "text": "ISettings",
              "canonicalReference": "@fluentui/utilities!ISettings:type"
            },
            {
              "kind": "Content",
              "text": ", newSettings?: "
            },
            {
              "kind": "Reference",
              "text": "ISettings",
              "canonicalReference": "@fluentui/utilities!ISettings:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ISettingsFunction",
              "canonicalReference": "@fluentui/utilities!ISettingsFunction:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "ISettings",
              "canonicalReference": "@fluentui/utilities!ISettings:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "oldSettings",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "newSettings",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 6
              }
            }
          ],
          "name": "mergeScopedSettings"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!mergeSettings:function(1)",
          "docComment": "/**\n * Merge new and old settings, giving priority to new settings. New settings is optional in which case oldSettings is returned as-is.\n *\n * @param oldSettings - Old settings to fall back to.\n *\n * @param newSettings - New settings that will be merged over oldSettings.\n *\n * @returns Merged settings.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function mergeSettings(oldSettings?: "
            },
            {
              "kind": "Reference",
              "text": "ISettings",
              "canonicalReference": "@fluentui/utilities!ISettings:type"
            },
            {
              "kind": "Content",
              "text": ", newSettings?: "
            },
            {
              "kind": "Reference",
              "text": "ISettings",
              "canonicalReference": "@fluentui/utilities!ISettings:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ISettingsFunction",
              "canonicalReference": "@fluentui/utilities!ISettingsFunction:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "ISettings",
              "canonicalReference": "@fluentui/utilities!ISettings:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "oldSettings",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "newSettings",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 6
              }
            }
          ],
          "name": "mergeSettings"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!modalize:function(1)",
          "docComment": "/**\n * Call this on a target element to make it modal to screen readers. Returns a function that undoes the changes it made.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function modalize(target: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "() => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "target",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "modalize"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!nullRender:function(1)",
          "docComment": "/**\n * Simple constant function for returning null, used to render empty templates in JSX.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function nullRender(): "
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "@types/react!~__global.JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "nullRender"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/utilities!olProperties:var",
          "docComment": "/**\n * An array of OL tag properties and events.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "olProperties: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, number>"
            }
          ],
          "releaseTag": "Public",
          "name": "olProperties",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!omit:function(1)",
          "docComment": "/**\n * Tiny helper to do the minimal amount of work in duplicating an object but omitting some props. This ends up faster than using object ...rest or reduce to filter.\n *\n * This behaves very much like filteredAssign, but does not merge many objects together, uses an exclusion object map, and avoids spreads all for optimal performance.\n *\n * See perf test for background: https://jsperf.com/omit-vs-rest-vs-reduce/1\n *\n * @param obj - The object to clone\n *\n * @param exclusions - The array of keys to exclude\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function omit<TObj extends "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, any>"
            },
            {
              "kind": "Content",
              "text": ">(obj: "
            },
            {
              "kind": "Content",
              "text": "TObj"
            },
            {
              "kind": "Content",
              "text": ", exclusions: "
            },
            {
              "kind": "Content",
              "text": "(keyof TObj)[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "TObj"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 8,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "obj",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            },
            {
              "parameterName": "exclusions",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "TObj",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "omit"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!on:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function on(element: "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Window",
              "canonicalReference": "!Window:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "!Document:interface"
            },
            {
              "kind": "Content",
              "text": ", eventName: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", callback: "
            },
            {
              "kind": "Content",
              "text": "(ev: "
            },
            {
              "kind": "Reference",
              "text": "Event",
              "canonicalReference": "!Event:interface"
            },
            {
              "kind": "Content",
              "text": ") => void"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "() => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 15,
            "endIndex": 16
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "element",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "parameterName": "eventName",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              }
            },
            {
              "parameterName": "callback",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 12
              }
            },
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 14
              }
            }
          ],
          "name": "on"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/utilities!optionProperties:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "optionProperties: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, number>"
            }
          ],
          "releaseTag": "Public",
          "name": "optionProperties",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@fluentui/utilities!Point:interface",
          "docComment": "/**\n * Point interface.\n *\n * {@docCategory Point}\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Point "
            }
          ],
          "releaseTag": "Public",
          "name": "Point",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!Point#left:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "left?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "left",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!Point#top:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "top?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "top",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!Point#x:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `left` instead\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "x?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "x",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@fluentui/utilities!Point#y:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `top` instead\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "y?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "y",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!precisionRound:function(1)",
          "docComment": "/**\n * Rounds a number to a certain level of precision. Accepts negative precision.\n *\n * @param value - The value that is being rounded.\n *\n * @param precision - The number of decimal places to round the number to\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function precisionRound(value: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", precision: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", base?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "precision",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "base",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "name": "precisionRound"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!raiseClick:function(1)",
          "docComment": "/**\n * Raises a click event.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function raiseClick(target: "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "target",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "raiseClick"
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluentui/utilities!Rectangle:class",
          "docComment": "/**\n * Rectangle helper class.\n *\n * {@docCategory Rectangle}\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Rectangle "
            }
          ],
          "releaseTag": "Public",
          "name": "Rectangle",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@fluentui/utilities!Rectangle:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Rectangle` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(left?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", right?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", top?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", bottom?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "left",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "right",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "top",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "bottom",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluentui/utilities!Rectangle#bottom:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bottom: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "bottom",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Rectangle#equals:member(1)",
              "docComment": "/**\n * Tests if another rect is approximately equal to this rect (within 4 decimal places.)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "equals(rect: "
                },
                {
                  "kind": "Reference",
                  "text": "Rectangle",
                  "canonicalReference": "@fluentui/utilities!Rectangle:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "rect",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "equals"
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluentui/utilities!Rectangle#height:member",
              "docComment": "/**\n * Calculated automatically by subtracting the bottom from top.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get height(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "height",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluentui/utilities!Rectangle#left:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "left: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "left",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluentui/utilities!Rectangle#right:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "right: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "right",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluentui/utilities!Rectangle#top:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "top: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "top",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluentui/utilities!Rectangle#width:member",
              "docComment": "/**\n * Calculated automatically by subtracting the right from left\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get width(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "width",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluentui/utilities!RefObject:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type RefObject<T> = "
            },
            {
              "kind": "Content",
              "text": "{\n    (component: T | null): void;\n    current: T | null;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "RefObject",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!removeIndex:function(1)",
          "docComment": "/**\n * Given an array, it returns a new array that does not contain the item at the given index.\n *\n * @param array - The array to operate on\n *\n * @param index - The index of the element to remove\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function removeIndex<T>(array: "
            },
            {
              "kind": "Content",
              "text": "T[]"
            },
            {
              "kind": "Content",
              "text": ", index: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "array",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "index",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "removeIndex"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!replaceElement:function(1)",
          "docComment": "/**\n * Given an array, this function returns a new array where the element at a given index has been replaced.\n *\n * @param array - The array to operate on\n *\n * @param newElement - The element that will be placed in the new array\n *\n * @param index - The index of the element that should be replaced\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function replaceElement<T>(array: "
            },
            {
              "kind": "Content",
              "text": "T[]"
            },
            {
              "kind": "Content",
              "text": ", newElement: "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ", index: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "array",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "newElement",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "index",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "replaceElement"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!resetControlledWarnings:function(1)",
          "docComment": "/**\n * Reset controlled usage warnings for testing purposes.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function resetControlledWarnings(): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "resetControlledWarnings"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!resetIds:function(1)",
          "docComment": "/**\n * Resets id counter to an (optional) number.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function resetIds(counter?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "counter",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "resetIds"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!resetMemoizations:function(1)",
          "docComment": "/**\n * Reset memoizations.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function resetMemoizations(): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "resetMemoizations"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/utilities!safeRequestAnimationFrame:var",
          "docComment": "/**\n * Generates a function to be attached to a React component, which can be called as a replacement to RAF. In-flight async calls will be auto canceled if the component is unmounting before the async code is executed, preventing bugs where code accesses things within the component after being unmounted.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "safeRequestAnimationFrame: "
            },
            {
              "kind": "Content",
              "text": "(component: "
            },
            {
              "kind": "Reference",
              "text": "React.Component",
              "canonicalReference": "@types/react!~React.Component:class"
            },
            {
              "kind": "Content",
              "text": "<{}, {}, any>) => (cb: "
            },
            {
              "kind": "Reference",
              "text": "Function",
              "canonicalReference": "!Function:interface"
            },
            {
              "kind": "Content",
              "text": ") => void"
            }
          ],
          "releaseTag": "Public",
          "name": "safeRequestAnimationFrame",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/utilities!safeSetTimeout:var",
          "docComment": "/**\n * Generates a function to be attached to a React component, which can be called as a replacement to setTimeout. In-flight async calls will be auto canceled if the component is unmounting before the async code is executed, preventing bugs where code accesses things within the component after being unmounted.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "safeSetTimeout: "
            },
            {
              "kind": "Content",
              "text": "(component: "
            },
            {
              "kind": "Reference",
              "text": "React.Component",
              "canonicalReference": "@types/react!~React.Component:class"
            },
            {
              "kind": "Content",
              "text": "<{}, {}, any>) => (cb: "
            },
            {
              "kind": "Reference",
              "text": "Function",
              "canonicalReference": "!Function:interface"
            },
            {
              "kind": "Content",
              "text": ", duration: number) => void"
            }
          ],
          "releaseTag": "Public",
          "name": "safeSetTimeout",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/utilities!SELECTION_CHANGE:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "SELECTION_CHANGE = \"change\""
            }
          ],
          "releaseTag": "Public",
          "name": "SELECTION_CHANGE",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@fluentui/utilities!Selection:class",
          "docComment": "/**\n * {@docCategory Selection}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Selection<TItem = "
            },
            {
              "kind": "Reference",
              "text": "IObjectWithKey",
              "canonicalReference": "@fluentui/utilities!IObjectWithKey:interface"
            },
            {
              "kind": "Content",
              "text": "> implements "
            },
            {
              "kind": "Reference",
              "text": "ISelection",
              "canonicalReference": "@fluentui/utilities!ISelection:interface"
            },
            {
              "kind": "Content",
              "text": "<TItem> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TItem",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "Selection",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@fluentui/utilities!Selection:constructor(1)",
              "docComment": "/**\n * Create a new Selection. If `TItem` does not have a `key` property, you must provide an options object with a `getKey` implementation. Providing options is optional otherwise. (At most one `options` object is accepted.)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(...options: "
                },
                {
                  "kind": "Content",
                  "text": "TItem extends "
                },
                {
                  "kind": "Reference",
                  "text": "IObjectWithKey",
                  "canonicalReference": "@fluentui/utilities!IObjectWithKey:interface"
                },
                {
                  "kind": "Content",
                  "text": " ? [] | ["
                },
                {
                  "kind": "Reference",
                  "text": "ISelectionOptions",
                  "canonicalReference": "@fluentui/utilities!ISelectionOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TItem>] : ["
                },
                {
                  "kind": "Reference",
                  "text": "ISelectionOptionsWithRequiredGetKey",
                  "canonicalReference": "@fluentui/utilities!ISelectionOptionsWithRequiredGetKey:type"
                },
                {
                  "kind": "Content",
                  "text": "<TItem>]"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 8
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Selection#canSelectItem:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "canSelectItem(item: "
                },
                {
                  "kind": "Content",
                  "text": "TItem"
                },
                {
                  "kind": "Content",
                  "text": ", index?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "item",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "index",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "canSelectItem"
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluentui/utilities!Selection#count:member",
              "docComment": "/**\n * Number of items selected. Do not modify.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "count: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "count",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Selection#getItems:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getItems(): "
                },
                {
                  "kind": "Content",
                  "text": "TItem[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getItems"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Selection#getKey:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getKey(item: "
                },
                {
                  "kind": "Content",
                  "text": "TItem"
                },
                {
                  "kind": "Content",
                  "text": ", index?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "item",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "index",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getKey"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Selection#getSelectedCount:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSelectedCount(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getSelectedCount"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Selection#getSelectedIndices:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSelectedIndices(): "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getSelectedIndices"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Selection#getSelection:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSelection(): "
                },
                {
                  "kind": "Content",
                  "text": "TItem[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getSelection"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Selection#isAllSelected:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isAllSelected(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "isAllSelected"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Selection#isIndexSelected:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isIndexSelected(index: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "index",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "isIndexSelected"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Selection#isKeySelected:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isKeySelected(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "isKeySelected"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Selection#isModal:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isModal(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "isModal"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Selection#isRangeSelected:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isRangeSelected(fromIndex: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", count: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fromIndex",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "count",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "isRangeSelected"
            },
            {
              "kind": "Property",
              "canonicalReference": "@fluentui/utilities!Selection#mode:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly mode: "
                },
                {
                  "kind": "Reference",
                  "text": "SelectionMode",
                  "canonicalReference": "@fluentui/utilities!SelectionMode:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "mode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Selection#selectToIndex:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectToIndex(index: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", clearSelection?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "index",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "clearSelection",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "selectToIndex"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Selection#selectToKey:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectToKey(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", clearSelection?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "clearSelection",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "selectToKey"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Selection#setAllSelected:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setAllSelected(isAllSelected: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "isAllSelected",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "setAllSelected"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Selection#setChangeEvents:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setChangeEvents(isEnabled: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", suppressChange?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "isEnabled",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "suppressChange",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "setChangeEvents"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Selection#setIndexSelected:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setIndexSelected(index: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", isSelected: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", shouldAnchor: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "index",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "isSelected",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "shouldAnchor",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "setIndexSelected"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Selection#setItems:member(1)",
              "docComment": "/**\n * Selection needs the items, call this method to set them. If the set of items is the same, this will re-evaluate selection and index maps. Otherwise, shouldClear should be set to true, so that selection is cleared.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setItems(items: "
                },
                {
                  "kind": "Content",
                  "text": "TItem[]"
                },
                {
                  "kind": "Content",
                  "text": ", shouldClear?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "items",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "shouldClear",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "setItems"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Selection#setKeySelected:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setKeySelected(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", isSelected: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", shouldAnchor: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "isSelected",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "shouldAnchor",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "setKeySelected"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Selection#setModal:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setModal(isModal: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "isModal",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "setModal"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Selection#toggleAllSelected:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toggleAllSelected(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "toggleAllSelected"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Selection#toggleIndexSelected:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toggleIndexSelected(index: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "index",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "toggleIndexSelected"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Selection#toggleKeySelected:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toggleKeySelected(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "toggleKeySelected"
            },
            {
              "kind": "Method",
              "canonicalReference": "@fluentui/utilities!Selection#toggleRangeSelected:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toggleRangeSelected(fromIndex: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", count: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fromIndex",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "count",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "toggleRangeSelected"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Enum",
          "canonicalReference": "@fluentui/utilities!SelectionDirection:enum",
          "docComment": "/**\n * {@docCategory Selection}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum SelectionDirection "
            }
          ],
          "releaseTag": "Public",
          "name": "SelectionDirection",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluentui/utilities!SelectionDirection.horizontal:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "horizontal = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "releaseTag": "Public",
              "name": "horizontal",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluentui/utilities!SelectionDirection.vertical:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "vertical = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "releaseTag": "Public",
              "name": "vertical",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Enum",
          "canonicalReference": "@fluentui/utilities!SelectionMode:enum",
          "docComment": "/**\n * {@docCategory Selection}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum SelectionMode "
            }
          ],
          "releaseTag": "Public",
          "name": "SelectionMode",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluentui/utilities!SelectionMode.multiple:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "multiple = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "releaseTag": "Public",
              "name": "multiple",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluentui/utilities!SelectionMode.none:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "none = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "releaseTag": "Public",
              "name": "none",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@fluentui/utilities!SelectionMode.single:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "single = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "releaseTag": "Public",
              "name": "single",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/utilities!selectProperties:var",
          "docComment": "/**\n * An array of SELECT tag properties and events.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "selectProperties: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, number>"
            }
          ],
          "releaseTag": "Public",
          "name": "selectProperties",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!setBaseUrl:function(1)",
          "docComment": "/**\n * Gets the current base url used for fetching images.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function setBaseUrl(baseUrl: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "baseUrl",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "setBaseUrl"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!setFocusVisibility:function(1)",
          "docComment": "/**\n * Sets the visibility of focus styling.\n *\n * By default, focus styles (the box surrounding a focused Button, for example) only show up when navigational keypresses occur (through Tab, arrows, PgUp/PgDn, Home and End), and are hidden when mouse interactions occur. This API provides an imperative way to turn them on/off.\n *\n * A use case might be when you have a keypress like ctrl-f6 navigate to a particular region on the page, and want focus to show up.\n *\n * @param enabled - whether to remove or add focus\n *\n * @param target - optional target\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function setFocusVisibility(enabled: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ", target?: "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "enabled",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "target",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "setFocusVisibility"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!setLanguage:function(1)",
          "docComment": "/**\n * Sets the language for the page (by adjusting the lang attribute of the html element).\n *\n * @param language - Language to set.\n *\n * @param persistenceType - Where to persist the value. Default is `sessionStorage` if available.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function setLanguage(language: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", persistenceType?: "
            },
            {
              "kind": "Content",
              "text": "'localStorage' | 'sessionStorage' | 'none'"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "language",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "persistenceType",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "setLanguage"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!setLanguage:function(2)",
          "docComment": "/**\n * Sets the language for the page (by adjusting the lang attribute of the html element).\n *\n * @deprecated\n *\n * Use string parameter version.\n *\n * @param language - Language to set.\n *\n * @param avoidPersisting - If true, don't store the value.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function setLanguage(language: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", avoidPersisting?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 2,
          "parameters": [
            {
              "parameterName": "language",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "avoidPersisting",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "setLanguage"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!setRTL:function(1)",
          "docComment": "/**\n * Sets the rtl state of the page (by adjusting the dir attribute of the html element.)\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function setRTL(isRTL: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ", persistSetting?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "isRTL",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "persistSetting",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "setRTL"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!setSSR:function(1)",
          "docComment": "/**\n * Helper to set ssr mode to simulate no window object returned from getWindow helper.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function setSSR(isEnabled: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "isEnabled",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "setSSR"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluentui/utilities!Settings:type",
          "docComment": "/**\n * @deprecated\n *\n * Use ISettings.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Settings = "
            },
            {
              "kind": "Reference",
              "text": "ISettings",
              "canonicalReference": "@fluentui/utilities!ISettings:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Settings",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluentui/utilities!SettingsFunction:type",
          "docComment": "/**\n * @deprecated\n *\n * Use ISettingsFunction.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SettingsFunction = "
            },
            {
              "kind": "Reference",
              "text": "ISettingsFunction",
              "canonicalReference": "@fluentui/utilities!ISettingsFunction:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "SettingsFunction",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!setWarningCallback:function(1)",
          "docComment": "/**\n * Configures the warning callback. Passing in undefined will reset it to use the default console.warn function.\n *\n * @param warningCallback - Callback to override the generated warnings.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function setWarningCallback(warningCallback?: "
            },
            {
              "kind": "Content",
              "text": "(message: string) => void"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "warningCallback",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "setWarningCallback"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!shallowCompare:function(1)",
          "docComment": "/**\n * Compares a to b and b to a.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function shallowCompare<TA extends "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", TB extends "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ">(a: "
            },
            {
              "kind": "Content",
              "text": "TA"
            },
            {
              "kind": "Content",
              "text": ", b: "
            },
            {
              "kind": "Content",
              "text": "TB"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "a",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            },
            {
              "parameterName": "b",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "TA",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TB",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "shallowCompare"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!shouldWrapFocus:function(1)",
          "docComment": "/**\n * Determines if an, or any of its ancestors, sepcificies that it doesn't want focus to wrap\n *\n * @param element - element to start searching from\n *\n * @param noWrapDataAttribute - the no wrap data attribute to match (either)\n *\n * @returns true if focus should wrap, false otherwise\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function shouldWrapFocus(element: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": ", noWrapDataAttribute: "
            },
            {
              "kind": "Content",
              "text": "'data-no-vertical-wrap' | 'data-no-horizontal-wrap'"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "element",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "noWrapDataAttribute",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "shouldWrapFocus"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!styled:function(1)",
          "docComment": "/**\n * The styled HOC wrapper allows you to create a functional wrapper around a given component which will resolve getStyles functional props, and mix customized props passed in using concatStyleSets.\n *\n * @param Component - The unstyled base component to render, which receives styles.\n *\n * @param baseStyles - The styles which should be curried with the component.\n *\n * @param getProps - A helper which provides default props.\n *\n * @param customizable - An object which defines which props can be customized using the Customizer.\n *\n * @param pure - A boolean indicating if the component should avoid re-rendering when props haven't changed. Note that pure should not be used on components which allow children, or take in complex objects or arrays as props which could mutate on every render.\n *\n * @example\n * ```tsx\n * export const Toggle = styled(\n *   ToggleBase,\n *   props => ({ root: { background: 'red' }})\n * );\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function styled<TComponentProps extends "
            },
            {
              "kind": "Reference",
              "text": "IPropsWithStyles",
              "canonicalReference": "@fluentui/utilities!IPropsWithStyles:interface"
            },
            {
              "kind": "Content",
              "text": "<TStyleProps, TStyleSet>"
            },
            {
              "kind": "Content",
              "text": ", TStyleProps, TStyleSet extends "
            },
            {
              "kind": "Reference",
              "text": "IStyleSet",
              "canonicalReference": "@fluentui/merge-styles!IStyleSet:type"
            },
            {
              "kind": "Content",
              "text": "<TStyleSet>"
            },
            {
              "kind": "Content",
              "text": ">(Component: "
            },
            {
              "kind": "Reference",
              "text": "React.ComponentClass",
              "canonicalReference": "@types/react!~React.ComponentClass:interface"
            },
            {
              "kind": "Content",
              "text": "<TComponentProps> | "
            },
            {
              "kind": "Reference",
              "text": "React.FunctionComponent",
              "canonicalReference": "@types/react!~React.FunctionComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<TComponentProps>"
            },
            {
              "kind": "Content",
              "text": ", baseStyles: "
            },
            {
              "kind": "Reference",
              "text": "IStyleFunctionOrObject",
              "canonicalReference": "@fluentui/merge-styles!IStyleFunctionOrObject:type"
            },
            {
              "kind": "Content",
              "text": "<TStyleProps, TStyleSet>"
            },
            {
              "kind": "Content",
              "text": ", getProps?: "
            },
            {
              "kind": "Content",
              "text": "(props: TComponentProps) => "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<TComponentProps>"
            },
            {
              "kind": "Content",
              "text": ", customizable?: "
            },
            {
              "kind": "Reference",
              "text": "ICustomizableProps",
              "canonicalReference": "@fluentui/utilities!ICustomizableProps:interface"
            },
            {
              "kind": "Content",
              "text": ", pure?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "React.FunctionComponent",
              "canonicalReference": "@types/react!~React.FunctionComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<TComponentProps>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 23,
            "endIndex": 25
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "Component",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              }
            },
            {
              "parameterName": "baseStyles",
              "parameterTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 14
              }
            },
            {
              "parameterName": "getProps",
              "parameterTypeTokenRange": {
                "startIndex": 15,
                "endIndex": 18
              }
            },
            {
              "parameterName": "customizable",
              "parameterTypeTokenRange": {
                "startIndex": 19,
                "endIndex": 20
              }
            },
            {
              "parameterName": "pure",
              "parameterTypeTokenRange": {
                "startIndex": 21,
                "endIndex": 22
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "TComponentProps",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TStyleProps",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TStyleSet",
              "constraintTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "styled"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!styled:function(2)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function styled<TComponentProps extends "
            },
            {
              "kind": "Reference",
              "text": "IPropsWithStyles",
              "canonicalReference": "@fluentui/utilities!IPropsWithStyles:interface"
            },
            {
              "kind": "Content",
              "text": "<TStyleProps, TStyleSet> & "
            },
            {
              "kind": "Reference",
              "text": "React.RefAttributes",
              "canonicalReference": "@types/react!~React.RefAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<TRef>"
            },
            {
              "kind": "Content",
              "text": ", TStyleProps, TStyleSet extends "
            },
            {
              "kind": "Reference",
              "text": "IStyleSet",
              "canonicalReference": "@fluentui/merge-styles!IStyleSet:type"
            },
            {
              "kind": "Content",
              "text": "<TStyleSet>"
            },
            {
              "kind": "Content",
              "text": ", TRef = "
            },
            {
              "kind": "Content",
              "text": "unknown"
            },
            {
              "kind": "Content",
              "text": ">(Component: "
            },
            {
              "kind": "Reference",
              "text": "React.ComponentClass",
              "canonicalReference": "@types/react!~React.ComponentClass:interface"
            },
            {
              "kind": "Content",
              "text": "<TComponentProps> | "
            },
            {
              "kind": "Reference",
              "text": "React.FunctionComponent",
              "canonicalReference": "@types/react!~React.FunctionComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<TComponentProps>"
            },
            {
              "kind": "Content",
              "text": ", baseStyles: "
            },
            {
              "kind": "Reference",
              "text": "IStyleFunctionOrObject",
              "canonicalReference": "@fluentui/merge-styles!IStyleFunctionOrObject:type"
            },
            {
              "kind": "Content",
              "text": "<TStyleProps, TStyleSet>"
            },
            {
              "kind": "Content",
              "text": ", getProps?: "
            },
            {
              "kind": "Content",
              "text": "(props: TComponentProps) => "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<TComponentProps>"
            },
            {
              "kind": "Content",
              "text": ", customizable?: "
            },
            {
              "kind": "Reference",
              "text": "ICustomizableProps",
              "canonicalReference": "@fluentui/utilities!ICustomizableProps:interface"
            },
            {
              "kind": "Content",
              "text": ", pure?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "React.ForwardRefExoticComponent",
              "canonicalReference": "@types/react!~React.ForwardRefExoticComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "React.PropsWithoutRef",
              "canonicalReference": "@types/react!~React.PropsWithoutRef:type"
            },
            {
              "kind": "Content",
              "text": "<TComponentProps> & "
            },
            {
              "kind": "Reference",
              "text": "React.RefAttributes",
              "canonicalReference": "@types/react!~React.RefAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<TRef>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 27,
            "endIndex": 33
          },
          "releaseTag": "Public",
          "overloadIndex": 2,
          "parameters": [
            {
              "parameterName": "Component",
              "parameterTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 15
              }
            },
            {
              "parameterName": "baseStyles",
              "parameterTypeTokenRange": {
                "startIndex": 16,
                "endIndex": 18
              }
            },
            {
              "parameterName": "getProps",
              "parameterTypeTokenRange": {
                "startIndex": 19,
                "endIndex": 22
              }
            },
            {
              "parameterName": "customizable",
              "parameterTypeTokenRange": {
                "startIndex": 23,
                "endIndex": 24
              }
            },
            {
              "parameterName": "pure",
              "parameterTypeTokenRange": {
                "startIndex": 25,
                "endIndex": 26
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "TComponentProps",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TStyleProps",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TStyleSet",
              "constraintTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TRef",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              }
            }
          ],
          "name": "styled"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@fluentui/utilities!StyleFunction:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type StyleFunction<TStyleProps, TStyleSet> = "
            },
            {
              "kind": "Reference",
              "text": "IStyleFunctionOrObject",
              "canonicalReference": "@fluentui/merge-styles!IStyleFunctionOrObject:type"
            },
            {
              "kind": "Content",
              "text": "<TStyleProps, TStyleSet> & {\n    __cachedInputs__: ("
            },
            {
              "kind": "Reference",
              "text": "IStyleFunctionOrObject",
              "canonicalReference": "@fluentui/merge-styles!IStyleFunctionOrObject:type"
            },
            {
              "kind": "Content",
              "text": "<TStyleProps, TStyleSet> | undefined)[];\n    __noStyleOverride__: boolean;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "StyleFunction",
          "typeParameters": [
            {
              "typeParameterName": "TStyleProps",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TStyleSet",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/utilities!tableProperties:var",
          "docComment": "/**\n * An array of TABLE tag properties and events.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "tableProperties: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, number>"
            }
          ],
          "releaseTag": "Public",
          "name": "tableProperties",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/utilities!tdProperties:var",
          "docComment": "/**\n * An array of TD tag properties and events.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "tdProperties: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, number>"
            }
          ],
          "releaseTag": "Public",
          "name": "tdProperties",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/utilities!textAreaProperties:var",
          "docComment": "/**\n * An array of TEXTAREA tag properties and events.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "textAreaProperties: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, number>"
            }
          ],
          "releaseTag": "Public",
          "name": "textAreaProperties",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/utilities!thProperties:var",
          "docComment": "/**\n * An array of TH tag properties and events.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "thProperties: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, number>"
            }
          ],
          "releaseTag": "Public",
          "name": "thProperties",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!toMatrix:function(1)",
          "docComment": "/**\n * Convert the given array to a matrix with columnCount number of columns.\n *\n * @param items - The array to convert\n *\n * @param columnCount - The number of columns for the resulting matrix\n *\n * @returns A matrix of items\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function toMatrix<T>(items: "
            },
            {
              "kind": "Content",
              "text": "T[]"
            },
            {
              "kind": "Content",
              "text": ", columnCount: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T[][]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "items",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "columnCount",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "toMatrix"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/utilities!trProperties:var",
          "docComment": "/**\n * An array of TR tag properties and events.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "trProperties: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, number>"
            }
          ],
          "releaseTag": "Public",
          "name": "trProperties",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!unhoistMethods:function(1)",
          "docComment": "/**\n * Provides a method for convenience to unhoist hoisted methods.\n *\n * @param source - The source object upon which methods were hoisted.\n *\n * @param methodNames - An array of method names to unhoist.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function unhoistMethods(source: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", methodNames: "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "source",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "methodNames",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "unhoistMethods"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!useCustomizationSettings:function(1)",
          "docComment": "/**\n * Hook to get Customizations settings from Customizations singleton or CustomizerContext. It will trigger component state update on settings change observed.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useCustomizationSettings(properties: "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": ", scopeName?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "ISettings",
              "canonicalReference": "@fluentui/utilities!ISettings:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "properties",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "scopeName",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "useCustomizationSettings"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!useFocusRects:function(1)",
          "docComment": "/**\n * Initializes the logic which:\n *\n * 1. Subscribes keydown and mousedown events. (It will only do it once per window, so it's safe to call this method multiple times.) 2. When the user presses directional keyboard keys, adds the 'ms-Fabric--isFocusVisible' classname to the document body, removes the 'ms-Fabric-isFocusHidden' classname. 3. When the user clicks a mouse button, adds the 'ms-Fabric-isFocusHidden' classname to the document body, removes the 'ms-Fabric--isFocusVisible' classname.\n *\n * This logic allows components on the page to conditionally render focus treatments based on the existence of global classnames, which simplifies logic overall.\n *\n * @param rootRef - A Ref object. Focus rectangle can be applied on itself and all its children.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useFocusRects(rootRef?: "
            },
            {
              "kind": "Reference",
              "text": "React.RefObject",
              "canonicalReference": "@types/react!~React.RefObject:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "rootRef",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            }
          ],
          "name": "useFocusRects"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!values:function(1)",
          "docComment": "/**\n * Get all values in an object dictionary\n *\n * @param obj - The dictionary to get values for\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function values<T>(obj: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "obj",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "values"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@fluentui/utilities!videoProperties:var",
          "docComment": "/**\n * An array of VIDEO tag properties and events.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "videoProperties: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, number>"
            }
          ],
          "releaseTag": "Public",
          "name": "videoProperties",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!warn:function(1)",
          "docComment": "/**\n * Sends a warning to console, if the api is present.\n *\n * @param message - Warning message.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function warn(message: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "message",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "warn"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!warnConditionallyRequiredProps:function(1)",
          "docComment": "/**\n * Warns when props are required if a condition is met.\n *\n * @param componentName - The name of the component being used.\n *\n * @param props - The props passed into the component.\n *\n * @param requiredProps - The name of the props that are required when the condition is met.\n *\n * @param conditionalPropName - The name of the prop that the condition is based on.\n *\n * @param condition - Whether the condition is met.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function warnConditionallyRequiredProps<P>(componentName: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", props: "
            },
            {
              "kind": "Content",
              "text": "P"
            },
            {
              "kind": "Content",
              "text": ", requiredProps: "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": ", conditionalPropName: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", condition: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 11,
            "endIndex": 12
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "componentName",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "props",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "requiredProps",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            },
            {
              "parameterName": "conditionalPropName",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              }
            },
            {
              "parameterName": "condition",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "P",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "warnConditionallyRequiredProps"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!warnControlledUsage:function(1)",
          "docComment": "/**\n * Check for and warn on the following error conditions with a form component: - A value prop is provided (indicated it's being used as controlled) without a change handler, and the component is not read-only - Both the value and defaultValue props are provided - The component is attempting to switch between controlled and uncontrolled\n *\n * The messages mimic the warnings React gives for these error conditions on input elements. The warning will only be displayed once per component ID.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function warnControlledUsage<P>(params: "
            },
            {
              "kind": "Reference",
              "text": "IWarnControlledUsageParams",
              "canonicalReference": "@fluentui/utilities!IWarnControlledUsageParams:interface"
            },
            {
              "kind": "Content",
              "text": "<P>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "params",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "P",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "warnControlledUsage"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!warnDeprecations:function(1)",
          "docComment": "/**\n * Warns when a deprecated props are being used.\n *\n * @param componentName - The name of the component being used.\n *\n * @param props - The props passed into the component.\n *\n * @param deprecationMap - The map of deprecations, where key is the prop name and the value is either null or a replacement prop name.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function warnDeprecations<P>(componentName: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", props: "
            },
            {
              "kind": "Content",
              "text": "P"
            },
            {
              "kind": "Content",
              "text": ", deprecationMap: "
            },
            {
              "kind": "Reference",
              "text": "ISettingsMap",
              "canonicalReference": "@fluentui/utilities!ISettingsMap:type"
            },
            {
              "kind": "Content",
              "text": "<P>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 8,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "componentName",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "props",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "deprecationMap",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "P",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "warnDeprecations"
        },
        {
          "kind": "Function",
          "canonicalReference": "@fluentui/utilities!warnMutuallyExclusive:function(1)",
          "docComment": "/**\n * Warns when two props which are mutually exclusive are both being used.\n *\n * @param componentName - The name of the component being used.\n *\n * @param props - The props passed into the component.\n *\n * @param exclusiveMap - A map where the key is a parameter, and the value is the other parameter.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function warnMutuallyExclusive<P>(componentName: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", props: "
            },
            {
              "kind": "Content",
              "text": "P"
            },
            {
              "kind": "Content",
              "text": ", exclusiveMap: "
            },
            {
              "kind": "Reference",
              "text": "ISettingsMap",
              "canonicalReference": "@fluentui/utilities!ISettingsMap:type"
            },
            {
              "kind": "Content",
              "text": "<P>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 8,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "componentName",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "props",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "exclusiveMap",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "P",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "warnMutuallyExclusive"
        }
      ]
    }
  ]
}
